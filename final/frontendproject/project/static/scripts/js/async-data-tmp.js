(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("../Harshil595/csvjson.json", module);
(function(){
module.exports=[
  {
    "abbr": "A",
    "name": "Agilent Technologies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AA",
    "name": "Alcoa Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AABA",
    "name": "Altaba Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AAC",
    "name": "AAC Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AAL",
    "name": "American Airlines Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AAMC",
    "name": "Altisource Asset Management Corp",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "AAME",
    "name": "Atlantic American Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AAN",
    "name": "Aaron&#39;s,  Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AAOI",
    "name": "Applied Optoelectronics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AAON",
    "name": "AAON, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AAP",
    "name": "Advance Auto Parts Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AAPL",
    "name": "Apple Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AAT",
    "name": "American Assets Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AAU",
    "name": "Almaden Minerals, Ltd.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "AAWW",
    "name": "Atlas Air Worldwide Holdings",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AAXJ",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AAXN",
    "name": "Axon Enterprise, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AB",
    "name": "AllianceBernstein Holding L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ABAC",
    "name": "Renmin Tianli Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ABB",
    "name": "ABB Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ABBV",
    "name": "AbbVie Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ABC",
    "name": "AmerisourceBergen Corporation (Holding Co)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ABCB",
    "name": "Ameris Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ABCD",
    "name": "Cambium Learning Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ABDC",
    "name": "Alcentra Capital Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ABEO",
    "name": "Abeona Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ABEOW",
    "name": "Abeona Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ABEV",
    "name": "Ambev S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ABG",
    "name": "Asbury Automotive Group Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ABIL",
    "name": "Ability Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ABIO",
    "name": "ARCA biopharma, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ABM",
    "name": "ABM Industries Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ABMD",
    "name": "ABIOMED, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ABR",
    "name": "Arbor Realty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ABR^A",
    "name": "Arbor Realty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ABR^B",
    "name": "Arbor Realty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ABR^C",
    "name": "Arbor Realty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ABT",
    "name": "Abbott Laboratories",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ABTX",
    "name": "Allegiance Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ABUS",
    "name": "Arbutus Biopharma Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ABX",
    "name": "Barrick Gold Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AC",
    "name": "Associated Capital Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ACA",
    "name": "Arcosa, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ACAD",
    "name": "ACADIA Pharmaceuticals Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACB",
    "name": "Aurora Cannabis Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ACBI",
    "name": "Atlantic Capital Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACC",
    "name": "American Campus Communities Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ACCO",
    "name": "Acco Brands Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ACER",
    "name": "Acer Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACET",
    "name": "Aceto Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACGL",
    "name": "Arch Capital Group Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACGLO",
    "name": "Arch Capital Group Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACGLP",
    "name": "Arch Capital Group Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACH",
    "name": "Aluminum Corporation of China Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ACHC",
    "name": "Acadia Healthcare Company, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACHN",
    "name": "Achillion Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACHV",
    "name": "Achieve Life Sciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACIA",
    "name": "Acacia Communications, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACIU",
    "name": "AC Immune SA",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACIW",
    "name": "ACI Worldwide, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACLS",
    "name": "Axcelis Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACM",
    "name": "AECOM",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ACMR",
    "name": "ACM Research, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACN",
    "name": "Accenture plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ACNB",
    "name": "ACNB Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACOR",
    "name": "Acorda Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACP",
    "name": "Aberdeen Income Credit Strategies Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ACRE",
    "name": "Ares Commercial Real Estate Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ACRS",
    "name": "Aclaris Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACRX",
    "name": "AcelRx Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACST",
    "name": "Acasti Pharma, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACT",
    "name": "AdvisorShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACTG",
    "name": "Acacia Research Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACU",
    "name": "Acme United Corporation.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ACV",
    "name": "AllianzGI Diversified Income & Convertible Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ACWI",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACWX",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ACY",
    "name": "AeroCentury Corp.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ADAP",
    "name": "Adaptimmune Therapeutics plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADBE",
    "name": "Adobe Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADC",
    "name": "Agree Realty Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ADES",
    "name": "Advanced Emissions Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADI",
    "name": "Analog Devices, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADIL",
    "name": "Adial Pharmaceuticals, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADILW",
    "name": "Adial Pharmaceuticals, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADM",
    "name": "Archer-Daniels-Midland Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ADMA",
    "name": "ADMA Biologics Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADMP",
    "name": "Adamis Pharmaceuticals Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADMS",
    "name": "Adamas Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADNT",
    "name": "Adient plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ADOM",
    "name": "ADOMANI, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADP",
    "name": "Automatic Data Processing, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADRA",
    "name": "Invesco BLDRS Index Funds Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADRD",
    "name": "Invesco BLDRS Index Funds Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADRE",
    "name": "Invesco BLDRS Index Funds Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADRO",
    "name": "Aduro Biotech, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADRU",
    "name": "Invesco BLDRS Index Funds Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADS",
    "name": "Alliance Data Systems Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ADSK",
    "name": "Autodesk, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADSW",
    "name": "Advanced Disposal Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ADT",
    "name": "ADT Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ADTN",
    "name": "ADTRAN, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADUS",
    "name": "Addus HomeCare Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADVM",
    "name": "Adverum Biotechnologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ADX",
    "name": "Adams Diversified Equity Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ADXS",
    "name": "Advaxis, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AE",
    "name": "Adams Resources & Energy, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "AEB",
    "name": "Aegon NV",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AED",
    "name": "Aegon NV",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AEE",
    "name": "Ameren Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AEF",
    "name": "Aberdeen Emerging Markets Equity Income Fund, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "AEG",
    "name": "Aegon NV",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AEGN",
    "name": "Aegion Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AEH",
    "name": "Aegon NV",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AEHR",
    "name": "Aehr Test Systems",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AEIS",
    "name": "Advanced Energy Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AEL",
    "name": "American Equity Investment Life Holding Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AEM",
    "name": "Agnico Eagle Mines Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AEMD",
    "name": "Aethlon Medical, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AEO",
    "name": "American Eagle Outfitters, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AEP",
    "name": "American Electric Power Company, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AER",
    "name": "Aercap Holdings N.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AERI",
    "name": "Aerie Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AES",
    "name": "The AES Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AETI",
    "name": "American Electric Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AEY",
    "name": "ADDvantage Technologies Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AEYE",
    "name": "AudioEye, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AEZS",
    "name": "AEterna Zentaris Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AFB",
    "name": "Alliance National Municipal Income Fund Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AFC",
    "name": "Ares Capital Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AFG",
    "name": "American Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AFGE",
    "name": "American Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AFGH",
    "name": "American Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AFH",
    "name": "Atlas Financial Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AFHBL",
    "name": "Atlas Financial Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AFI",
    "name": "Armstrong Flooring, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AFIN",
    "name": "American Finance Trust, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AFL",
    "name": "Aflac Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AFMD",
    "name": "Affimed N.V.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AFSI^A",
    "name": "AmTrust Financial Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AFSI^B",
    "name": "AmTrust Financial Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AFSI^C",
    "name": "AmTrust Financial Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AFSI^D",
    "name": "AmTrust Financial Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AFSI^E",
    "name": "AmTrust Financial Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AFSI^F",
    "name": "AmTrust Financial Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AFSS",
    "name": "AmTrust Financial Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AFST",
    "name": "AmTrust Financial Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AFT",
    "name": "Apollo Senior Floating Rate Fund Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AG",
    "name": "First Majestic Silver Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AGCO",
    "name": "AGCO Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AGD",
    "name": "Aberdeen Global Dynamic Dividend Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AGE",
    "name": "AgeX Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "AGEN",
    "name": "Agenus Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AGFS",
    "name": "AgroFresh Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AGFSW",
    "name": "AgroFresh Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AGI",
    "name": "Alamos Gold Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AGIO",
    "name": "Agios Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AGLE",
    "name": "Aeglea BioTherapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AGM",
    "name": "Federal Agricultural Mortgage Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AGM^A",
    "name": "Federal Agricultural Mortgage Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AGM.A",
    "name": "Federal Agricultural Mortgage Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AGM^B",
    "name": "Federal Agricultural Mortgage Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AGM^C",
    "name": "Federal Agricultural Mortgage Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AGMH",
    "name": "AGM Group Holdings Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AGN",
    "name": "Allergan plc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AGNC",
    "name": "AGNC Investment Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AGNCB",
    "name": "AGNC Investment Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AGNCN",
    "name": "AGNC Investment Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AGND",
    "name": "WisdomTree Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AGO",
    "name": "Assured Guaranty Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AGO^B",
    "name": "Assured Guaranty Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AGO^E",
    "name": "Assured Guaranty Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AGO^F",
    "name": "Assured Guaranty Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AGR",
    "name": "Avangrid, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AGRO",
    "name": "Adecoagro S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AGRX",
    "name": "Agile Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AGS",
    "name": "PlayAGS, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AGTC",
    "name": "Applied Genetic Technologies Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AGX",
    "name": "Argan, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AGYS",
    "name": "Agilysys, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AGZD",
    "name": "WisdomTree Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AHC",
    "name": "A.H. Belo Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AHH",
    "name": "Armada Hoffler Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AHL",
    "name": "Aspen Insurance Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AHL^C",
    "name": "Aspen Insurance Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AHL^D",
    "name": "Aspen Insurance Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AHPA",
    "name": "Avista Healthcare Public Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AHPAU",
    "name": "Avista Healthcare Public Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AHPAW",
    "name": "Avista Healthcare Public Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AHPI",
    "name": "Allied Healthcare Products, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AHT",
    "name": "Ashford Hospitality Trust Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AHT^D",
    "name": "Ashford Hospitality Trust Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AHT^F",
    "name": "Ashford Hospitality Trust Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AHT^G",
    "name": "Ashford Hospitality Trust Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AHT^H",
    "name": "Ashford Hospitality Trust Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AHT^I",
    "name": "Ashford Hospitality Trust Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AI",
    "name": "Arlington Asset Investment Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AIA",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AI^B",
    "name": "Arlington Asset Investment Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AIC",
    "name": "Arlington Asset Investment Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AIF",
    "name": "Apollo Tactical Income Fund Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AIG",
    "name": "American International Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AIG.WS",
    "name": "American International Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AIHS",
    "name": "Senmiao Technology Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AIMC",
    "name": "Altra Industrial Motion Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AIMT",
    "name": "Aimmune Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AIN",
    "name": "Albany International Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AINC",
    "name": "Ashford Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "AINV",
    "name": "Apollo Investment Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AIPT",
    "name": "Precision Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AIQ",
    "name": "Global X Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AIR",
    "name": "AAR Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AIRG",
    "name": "Airgain, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AIRI",
    "name": "Air Industries Group",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "AIRR",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AIRT",
    "name": "Air T, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AIT",
    "name": "Applied Industrial Technologies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AIV",
    "name": "Apartment Investment and Management Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AIV^A",
    "name": "Apartment Investment and Management Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AIW",
    "name": "Arlington Asset Investment Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AIY",
    "name": "Apollo Investment Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AIZ",
    "name": "Assurant, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AIZP",
    "name": "Assurant, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AJG",
    "name": "Arthur J. Gallagher & Co.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AJRD",
    "name": "Aerojet Rocketdyne Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AJX",
    "name": "Great Ajax Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AJXA",
    "name": "Great Ajax Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AKAM",
    "name": "Akamai Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AKAO",
    "name": "Achaogen, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AKBA",
    "name": "Akebia Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AKCA",
    "name": "Akcea Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AKER",
    "name": "Akers Biosciences Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AKG",
    "name": "Asanko Gold Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "AKO.A",
    "name": "Embotelladora Andina S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AKO.B",
    "name": "Embotelladora Andina S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AKP",
    "name": "Alliance California Municipal Income Fund Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AKR",
    "name": "Acadia Realty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AKRX",
    "name": "Akorn, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AKS",
    "name": "AK Steel Holding Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AKTS",
    "name": "Akoustis Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AKTX",
    "name": "Akari Therapeutics Plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AL",
    "name": "Air Lease Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALAC",
    "name": "Alberton Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALACR",
    "name": "Alberton Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALACU",
    "name": "Alberton Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALACW",
    "name": "Alberton Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALB",
    "name": "Albemarle Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALBO",
    "name": "Albireo Pharma, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALCO",
    "name": "Alico, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALDR",
    "name": "Alder BioPharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALDX",
    "name": "Aldeyra Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALE",
    "name": "Allete, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALEX",
    "name": "Alexander & Baldwin, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALG",
    "name": "Alamo Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALGN",
    "name": "Align Technology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALGR",
    "name": "Allegro Merger Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALGRR",
    "name": "Allegro Merger Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALGRU",
    "name": "Allegro Merger Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALGRW",
    "name": "Allegro Merger Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALGT",
    "name": "Allegiant Travel Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALIM",
    "name": "Alimera Sciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALJJ",
    "name": "ALJ Regional Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALK",
    "name": "Alaska Air Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALKS",
    "name": "Alkermes plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALL",
    "name": "Allstate Corporation (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALL^A",
    "name": "Allstate Corporation (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALL^B",
    "name": "Allstate Corporation (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALL^D",
    "name": "Allstate Corporation (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALLE",
    "name": "Allegion plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALL^E",
    "name": "Allstate Corporation (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALL^F",
    "name": "Allstate Corporation (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALL^G",
    "name": "Allstate Corporation (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALLK",
    "name": "Allakos Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALLO",
    "name": "Allogene Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALLT",
    "name": "Allot Communications Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALLY",
    "name": "Ally Financial Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALLY^A",
    "name": "Ally Financial Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALNA",
    "name": "Allena Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALNY",
    "name": "Alnylam Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALO",
    "name": "Alio Gold Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ALOT",
    "name": "AstroNova, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALPN",
    "name": "Alpine Immune Sciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALP^Q",
    "name": "Alabama Power Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALQA",
    "name": "Alliqua BioMedical, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALRM",
    "name": "Alarm.com Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALRN",
    "name": "Aileron Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALSK",
    "name": "Alaska Communications Systems Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALSN",
    "name": "Allison Transmission Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALT",
    "name": "Altimmune, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALTM",
    "name": "Altus Midstream Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALTMW",
    "name": "Altus Midstream Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALTR",
    "name": "Altair Engineering Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALTY",
    "name": "Global X Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALV",
    "name": "Autoliv, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALX",
    "name": "Alexander&#39;s, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ALXN",
    "name": "Alexion Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALYA",
    "name": "Alithya Group inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ALZH",
    "name": "Alzheon, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AM",
    "name": "Antero Midstream Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMAG",
    "name": "AMAG Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMAL",
    "name": "Amalgamated Bank",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMAT",
    "name": "Applied Materials, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMBA",
    "name": "Ambarella, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMBC",
    "name": "Ambac Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMBCW",
    "name": "Ambac Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMBO",
    "name": "Ambow Education Holding Ltd.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "AMBR",
    "name": "Amber Road, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMC",
    "name": "AMC Entertainment Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMCA",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMCIU",
    "name": "AMCI Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMCN",
    "name": "AirMedia Group Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMCX",
    "name": "AMC Networks Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMD",
    "name": "Advanced Micro Devices, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AME",
    "name": "AMTEK, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMED",
    "name": "Amedisys Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMEH",
    "name": "Apollo Medical Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMG",
    "name": "Affiliated Managers Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMGN",
    "name": "Amgen Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMGP",
    "name": "Antero Midstream GP LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMH",
    "name": "American Homes 4 Rent",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMH^D",
    "name": "American Homes 4 Rent",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMH^E",
    "name": "American Homes 4 Rent",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMH^F",
    "name": "American Homes 4 Rent",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMH^G",
    "name": "American Homes 4 Rent",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMH^H",
    "name": "American Homes 4 Rent",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMID",
    "name": "American Midstream Partners, LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMKR",
    "name": "Amkor Technology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMMA",
    "name": "Alliance MMA, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMN",
    "name": "AMN Healthcare Services Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMNB",
    "name": "American National Bankshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMOT",
    "name": "Allied Motion Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMOV",
    "name": "America Movil, S.A.B. de C.V.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMOV",
    "name": "America Movil, S.A.B. de C.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMP",
    "name": "AMERIPRISE FINANCIAL SERVICES, INC.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMPE",
    "name": "Ampio Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "AMPH",
    "name": "Amphastar Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMR",
    "name": "Alta Mesa Resources, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMRB",
    "name": "American River Bankshares",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMRC",
    "name": "Ameresco, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMRH",
    "name": "Ameri Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMRHW",
    "name": "Ameri Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMRK",
    "name": "A-Mark Precious Metals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMRN",
    "name": "Amarin Corporation plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMRS",
    "name": "Amyris, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMRWW",
    "name": "Alta Mesa Resources, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMRX",
    "name": "Amneal Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMS",
    "name": "American Shared Hospital Services",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "AMSC",
    "name": "American Superconductor Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMSF",
    "name": "AMERISAFE, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMSWA",
    "name": "American Software, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMT",
    "name": "American Tower Corporation (REIT)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMTB",
    "name": "Mercantil Bank Holding Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMTBB",
    "name": "Mercantil Bank Holding Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMTD",
    "name": "TD Ameritrade Holding Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMTX",
    "name": "Aemetis, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMWD",
    "name": "American Woodmark Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AMX",
    "name": "America Movil, S.A.B. de C.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AMZN",
    "name": "Amazon.com, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AN",
    "name": "AutoNation, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ANAB",
    "name": "AnaptysBio, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ANAT",
    "name": "American National Insurance Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ANCX",
    "name": "Access National Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ANDE",
    "name": "The Andersons, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ANDX",
    "name": "Andeavor Logistics LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ANET",
    "name": "Arista Networks, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ANF",
    "name": "Abercrombie & Fitch Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ANFI",
    "name": "Amira Nature Foods Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ANGI",
    "name": "ANGI Homeservices Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ANGO",
    "name": "AngioDynamics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ANH",
    "name": "Anworth Mortgage Asset  Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ANH^A",
    "name": "Anworth Mortgage Asset  Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ANH^B",
    "name": "Anworth Mortgage Asset  Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ANH^C",
    "name": "Anworth Mortgage Asset  Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ANIK",
    "name": "Anika Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ANIP",
    "name": "ANI Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ANIX",
    "name": "Anixa Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ANSS",
    "name": "ANSYS, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ANTM",
    "name": "Anthem, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ANY",
    "name": "Sphere 3D Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AOBC",
    "name": "American Outdoor Brands Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AOD",
    "name": "Aberdeen Total Dynamic Dividend Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AON",
    "name": "Aon plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AOS",
    "name": "Smith (A.O.) Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AOSL",
    "name": "Alpha and Omega Semiconductor Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AP",
    "name": "Ampco-Pittsburgh Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "APA",
    "name": "Apache Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "APAM",
    "name": "Artisan Partners Asset Management Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "APB",
    "name": "Asia Pacific Fund, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "APC",
    "name": "Anadarko Petroleum Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "APD",
    "name": "Air Products and Chemicals, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "APDN",
    "name": "Applied DNA Sciences Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "APDNW",
    "name": "Applied DNA Sciences Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "APEI",
    "name": "American Public Education, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "APEN",
    "name": "Apollo Endosurgery, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "APF",
    "name": "Morgan Stanley Asia-Pacific Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "APH",
    "name": "Amphenol Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "APHA",
    "name": "Aphria Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "APHB",
    "name": "AmpliPhi Biosciences Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "APLE",
    "name": "Apple Hospitality REIT, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "APLS",
    "name": "Apellis Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "APO",
    "name": "Apollo Global Management, LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "APO^A",
    "name": "Apollo Global Management, LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "APO^B",
    "name": "Apollo Global Management, LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "APOG",
    "name": "Apogee Enterprises, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "APOP",
    "name": "Cellect Biotechnology Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "APOPW",
    "name": "Cellect Biotechnology Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "APPF",
    "name": "AppFolio, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "APPN",
    "name": "Appian Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "APPS",
    "name": "Digital Turbine, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "APRI",
    "name": "Apricus Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "APRN",
    "name": "Blue Apron Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "APT",
    "name": "Alpha Pro Tech, Ltd.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "APTI",
    "name": "Apptio, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "APTO",
    "name": "Aptose Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "APTS",
    "name": "Preferred Apartment Communities, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "APTV",
    "name": "Aptiv PLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "APTX",
    "name": "Aptinyx Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "APU",
    "name": "AmeriGas Partners, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "APVO",
    "name": "Aptevo Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "APWC",
    "name": "Asia Pacific Wire & Cable Corporation Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "APY",
    "name": "Apergy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AQ",
    "name": "Aquantia Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AQB",
    "name": "AquaBounty Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AQMS",
    "name": "Aqua Metals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AQN",
    "name": "Algonquin Power & Utilities Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AQNA",
    "name": "Algonquin Power & Utilities Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AQST",
    "name": "Aquestive Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AQUA",
    "name": "Evoqua Water Technologies Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AQXP",
    "name": "Aquinox Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AR",
    "name": "Antero Resources Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARA",
    "name": "American Renal Associates Holdings, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARAV",
    "name": "Aravive, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARAY",
    "name": "Accuray Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARC",
    "name": "ARC Document Solutions, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARCB",
    "name": "ArcBest Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARCC",
    "name": "Ares Capital Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARCE",
    "name": "Arco Platform Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARCH",
    "name": "Arch Coal, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARCI",
    "name": "Appliance Recycling Centers of America, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARCO",
    "name": "Arcos Dorados Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARCT",
    "name": "Arcturus Therapeutics Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARCW",
    "name": "ARC Group Worldwide, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARD",
    "name": "Ardagh Group S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARDC",
    "name": "Ares Dynamic Credit Allocation Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARDM",
    "name": "Aradigm Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARDS",
    "name": "Aridis Pharmaceuticals Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARDX",
    "name": "Ardelyx, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARE",
    "name": "Alexandria Real Estate Equities, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARE^D",
    "name": "Alexandria Real Estate Equities, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARES",
    "name": "Ares Management Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARES^A",
    "name": "Ares Management Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AREX",
    "name": "Approach Resources Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARGD",
    "name": "Argo Group International Holdings, Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARGO",
    "name": "Argo Group International Holdings, Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARGX",
    "name": "argenx SE",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARI",
    "name": "Apollo Commercial Real Estate Finance",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARI^C",
    "name": "Apollo Commercial Real Estate Finance",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARII",
    "name": "American Railcar Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARKR",
    "name": "Ark Restaurants Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARL",
    "name": "American Realty Investors, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARLO",
    "name": "Arlo Technologies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARLP",
    "name": "Alliance Resource Partners, L.P.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARMK",
    "name": "Aramark",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARNA",
    "name": "Arena Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARNC",
    "name": "Arconic Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARNC^",
    "name": "Arconic Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "AROC",
    "name": "Archrock, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AROW",
    "name": "Arrow Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARPO",
    "name": "Aerpio Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARQL",
    "name": "ArQule, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARR",
    "name": "ARMOUR Residential REIT, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARR^A",
    "name": "ARMOUR Residential REIT, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARR^B",
    "name": "ARMOUR Residential REIT, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARRS",
    "name": "ARRIS International plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARRY",
    "name": "Array BioPharma Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARTNA",
    "name": "Artesian Resources Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARTW",
    "name": "Art&#39;s-Way Manufacturing Co., Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARTX",
    "name": "Arotech Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARVN",
    "name": "Arvinas, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARW",
    "name": "Arrow Electronics, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ARWR",
    "name": "Arrowhead Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARYA",
    "name": "ARYA Sciences Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARYAU",
    "name": "ARYA Sciences Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ARYAW",
    "name": "ARYA Sciences Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ASA",
    "name": "ASA Gold and Precious Metals Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ASB",
    "name": "Associated Banc-Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ASB^C",
    "name": "Associated Banc-Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ASB^D",
    "name": "Associated Banc-Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ASB^E",
    "name": "Associated Banc-Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ASC",
    "name": "Ardmore Shipping Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ASCMA",
    "name": "Ascent Capital Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ASET",
    "name": "FlexShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ASFI",
    "name": "Asta Funding, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ASG",
    "name": "Liberty All-Star Growth Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ASGN",
    "name": "ASGN Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ASH",
    "name": "Ashland Global Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ASIX",
    "name": "AdvanSix Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ASLN",
    "name": "ASLAN Pharmaceuticals Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ASM",
    "name": "Avino Silver",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ASMB",
    "name": "Assembly Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ASML",
    "name": "ASML Holding N.V.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ASNA",
    "name": "Ascena Retail Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ASND",
    "name": "Ascendis Pharma A/S",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ASNS",
    "name": "Arsanis, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ASPN",
    "name": "Aspen Aerogels, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ASPS",
    "name": "Altisource Portfolio Solutions S.A.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ASPU",
    "name": "Aspen Group Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ASR",
    "name": "Grupo Aeroportuario del Sureste, S.A. de C.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ASRT",
    "name": "Assertio Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ASRV",
    "name": "AmeriServ Financial Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ASRVP",
    "name": "AmeriServ Financial Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AST",
    "name": "Asterias Biotherapeutics, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ASTC",
    "name": "Astrotech Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ASTE",
    "name": "Astec Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ASUR",
    "name": "Asure Software Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ASV",
    "name": "ASV Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ASX",
    "name": "ASE Technology Holding Co., Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ASYS",
    "name": "Amtech Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AT",
    "name": "Atlantic Power Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ATAI",
    "name": "ATA Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATAX",
    "name": "America First Multifamily Investors, L.P.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATEC",
    "name": "Alphatec Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATEN",
    "name": "A10 Networks, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ATEST",
    "name": "NASDAQ TEST STOCK",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ATEST.A",
    "name": "NASDAQ TEST STOCK",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ATEST.B",
    "name": "NASDAQ TEST STOCK",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ATEST.C",
    "name": "NASDAQ TEST STOCK",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ATGE",
    "name": "Adtalem Global Education Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ATH",
    "name": "Athene Holding Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ATHM",
    "name": "Autohome Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ATHN",
    "name": "athenahealth, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATHX",
    "name": "Athersys, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATI",
    "name": "Allegheny Technologies Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ATIS",
    "name": "Attis Industries Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATISW",
    "name": "Attis Industries Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATKR",
    "name": "Atkore International Group Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ATLC",
    "name": "Atlanticus Holdings Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATLO",
    "name": "Ames National Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATNI",
    "name": "ATN International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATNM",
    "name": "Actinium Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ATNX",
    "name": "Athenex, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATO",
    "name": "Atmos Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ATOM",
    "name": "Atomera Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATOS",
    "name": "Atossa Genetics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATR",
    "name": "AptarGroup, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ATRA",
    "name": "Atara Biotherapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATRC",
    "name": "AtriCure, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATRI",
    "name": "Atrion Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATRO",
    "name": "Astronics Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATRS",
    "name": "Antares Pharma, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATSG",
    "name": "Air Transport Services Group, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATTO",
    "name": "Atento S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ATTU",
    "name": "Attunity Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATU",
    "name": "Actuant Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ATUS",
    "name": "Altice USA, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ATV",
    "name": "Acorn International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ATVI",
    "name": "Activision Blizzard, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ATXI",
    "name": "Avenue Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AU",
    "name": "AngloGold Ashanti Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AUBN",
    "name": "Auburn National Bancorporation, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AUDC",
    "name": "AudioCodes Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AUG",
    "name": "Auryn Resources Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "AUMN",
    "name": "Golden Minerals Company",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "AUO",
    "name": "AU Optronics Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AUPH",
    "name": "Aurinia Pharmaceuticals Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AUTL",
    "name": "Autolus Therapeutics plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AUTO",
    "name": "AutoWeb, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AUY",
    "name": "Yamana Gold Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AVA",
    "name": "Avista Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AVAL",
    "name": "Grupo Aval Acciones y Valores S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AVAV",
    "name": "AeroVironment, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AVB",
    "name": "AvalonBay Communities, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AVCO",
    "name": "Avalon GloboCare Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AVD",
    "name": "American Vanguard Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AVDL",
    "name": "Avadel Pharmaceuticals plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AVEO",
    "name": "AVEO Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AVGO",
    "name": "Broadcom Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AVGR",
    "name": "Avinger, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AVH",
    "name": "Avianca Holdings S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AVID",
    "name": "Avid Technology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AVK",
    "name": "Advent Claymore Convertible Securities and Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AVLR",
    "name": "Avalara, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AVNS",
    "name": "Avanos Medical, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AVNW",
    "name": "Aviat Networks, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AVP",
    "name": "Avon Products, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AVRO",
    "name": "AVROBIO, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AVT",
    "name": "Avnet, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AVX",
    "name": "AVX Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AVXL",
    "name": "Anavex Life Sciences Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AVY",
    "name": "Avery Dennison Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AVYA",
    "name": "Avaya Holdings Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AWF",
    "name": "Alliance World Dollar Government Fund II",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AWI",
    "name": "Armstrong World Industries Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AWK",
    "name": "American Water Works",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AWP",
    "name": "Aberdeen Global Premier Properties Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AWR",
    "name": "American States Water Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AWRE",
    "name": "Aware, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AWSM",
    "name": "Cool Holdings Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AWX",
    "name": "Avalon Holdings Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "AX",
    "name": "Axos Financial, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AXAS",
    "name": "Abraxas Petroleum Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AXDX",
    "name": "Accelerate Diagnostics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AXE",
    "name": "Anixter International Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AXGN",
    "name": "AxoGen, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AXL",
    "name": "American Axle & Manufacturing Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AXNX",
    "name": "Axonics Modulation Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AXO",
    "name": "Axos Financial, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AXON",
    "name": "Axovant Sciences Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AXP",
    "name": "American Express Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AXR",
    "name": "AMREP Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AXS",
    "name": "Axis Capital Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AXS^D",
    "name": "Axis Capital Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AXS^E",
    "name": "Axis Capital Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AXSM",
    "name": "Axsome Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AXTA",
    "name": "Axalta Coating Systems Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AXTI",
    "name": "AXT Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AXU",
    "name": "Alexco Resource Corp",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "AY",
    "name": "Atlantica Yield plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AYI",
    "name": "Acuity Brands, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AYR",
    "name": "Aircastle Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AYTU",
    "name": "Aytu BioScience, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AYX",
    "name": "Alteryx, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AZN",
    "name": "Astrazeneca PLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AZO",
    "name": "AutoZone, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AZPN",
    "name": "Aspen Technology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AZRE",
    "name": "Azure Power Global Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AZRX",
    "name": "AzurRx BioPharma, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "AZUL",
    "name": "Azul S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "AZZ",
    "name": "AZZ Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "B",
    "name": "Barnes Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BA",
    "name": "Boeing Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BABA",
    "name": "Alibaba Group Holding Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BABY",
    "name": "Natus Medical Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BAC",
    "name": "Bank of America Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BAC^A",
    "name": "Bank of America Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BAC^B",
    "name": "Bank of America Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BAC^C",
    "name": "Bank of America Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BAC^E",
    "name": "Bank of America Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BAC^K",
    "name": "Bank of America Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BAC^L",
    "name": "Bank of America Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BAC^W",
    "name": "Bank of America Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BAC.WS.A",
    "name": "Bank of America Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BAC^Y",
    "name": "Bank of America Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BAF",
    "name": "BlackRock Income Investment Quality Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BAH",
    "name": "Booz Allen Hamilton Holding Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BAK",
    "name": "Braskem S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BAM",
    "name": "Brookfield Asset Management Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BANC",
    "name": "Banc of California, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BANC^D",
    "name": "Banc of California, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BANC^E",
    "name": "Banc of California, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BAND",
    "name": "Bandwidth Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BANF",
    "name": "BancFirst Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BANFP",
    "name": "BancFirst Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BANR",
    "name": "Banner Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BANX",
    "name": "StoneCastle Financial Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BAP",
    "name": "Credicorp Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BAS",
    "name": "Basic Energy Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BASI",
    "name": "Bioanalytical Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BATRA",
    "name": "Liberty Media Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BATRK",
    "name": "Liberty Media Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BAX",
    "name": "Baxter International Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BB",
    "name": "BlackBerry Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BBBY",
    "name": "Bed Bath & Beyond Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BBC",
    "name": "Virtus LifeSci Biotech Clinical Trials ETF",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BBD",
    "name": "Banco Bradesco Sa",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BBDC",
    "name": "Barings BDC, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BBDO",
    "name": "Banco Bradesco Sa",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BBF",
    "name": "BlackRock Municipal Income Investment Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BBGI",
    "name": "Beasley Broadcast Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BBH",
    "name": "VanEck Vectors ETF Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BBK",
    "name": "Blackrock Municipal Bond Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BBL",
    "name": "BHP Group Plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BBN",
    "name": "BalckRock Taxable Municipal Bond Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BBOX",
    "name": "Black Box Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BBP",
    "name": "Virtus LifeSci Biotech Products ETF",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BBSI",
    "name": "Barrett Business Services, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BBT",
    "name": "BB&T Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BBT^D",
    "name": "BB&T Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BBT^E",
    "name": "BB&T Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BBT^F",
    "name": "BB&T Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BBT^G",
    "name": "BB&T Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BBT^H",
    "name": "BB&T Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BBU",
    "name": "Brookfield Business Partners L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BBVA",
    "name": "Banco Bilbao Viscaya Argentaria S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BBW",
    "name": "Build-A-Bear Workshop, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BBX",
    "name": "BBX Capital Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BBY",
    "name": "Best Buy Co., Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BC",
    "name": "Brunswick Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BC^A",
    "name": "Brunswick Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BCAC",
    "name": "Bison Capital Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BCACR",
    "name": "Bison Capital Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BCACU",
    "name": "Bison Capital Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BCACW",
    "name": "Bison Capital Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BCBP",
    "name": "BCB Bancorp, Inc. (NJ)",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BCC",
    "name": "Boise Cascade, L.L.C.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BCE",
    "name": "BCE, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BCEI",
    "name": "Bonanza Creek Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BCH",
    "name": "Banco De Chile",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BCLI",
    "name": "Brainstorm Cell Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BCML",
    "name": "BayCom Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BCNA",
    "name": "Reality Shares ETF Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BCO",
    "name": "Brink&#39;s Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BCOM",
    "name": "B Communications Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BCOR",
    "name": "Blucora, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BCOV",
    "name": "Brightcove Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BCPC",
    "name": "Balchem Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BCRH",
    "name": "Blue Capital Reinsurance Holdings Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BCRX",
    "name": "BioCryst Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BCS",
    "name": "Barclays PLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BCS^D.CL",
    "name": "Barclays PLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BCSF",
    "name": "Bain Capital Specialty Finance, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BCTF",
    "name": "Bancorp 34, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BCV",
    "name": "Bancroft Fund Limited",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BCV^A",
    "name": "Bancroft Fund Limited",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BCX",
    "name": "BlackRock Resources",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BDC",
    "name": "Belden Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BDC^B",
    "name": "Belden Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BDGE",
    "name": "Bridge Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BDJ",
    "name": "Blackrock Enhanced Equity Dividend Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BDL",
    "name": "Flanigan&#39;s Enterprises, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BDN",
    "name": "Brandywine Realty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BDR",
    "name": "Blonder Tongue Laboratories, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BDSI",
    "name": "BioDelivery Sciences International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BDX",
    "name": "Becton, Dickinson and Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BDXA",
    "name": "Becton, Dickinson and Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BE",
    "name": "Bloom Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BEAT",
    "name": "BioTelemetry, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BECN",
    "name": "Beacon Roofing Supply, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BEDU",
    "name": "Bright Scholar Education Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BEL",
    "name": "Belmond Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BELFA",
    "name": "Bel Fuse Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BELFB",
    "name": "Bel Fuse Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BEN",
    "name": "Franklin Resources, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BEP",
    "name": "Brookfield Renewable Partners L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BERY",
    "name": "Berry Global Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BF.A",
    "name": "Brown Forman Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BFAM",
    "name": "Bright Horizons Family Solutions Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BF.B",
    "name": "Brown Forman Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BFC",
    "name": "Bank First National Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BFIN",
    "name": "BankFinancial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BFIT",
    "name": "Global X Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BFK",
    "name": "BlackRock Municipal Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BFO",
    "name": "Blackrock Florida Municipal 2020 Term Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BFR",
    "name": "BBVA Banco Frances S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BFRA",
    "name": "Biofrontera AG",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BFS",
    "name": "Saul Centers, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BFS^C",
    "name": "Saul Centers, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BFS^D",
    "name": "Saul Centers, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BFST",
    "name": "Business First Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BFY",
    "name": "BlackRock New York Municipal Income Trust II",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BFZ",
    "name": "BlackRock California Municipal Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BG",
    "name": "Bunge Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BGB",
    "name": "Blackstone / GSO Strategic Credit Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BGCP",
    "name": "BGC Partners, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BGCPV",
    "name": "BGC Partners, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BGFV",
    "name": "Big 5 Sporting Goods Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BGG",
    "name": "Briggs & Stratton Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BGH",
    "name": "Babson Global Short Duration High Yield Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BGI",
    "name": "Birks Group Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BGIO",
    "name": "BlackRock 2022 Global Income Opportunity Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BGNE",
    "name": "BeiGene, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BGR",
    "name": "BlackRock Energy and Resources Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BGRN",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BGS",
    "name": "B&G Foods, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BGSF",
    "name": "BG Staffing Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BGT",
    "name": "Blackrock Global",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BGX",
    "name": "Blackstone GSO Long Short Credit Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BGY",
    "name": "BLACKROCK INTERNATIONAL, LTD.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BH",
    "name": "Biglari Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BH.A",
    "name": "Biglari Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BHB",
    "name": "Bar Harbor Bankshares, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BHBK",
    "name": "Blue Hills Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BHC",
    "name": "Bausch Health Companies Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BHE",
    "name": "Benchmark Electronics, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BHF",
    "name": "Brighthouse Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BHFAL",
    "name": "Brighthouse Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BHGE",
    "name": "Baker Hughes, a GE company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BHK",
    "name": "Blackrock Core Bond Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BHLB",
    "name": "Berkshire Hills Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BHP",
    "name": "BHP Billiton Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BHR",
    "name": "Braemar Hotels & Resorts Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BHR^B",
    "name": "Braemar Hotels & Resorts Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BHR^D",
    "name": "Braemar Hotels & Resorts Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BHTG",
    "name": "BioHiTech Global, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BHV",
    "name": "BlackRock Virginia Municipal Bond Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BHVN",
    "name": "Biohaven Pharmaceutical Holding Company Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BIB",
    "name": "ProShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BICK",
    "name": "First Trust Exchange-Traded Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BID",
    "name": "Sotheby&#39;s",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BIDU",
    "name": "Baidu, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BIF",
    "name": "USLIFE Income Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BIG",
    "name": "Big Lots, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BIIB",
    "name": "Biogen Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BILI",
    "name": "Bilibili Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BIO",
    "name": "Bio-Rad Laboratories, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BIO.B",
    "name": "Bio-Rad Laboratories, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BIOC",
    "name": "Biocept, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BIOL",
    "name": "Biolase, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BIOS",
    "name": "BioScrip, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BIP",
    "name": "Brookfield Infrastructure Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BIS",
    "name": "ProShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BIT",
    "name": "BlackRock Multi-Sector Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BITA",
    "name": "Bitauto Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BJ",
    "name": "BJ&#39;s Wholesale Club Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BJRI",
    "name": "BJ&#39;s Restaurants, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BJZ",
    "name": "Blackrock California Municipal 2018 Term Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BK",
    "name": "Bank Of New York Mellon Corporation (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BK^C",
    "name": "Bank Of New York Mellon Corporation (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BKCC",
    "name": "BlackRock Capital Investment Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BKD",
    "name": "Brookdale Senior Living Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BKE",
    "name": "Buckle, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BKEP",
    "name": "Blueknight Energy Partners L.P., L.L.C.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BKEPP",
    "name": "Blueknight Energy Partners L.P., L.L.C.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BKH",
    "name": "Black Hills Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BKI",
    "name": "Black Knight, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BKJ",
    "name": "Bancorp of New Jersey, Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BKK",
    "name": "Blackrock Municipal 2020 Term Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BKN",
    "name": "BlackRock Investment Quality Municipal Trust Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BKNG",
    "name": "Booking Holdings Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BKS",
    "name": "Barnes & Noble, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BKSC",
    "name": "Bank of South Carolina Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BKT",
    "name": "BlackRock Income Trust Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BKTI",
    "name": "BK Technologies, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BKU",
    "name": "BankUnited, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BKYI",
    "name": "BIO-key International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BL",
    "name": "BlackLine, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BLBD",
    "name": "Blue Bird Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BLCM",
    "name": "Bellicum Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BLCN",
    "name": "Reality Shares ETF Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BLD",
    "name": "TopBuild Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BLDP",
    "name": "Ballard Power Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BLDR",
    "name": "Builders FirstSource, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BLE",
    "name": "BlackRock Municipal Income Trust II",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BLFS",
    "name": "BioLife Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BLH",
    "name": "Blackrock New York Municipal 2018 Term Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BLIN",
    "name": "Bridgeline Digital, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BLK",
    "name": "BlackRock, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BLKB",
    "name": "Blackbaud, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BLL",
    "name": "Ball Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BLMN",
    "name": "Bloomin&#39; Brands, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BLMT",
    "name": "BSB Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BLNK",
    "name": "Blink Charging Co.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BLNKW",
    "name": "Blink Charging Co.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BLPH",
    "name": "Bellerophon Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BLRX",
    "name": "BioLineRx Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BLUE",
    "name": "bluebird bio, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BLW",
    "name": "Citigroup Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BLX",
    "name": "Banco Latinoamericano de Comercio Exterior, S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BMA",
    "name": "Macro Bank Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BMCH",
    "name": "BMC Stock Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BME",
    "name": "Blackrock Health Sciences Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BMI",
    "name": "Badger Meter, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BML^G",
    "name": "Bank of America Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BML^H",
    "name": "Bank of America Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BML^J",
    "name": "Bank of America Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BML^L",
    "name": "Bank of America Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BMLP",
    "name": "Bank Of Montreal",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BMO",
    "name": "Bank Of Montreal",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BMRA",
    "name": "Biomerica, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BMRC",
    "name": "Bank of Marin Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BMRN",
    "name": "BioMarin Pharmaceutical Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BMS",
    "name": "Bemis Company, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BMTC",
    "name": "Bryn Mawr Bank Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BMY",
    "name": "Bristol-Myers Squibb Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BNCL",
    "name": "Beneficial Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BND",
    "name": "Vanguard Bond Index Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BNDW",
    "name": "Vanguard Scottsdale Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BNDX",
    "name": "Vanguard Charlotte Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BNED",
    "name": "Barnes & Noble Education, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BNFT",
    "name": "Benefitfocus, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BNGO",
    "name": "Bionano Genomics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BNGOW",
    "name": "Bionano Genomics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BNS",
    "name": "Bank of Nova Scotia (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BNSO",
    "name": "Bonso Electronics International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BNTC",
    "name": "Benitec Biopharma Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BNTCW",
    "name": "Benitec Biopharma Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BNY",
    "name": "BlackRock New York Investment Quality Municipal Trust Inc. (Th",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BOCH",
    "name": "Bank of Commerce Holdings (CA)",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BOE",
    "name": "Blackrock Global",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BOH",
    "name": "Bank of Hawaii Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BOJA",
    "name": "Bojangles&#39;, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BOKF",
    "name": "BOK Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BOKFL",
    "name": "BOK Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BOLD",
    "name": "Audentes Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BOMN",
    "name": "Boston Omaha Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BOOM",
    "name": "DMC Global Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BOOT",
    "name": "Boot Barn Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BORN",
    "name": "China New Borun Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BOSC",
    "name": "B.O.S. Better Online Solutions",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BOTJ",
    "name": "Bank of the James Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BOTZ",
    "name": "Global X Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BOX",
    "name": "Box, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BOXL",
    "name": "Boxlight Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BP",
    "name": "BP p.l.c.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BPFH",
    "name": "Boston Private Financial Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BPI",
    "name": "Bridgepoint Education, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BPK",
    "name": "Blackrock Municipal 2018 Term Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BPL",
    "name": "Buckeye Partners L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BPMC",
    "name": "Blueprint Medicines Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BPMP",
    "name": "BP Midstream Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BPMX",
    "name": "BioPharmX Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BPOP",
    "name": "Popular, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BPOPM",
    "name": "Popular, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BPOPN",
    "name": "Popular, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BPR",
    "name": "Brookfield Property REIT Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BPRAP",
    "name": "Brookfield Property REIT Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BPRN",
    "name": "The Bank of Princeton",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BPT",
    "name": "BP Prudhoe Bay Royalty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BPTH",
    "name": "Bio-Path Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BPY",
    "name": "Brookfield Property Partners L.P.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BQH",
    "name": "Blackrock New York Municipal Bond Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BR",
    "name": "Broadridge Financial Solutions, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BRAC",
    "name": "Black Ridge Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BRACR",
    "name": "Black Ridge Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BRACU",
    "name": "Black Ridge Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BRACW",
    "name": "Black Ridge Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BRC",
    "name": "Brady Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BREW",
    "name": "Craft Brew Alliance, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BRFS",
    "name": "BRF S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BRG",
    "name": "Bluerock Residential Growth REIT, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BRG^A",
    "name": "Bluerock Residential Growth REIT, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BRG^C",
    "name": "Bluerock Residential Growth REIT, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BRG^D",
    "name": "Bluerock Residential Growth REIT, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BRID",
    "name": "Bridgford Foods Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BRK.A",
    "name": "Berkshire Hathaway Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BRK.B",
    "name": "Berkshire Hathaway Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BRKL",
    "name": "Brookline Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BRKR",
    "name": "Bruker Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BRKS",
    "name": "Brooks Automation, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BRN",
    "name": "Barnwell Industries, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BRO",
    "name": "Brown & Brown, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BRPA",
    "name": "Big Rock Partners Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BRPAR",
    "name": "Big Rock Partners Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BRPAU",
    "name": "Big Rock Partners Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BRPAW",
    "name": "Big Rock Partners Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BRQS",
    "name": "Borqs Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BRS",
    "name": "Bristow Group Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BRSS",
    "name": "Global Brass and Copper Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BRT",
    "name": "BRT Apartments Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BRX",
    "name": "Brixmor Property Group Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BRY",
    "name": "Berry Petroleum Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BSA",
    "name": "BrightSphere Investment Group plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BSAC",
    "name": "Banco Santander Chile",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BSBR",
    "name": "Banco Santander Brasil SA",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BSD",
    "name": "BlackRock Strategic Municipal Trust Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BSE",
    "name": "Blackrock New York Municipal Income Quality Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BSET",
    "name": "Bassett Furniture Industries, Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BSGM",
    "name": "BioSig Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BSIG",
    "name": "BrightSphere Investment Group plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BSL",
    "name": "Blackstone GSO Senior Floating Rate Term Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BSM",
    "name": "Black Stone Minerals, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BSMX",
    "name": "Banco Santander Mexico, S.A., Institucion de Ban",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BSQR",
    "name": "BSQUARE Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BSRR",
    "name": "Sierra Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BST",
    "name": "BlackRock Science and Technology Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BSTC",
    "name": "BioSpecifics Technologies Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BSTI",
    "name": "BEST Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BSVN",
    "name": "Bank7 Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BSX",
    "name": "Boston Scientific Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BT",
    "name": "BT Group plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BTA",
    "name": "BlackRock Long-Term Municipal Advantage Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BTAI",
    "name": "BioXcel Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BTE",
    "name": "Baytex Energy Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BTEC",
    "name": "Principal Exchange-Traded Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BTG",
    "name": "B2Gold Corp",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BTI",
    "name": "British American Tobacco p.l.c.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BTN",
    "name": "Ballantyne Strong, Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BTO",
    "name": "John Hancock Financial Opportunities Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BTT",
    "name": "BlackRock Municipal Target Term Trust Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BTU",
    "name": "Peabody Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BTX",
    "name": "BioTime, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BTZ",
    "name": "BlackRock Credit Allocation Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BUD",
    "name": "Anheuser-Busch Inbev SA",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BUI",
    "name": "BlackRock Utility, Infrastructure & Power Opportun",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BURG",
    "name": "Chanticleer Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BURL",
    "name": "Burlington Stores, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BUSE",
    "name": "First Busey Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BV",
    "name": "BrightView Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BVN",
    "name": "Buenaventura Mining Company Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BVNSC",
    "name": "Brandes Investment Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BVSN",
    "name": "BroadVision, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BVX",
    "name": "Bovie Medical Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BVXV",
    "name": "BiondVax Pharmaceuticals Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BVXVW",
    "name": "BiondVax Pharmaceuticals Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BW",
    "name": "Babcock",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BWA",
    "name": "BorgWarner Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BWB",
    "name": "Bridgewater Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BWEN",
    "name": "Broadwind Energy, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BWFG",
    "name": "Bankwell Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BWG",
    "name": "BrandywineGLOBAL Global Income Opportunities Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BWL.A",
    "name": "Bowl America, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "BWMCU",
    "name": "Boxwood Merger Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BWXT",
    "name": "BWX Technologies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BX",
    "name": "The Blackstone Group L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BXC",
    "name": "BlueLinx Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BXE",
    "name": "Bellatrix Exploration Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BXG",
    "name": "Bluegreen Vacations Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BXMT",
    "name": "Capital Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BXMX",
    "name": "Nuveen S&P 500 Buy-Write Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BXP",
    "name": "Boston Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BXP^B",
    "name": "Boston Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BXS",
    "name": "BancorpSouth Bank",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BY",
    "name": "Byline Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BYD",
    "name": "Boyd Gaming Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BYFC",
    "name": "Broadway Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BYM",
    "name": "Blackrock Municipal Income Quality Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BYSI",
    "name": "BeyondSpring, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "BZH",
    "name": "Beazer Homes USA, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BZM",
    "name": "BlackRock Maryland Municipal Bond Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "BZUN",
    "name": "Baozun Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "C",
    "name": "Citigroup Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CAAP",
    "name": "Corporacion America Airports SA",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CAAS",
    "name": "China Automotive Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CABO",
    "name": "Cable One, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CAC",
    "name": "Camden National Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CACC",
    "name": "Credit Acceptance Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CACG",
    "name": "Legg Mason ETF Investment Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CACI",
    "name": "CACI International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CADC",
    "name": "China Advanced Construction Materials Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CADE",
    "name": "Cadence Bancorporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CAE",
    "name": "CAE Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CAF",
    "name": "Morgan Stanley China A Share Fund Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CAG",
    "name": "ConAgra Brands, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CAH",
    "name": "Cardinal Health, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CAI",
    "name": "CAI International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CAI^A",
    "name": "CAI International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CAI^B",
    "name": "CAI International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CAJ",
    "name": "Canon, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CAKE",
    "name": "The Cheesecake Factory Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CAL",
    "name": "Caleres, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CALA",
    "name": "Calithera Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CALM",
    "name": "Cal-Maine Foods, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CALX",
    "name": "Calix, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CAMP",
    "name": "CalAmp Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CAMT",
    "name": "Camtek Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CANF",
    "name": "Can-Fite Biopharma Ltd",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CANG",
    "name": "Cango Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CAPL",
    "name": "CrossAmerica Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CAPR",
    "name": "Capricor Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CAR",
    "name": "Avis Budget Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CARA",
    "name": "Cara Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CARB",
    "name": "Carbonite, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CARG",
    "name": "CarGurus, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CARO",
    "name": "Carolina Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CARS",
    "name": "Cars.com Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CART",
    "name": "Carolina Trust BancShares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CARV",
    "name": "Carver Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CARZ",
    "name": "First Trust Exchange-Traded Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CASA",
    "name": "Casa Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CASH",
    "name": "Meta Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CASI",
    "name": "CASI Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CASM",
    "name": "CAS Medical Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CASS",
    "name": "Cass Information Systems, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CASY",
    "name": "Caseys General Stores, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CAT",
    "name": "Caterpillar, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CATB",
    "name": "Catabasis Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CATC",
    "name": "Cambridge Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CATH",
    "name": "Global X Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CATM",
    "name": "Cardtronics plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CATO",
    "name": "Cato Corporation (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CATS",
    "name": "Catasys, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CATY",
    "name": "Cathay General Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CATYW",
    "name": "Cathay General Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CAW",
    "name": "CCA Industries, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CB",
    "name": "Chubb Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CBAN",
    "name": "Colony Bankcorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CBAT",
    "name": "CBAK Energy Technology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CBAY",
    "name": "CymaBay Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CBB",
    "name": "Cincinnati Bell Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CBB^B",
    "name": "Cincinnati Bell Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CBD",
    "name": "Companhia Brasileira de Distribuicao",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CBFV",
    "name": "CB Financial Services, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CBH",
    "name": "AllianzGI Convertible & Income 2024 Target Term Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CBIO",
    "name": "Catalyst Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CBK",
    "name": "Christopher & Banks Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CBL",
    "name": "CBL & Associates Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CBL^D",
    "name": "CBL & Associates Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CBL^E",
    "name": "CBL & Associates Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CBLI",
    "name": "Cleveland BioLabs, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CBLK",
    "name": "Carbon Black, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CBM",
    "name": "Cambrex Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CBMB",
    "name": "CBM Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CBMG",
    "name": "Cellular Biomedicine Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CBNK",
    "name": "Capital Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CBO",
    "name": "CBO (Listing Market - NYSE - Networks A/E)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CBOE",
    "name": "Cboe Global Markets, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CBPO",
    "name": "China Biologic Products Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CBPX",
    "name": "Continental Building Products, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CBRE",
    "name": "CBRE Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CBRL",
    "name": "Cracker Barrel Old Country Store, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CBS",
    "name": "CBS Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CBS.A",
    "name": "CBS Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CBSH",
    "name": "Commerce Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CBSHP",
    "name": "Commerce Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CBT",
    "name": "Cabot Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CBTX",
    "name": "CBTX, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CBU",
    "name": "Community Bank System, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CBX",
    "name": "CBX (Listing Market NYSE Networks AE",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CBZ",
    "name": "CBIZ, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CC",
    "name": "Chemours Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCA",
    "name": "MFS California Insured Municipal Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CCB",
    "name": "Coastal Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CCBG",
    "name": "Capital City Bank Group",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CCC",
    "name": "Churchill Capital Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCCL",
    "name": "China Ceramics Co., Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CCC.U",
    "name": "Churchill Capital Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCC.WS",
    "name": "Churchill Capital Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCD",
    "name": "Calamos Dynamic Convertible & Income Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CCEP",
    "name": "Coca-Cola European Partners plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCF",
    "name": "Chase Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CCH",
    "name": "Collier Creek Holdings",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCH.U",
    "name": "Collier Creek Holdings",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCH.WS",
    "name": "Collier Creek Holdings",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCI",
    "name": "Crown Castle International Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCI^A",
    "name": "Crown Castle International Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCIH",
    "name": "ChinaCache International Holdings Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CCJ",
    "name": "Cameco Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCK",
    "name": "Crown Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCL",
    "name": "Carnival Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCLP",
    "name": "CSI Compressco LP",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CCM",
    "name": "Concord Medical Services Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCMP",
    "name": "Cabot Microelectronics Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CCNE",
    "name": "CNB Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CCNI",
    "name": "Command Center, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CCO",
    "name": "Clear Channel Outdoor Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCOI",
    "name": "Cogent Communications Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CCR",
    "name": "CONSOL Coal Resources LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCRC",
    "name": "China Customer Relations Centers, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CCRN",
    "name": "Cross Country Healthcare, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CCS",
    "name": "Century Communities, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCT",
    "name": "Corporate Capital Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCU",
    "name": "Compania Cervecerias Unidas, S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CCXI",
    "name": "ChemoCentryx, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CCZ",
    "name": "Comcast Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CDAY",
    "name": "Ceridian HCM Holding Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CDC",
    "name": "Victory Portfolios II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CDE",
    "name": "Coeur Mining, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CDEV",
    "name": "Centennial Resource Development, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CDK",
    "name": "CDK Global, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CDL",
    "name": "Victory Portfolios II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CDLX",
    "name": "Cardlytics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CDMO",
    "name": "Avid Bioservices, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CDMOP",
    "name": "Avid Bioservices, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CDNA",
    "name": "CareDx, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CDNS",
    "name": "Cadence Design Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CDOR",
    "name": "Condor Hospitality Trust, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CDOR",
    "name": "Condor Hospitality Trust, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CDR",
    "name": "Cedar Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CDR^B",
    "name": "Cedar Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CDR^C",
    "name": "Cedar Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CDTI",
    "name": "CDTI Advanced Materials, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CDTX",
    "name": "Cidara Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CDW",
    "name": "CDW Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CDXC",
    "name": "ChromaDex Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CDXS",
    "name": "Codexis, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CDZI",
    "name": "Cadiz, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CE",
    "name": "Celanese Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CEA",
    "name": "China Eastern Airlines Corporation Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CECE",
    "name": "CECO Environmental Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CECO",
    "name": "Career Education Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CEE",
    "name": "The Central and Eastern Europe Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CEI",
    "name": "Camber Energy, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CEIX",
    "name": "CNX Resources Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CEL",
    "name": "Cellcom Israel, Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CELC",
    "name": "Celcuity Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CELG",
    "name": "Celgene Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CELGZ",
    "name": "Celgene Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CELH",
    "name": "Celsius Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CELP",
    "name": "Cypress Energy Partners, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CEM",
    "name": "ClearBridge MLP and Midstream Fund Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CEMI",
    "name": "Chembio Diagnostics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CEN",
    "name": "Center Coast Brookfield MLP & Energy Infrastructur",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CENT",
    "name": "Central Garden & Pet Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CENTA",
    "name": "Central Garden & Pet Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CENX",
    "name": "Century Aluminum Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CEO",
    "name": "CNOOC Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CEPU",
    "name": "Central Puerto S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CEQP",
    "name": "Crestwood Equity Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CERC",
    "name": "Cerecor Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CERN",
    "name": "Cerner Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CERS",
    "name": "Cerus Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CET",
    "name": "Central Securities Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CETV",
    "name": "Central European Media Enterprises Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CETX",
    "name": "Cemtrex Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CETXP",
    "name": "Cemtrex Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CETXW",
    "name": "Cemtrex Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CEV",
    "name": "Eaton Vance California Municipal Income Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CEVA",
    "name": "CEVA, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CEY",
    "name": "Victory Portfolios II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CEZ",
    "name": "Victory Portfolios II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CF",
    "name": "CF Industries Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CFA",
    "name": "Victory Portfolios II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CFBI",
    "name": "Community First Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CFBK",
    "name": "Central Federal Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CFFI",
    "name": "C&F Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CFFN",
    "name": "Capitol Federal Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CFG",
    "name": "Citizens Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CFMS",
    "name": "ConforMIS, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CFO",
    "name": "Victory Portfolios II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CFR",
    "name": "Cullen/Frost Bankers, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CFR^A",
    "name": "Cullen/Frost Bankers, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CFRX",
    "name": "ContraFect Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CFX",
    "name": "Colfax Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CG",
    "name": "The Carlyle Group L.P.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CGA",
    "name": "China Green Agriculture, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CGBD",
    "name": "TCG BDC, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CGC",
    "name": "Canopy Growth Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CGEN",
    "name": "Compugen Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CGIX",
    "name": "Cancer Genetics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CGNX",
    "name": "Cognex Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CGO",
    "name": "Calamos Global Total Return Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CGVIC",
    "name": "Causeway ETMF Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHA",
    "name": "China Telecom Corp Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHAP",
    "name": "Chaparral Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHCI",
    "name": "Comstock Holding Companies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHCO",
    "name": "City Holding Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHCT",
    "name": "Community Healthcare Trust Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHD",
    "name": "Church & Dwight Company, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHDN",
    "name": "Churchill Downs, Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHE",
    "name": "Chemed Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHEF",
    "name": "The Chefs&#39; Warehouse, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHEK",
    "name": "Check-Cap Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHEKW",
    "name": "Check-Cap Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHEKZ",
    "name": "Check-Cap Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHFC",
    "name": "Chemical Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHFS",
    "name": "CHF Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHGG",
    "name": "Chegg, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHH",
    "name": "Choice Hotels International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHI",
    "name": "Calamos Convertible Opportunities and Income Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHK",
    "name": "Chesapeake Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHK^D",
    "name": "Chesapeake Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHKE",
    "name": "Cherokee Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHKP",
    "name": "Check Point Software Technologies Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHKR",
    "name": "Chesapeake Granite Wash Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHL",
    "name": "China Mobile (Hong Kong) Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHMA",
    "name": "Chiasma, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHMG",
    "name": "Chemung Financial Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHMI",
    "name": "Cherry Hill Mortgage Investment Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHMI^A",
    "name": "Cherry Hill Mortgage Investment Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHN",
    "name": "China Fund, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHNA",
    "name": "ETF Series Solutions",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHNR",
    "name": "China Natural Resources, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHRA",
    "name": "Charah Solutions, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHRS",
    "name": "Coherus BioSciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHRW",
    "name": "C.H. Robinson Worldwide, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHS",
    "name": "Chico&#39;s FAS, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHSCL",
    "name": "CHS Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHSCM",
    "name": "CHS Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHSCN",
    "name": "CHS Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHSCO",
    "name": "CHS Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHSCP",
    "name": "CHS Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHSP",
    "name": "Chesapeake Lodging Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHT",
    "name": "Chunghwa Telecom Co., Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHTR",
    "name": "Charter Communications, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHU",
    "name": "China Unicom (Hong Kong) Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CHUY",
    "name": "Chuy&#39;s Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHW",
    "name": "Calamos Global Dynamic Income Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CHY",
    "name": "Calamos Convertible and High Income Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CI",
    "name": "Cigna Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIA",
    "name": "Citizens, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIB",
    "name": "BanColombia S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIBR",
    "name": "First Trust Exchange-Traded Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CIC",
    "name": "Capitol Investment Corp. IV",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIC.U",
    "name": "Capitol Investment Corp. IV",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIC.WS",
    "name": "Capitol Investment Corp. IV",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CID",
    "name": "Victory Portfolios II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CIDM",
    "name": "Cinedigm Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CIEN",
    "name": "Ciena Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIF",
    "name": "Colonial Intermediate High Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIFS",
    "name": "China Internet Nationwide Financial Services Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CIG",
    "name": "Comp En De Mn Cemig ADS",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIG.C",
    "name": "Comp En De Mn Cemig ADS",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIGI",
    "name": "Colliers International Group Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CII",
    "name": "Blackrock Capital and Income Strategies Fund Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIK",
    "name": "Credit Suisse Asset Management Income Fund, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CIL",
    "name": "Victory Portfolios II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CIM",
    "name": "Chimera Investment Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIM^A",
    "name": "Chimera Investment Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIM^B",
    "name": "Chimera Investment Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIM^C",
    "name": "Chimera Investment Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CINF",
    "name": "Cincinnati Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CINR",
    "name": "Ciner Resources LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIO",
    "name": "City Office REIT, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIO^A",
    "name": "City Office REIT, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIR",
    "name": "CIRCOR International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CISN",
    "name": "Cision Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIT",
    "name": "CIT Group Inc (DEL)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIVB",
    "name": "Civista Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CIVBP",
    "name": "Civista Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CIVEC",
    "name": "Causeway ETMF Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CIVI",
    "name": "Civitas Solutions, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CIX",
    "name": "CompX International Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CIZ",
    "name": "Victory Portfolios II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CIZN",
    "name": "Citizens Holding Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CJ",
    "name": "C&J Energy Services, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "C^J",
    "name": "Citigroup Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CJJD",
    "name": "China Jo-Jo Drugstores, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "C^K",
    "name": "Citigroup Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CKH",
    "name": "SEACOR Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CKPT",
    "name": "Checkpoint Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CKX",
    "name": "CKX Lands, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CL",
    "name": "Colgate-Palmolive Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "C^L",
    "name": "Citigroup Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLAR",
    "name": "Clarus Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLB",
    "name": "Core Laboratories N.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLBK",
    "name": "Columbia Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLBS",
    "name": "Caladrius Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLCT",
    "name": "Collectors Universe, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLD",
    "name": "Cloud Peak Energy Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLDC",
    "name": "China Lending Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLDR",
    "name": "Cloudera, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLDT",
    "name": "Chatham Lodging Trust (REIT)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLDX",
    "name": "Celldex Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLF",
    "name": "Cleveland-Cliffs Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLFD",
    "name": "Clearfield, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLGN",
    "name": "CollPlant Holdings, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLGX",
    "name": "CoreLogic, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLH",
    "name": "Clean Harbors, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLI",
    "name": "Mack-Cali Realty Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLIR",
    "name": "ClearSign Combustion Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLIRW",
    "name": "ClearSign Combustion Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLLS",
    "name": "Cellectis S.A.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLM",
    "name": "Cornerstone Strategic Value Fund, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CLMT",
    "name": "Calumet Specialty Products Partners, L.P.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLNC",
    "name": "Colony Credit Real Estate, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLNE",
    "name": "Clean Energy Fuels Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLNY",
    "name": "Colony Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLNY^B",
    "name": "Colony Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLNY^E",
    "name": "Colony Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLNY^G",
    "name": "Colony Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLNY^H",
    "name": "Colony Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLNY^I",
    "name": "Colony Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLNY^J",
    "name": "Colony Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLPR",
    "name": "Clipper Realty Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLPS",
    "name": "CLPS Incorporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLR",
    "name": "Continental Resources, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLRB",
    "name": "Cellectar Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLRBW",
    "name": "Cellectar Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLRBZ",
    "name": "Cellectar Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLRG",
    "name": "IndexIQ ETF Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLRO",
    "name": "ClearOne, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLS",
    "name": "Celestica, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLSD",
    "name": "Clearside Biomedical, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLSN",
    "name": "Celsion Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLUB",
    "name": "Town Sports International Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLVS",
    "name": "Clovis Oncology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLW",
    "name": "Clearwater Paper Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLWT",
    "name": "Euro Tech Holdings Company Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CLX",
    "name": "Clorox Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CLXT",
    "name": "Calyxt, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CM",
    "name": "Canadian Imperial Bank of Commerce",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CMA",
    "name": "Comerica Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CMC",
    "name": "Commercial Metals Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CMCL",
    "name": "Caledonia Mining Corporation Plc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CMCM",
    "name": "Cheetah Mobile Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CMCO",
    "name": "Columbus McKinnon Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CMCSA",
    "name": "Comcast Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CMCT",
    "name": "CIM Commercial Trust Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CMCTP",
    "name": "CIM Commercial Trust Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CMD",
    "name": "Cantel Medical Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CME",
    "name": "CME Group Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CMFN",
    "name": "CM Finance Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CMFNL",
    "name": "CM Finance Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CMG",
    "name": "Chipotle Mexican Grill, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CMI",
    "name": "Cummins Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CMLS",
    "name": "Cumulus Media Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CMO",
    "name": "Capstead Mortgage Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CMO^E",
    "name": "Capstead Mortgage Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CMP",
    "name": "Compass Minerals International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CMPR",
    "name": "Cimpress N.V",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CMRE",
    "name": "Costamare Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CMRE^B",
    "name": "Costamare Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CMRE^C",
    "name": "Costamare Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CMRE^D",
    "name": "Costamare Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CMRE^E",
    "name": "Costamare Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CMRX",
    "name": "Chimerix, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CMS",
    "name": "CMS Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CMSA",
    "name": "CMS Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CMS^B",
    "name": "CMS Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CMSC",
    "name": "CMS Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CMSS",
    "name": "CM Seven Star Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CMSSR",
    "name": "CM Seven Star Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CMSSU",
    "name": "CM Seven Star Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CMSSW",
    "name": "CM Seven Star Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CMT",
    "name": "Core Molding Technologies Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CMTA",
    "name": "Clementia Pharmaceuticals Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CMTL",
    "name": "Comtech Telecommunications Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CMU",
    "name": "Colonial Municipal Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "C^N",
    "name": "Citigroup Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CNA",
    "name": "CNA Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CNAC",
    "name": "Constellation Alpha Capital Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CNACR",
    "name": "Constellation Alpha Capital Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CNACU",
    "name": "Constellation Alpha Capital Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CNACW",
    "name": "Constellation Alpha Capital Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CNAT",
    "name": "Conatus Pharmaceuticals Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CNBKA",
    "name": "Century Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CNC",
    "name": "Centene Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CNCE",
    "name": "Concert Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CNCR",
    "name": "ETF Series Solutions",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CNDT",
    "name": "Conduent Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CNET",
    "name": "ChinaNet Online Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CNF",
    "name": "CNFinance Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CNFR",
    "name": "Conifer Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CNFRL",
    "name": "Conifer Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CNHI",
    "name": "CNH Industrial N.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CNI",
    "name": "Canadian National Railway Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CNK",
    "name": "Cinemark Holdings Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CNMD",
    "name": "CONMED Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CNNE",
    "name": "Cannae Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CNO",
    "name": "CNO Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CNOB",
    "name": "ConnectOne Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CNP",
    "name": "CenterPoint Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CNP^B",
    "name": "CenterPoint Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CNQ",
    "name": "Canadian Natural Resources Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CNS",
    "name": "Cohen & Steers Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CNSL",
    "name": "Consolidated Communications Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CNST",
    "name": "Constellation Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CNTF",
    "name": "China TechFaith Wireless Communication Technology Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CNTX",
    "name": "Centrexion Therapeutics Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CNTY",
    "name": "Century Casinos, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CNX",
    "name": "CNX Resources Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CNXM",
    "name": "CNX Midstream Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CNXN",
    "name": "PC Connection, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CO",
    "name": "Global Cord Blood Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "COCP",
    "name": "Cocrystal Pharma, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CODA",
    "name": "Coda Octopus Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CODI",
    "name": "Compass Diversified Holdings",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CODI^A",
    "name": "Compass Diversified Holdings",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CODI^B",
    "name": "Compass Diversified Holdings",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CODX",
    "name": "Co-Diagnostics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "COE",
    "name": "China Online Education Group",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "COF",
    "name": "Capital One Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "COF^C",
    "name": "Capital One Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "COF^D",
    "name": "Capital One Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "COF^F",
    "name": "Capital One Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "COF^G",
    "name": "Capital One Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "COF^H",
    "name": "Capital One Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "COF^P",
    "name": "Capital One Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "COG",
    "name": "Cabot Oil & Gas Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "COHN",
    "name": "Cohen & Company Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "COHR",
    "name": "Coherent, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "COHU",
    "name": "Cohu, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "COKE",
    "name": "Coca-Cola Bottling Co. Consolidated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "COLB",
    "name": "Columbia Banking System, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "COLD",
    "name": "Americold Realty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "COLL",
    "name": "Collegium Pharmaceutical, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "COLM",
    "name": "Columbia Sportswear Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "COMM",
    "name": "CommScope Holding Company, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "COMT",
    "name": "iShares U.S. ETF Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CONE",
    "name": "CyrusOne Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CONN",
    "name": "Conn&#39;s, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "COO",
    "name": "The Cooper Companies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "COOP",
    "name": "Mr. Cooper Group Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "COP",
    "name": "ConocoPhillips",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "COR",
    "name": "CoreSite Realty Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CORE",
    "name": "Core-Mark Holding Company, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CORR",
    "name": "CorEnergy Infrastructure Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CORR^A",
    "name": "CorEnergy Infrastructure Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CORT",
    "name": "Corcept Therapeutics Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CORV",
    "name": "Correvio Pharma Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "COST",
    "name": "Costco Wholesale Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "COT",
    "name": "Cott Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "COTY",
    "name": "Coty Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "COUP",
    "name": "Coupa Software Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "COWN",
    "name": "Cowen Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "COWNL",
    "name": "Cowen Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "COWNZ",
    "name": "Cowen Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CP",
    "name": "Canadian Pacific Railway Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CPA",
    "name": "Copa Holdings, S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CPAC",
    "name": "Cementos Pacasmayo S.A.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CPAH",
    "name": "CounterPath Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CPB",
    "name": "Campbell Soup Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CPE",
    "name": "Callon Petroleum Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CPE^A",
    "name": "Callon Petroleum Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CPF",
    "name": "CPB Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CPG",
    "name": "Crescent Point Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CPHC",
    "name": "Canterbury Park Holding Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CPHI",
    "name": "China Pharma Holdings, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CPIX",
    "name": "Cumberland Pharmaceuticals Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CPK",
    "name": "Chesapeake Utilities Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CPL",
    "name": "CPFL Energia S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CPLG",
    "name": "CorePoint Lodging Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CPLP",
    "name": "Capital Product Partners L.P.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CPRT",
    "name": "Copart, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CPRX",
    "name": "Catalyst Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CPS",
    "name": "Cooper-Standard Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CPSH",
    "name": "CPS Technologies Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CPSI",
    "name": "Computer Programs and Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CPSS",
    "name": "Consumer Portfolio Services, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CPST",
    "name": "Capstone Turbine Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CPT",
    "name": "Camden Property Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CPTA",
    "name": "Capitala Finance Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CPTAG",
    "name": "Capitala Finance Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CPTAL",
    "name": "Capitala Finance Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CQP",
    "name": "Cheniere Energy Partners, LP",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CR",
    "name": "Crane Co.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CRAI",
    "name": "CRA International,Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CRAY",
    "name": "Cray Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CRBP",
    "name": "Corbus Pharmaceuticals Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CRC",
    "name": "California Resources Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CRCM",
    "name": "Care.com, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CRD.A",
    "name": "Crawford & Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CRD.B",
    "name": "Crawford & Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CREE",
    "name": "Cree, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CREG",
    "name": "China Recycling Energy Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CRESY",
    "name": "Cresud S.A.C.I.F. y A.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CREX",
    "name": "Creative Realities, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CREXW",
    "name": "Creative Realities, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CRF",
    "name": "Cornerstone Strategic Return Fund, Inc. (The)",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CRH",
    "name": "CRH PLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CRHM",
    "name": "CRH Medical Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CRI",
    "name": "Carter&#39;s, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CRIS",
    "name": "Curis, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CRK",
    "name": "Comstock Resources, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CRL",
    "name": "Charles River Laboratories International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CRM",
    "name": "Salesforce.com Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CRMD",
    "name": "CorMedix Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CRMT",
    "name": "America&#39;s Car-Mart, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CRNT",
    "name": "Ceragon Networks Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CRNX",
    "name": "Crinetics Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CRON",
    "name": "Cronos Group Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CROX",
    "name": "Crocs, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CRR",
    "name": "Carbo Ceramics, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CRS",
    "name": "Carpenter Technology Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CRSP",
    "name": "CRISPR Therapeutics AG",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CRT",
    "name": "Cross Timbers Royalty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CRTO",
    "name": "Criteo S.A.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CRUS",
    "name": "Cirrus Logic, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CRUSC",
    "name": "Calvert Management Series",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CRVL",
    "name": "CorVel Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CRVS",
    "name": "Corvus Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CRWS",
    "name": "Crown Crafts, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CRY",
    "name": "CryoLife, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CRZO",
    "name": "Carrizo Oil & Gas, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CS",
    "name": "Credit Suisse Group",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "C^S",
    "name": "Citigroup Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CSA",
    "name": "Victory Portfolios II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSB",
    "name": "Victory Portfolios II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSBR",
    "name": "Champions Oncology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSCO",
    "name": "Cisco Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSF",
    "name": "Victory Portfolios II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSFL",
    "name": "CenterState Bank Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSGP",
    "name": "CoStar Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSGS",
    "name": "CSG Systems International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSII",
    "name": "Cardiovascular Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSIQ",
    "name": "Canadian Solar Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSL",
    "name": "Carlisle Companies Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CSLT",
    "name": "Castlight Health, inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CSML",
    "name": "IndexIQ ETF Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSOD",
    "name": "Cornerstone OnDemand, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSPI",
    "name": "CSP Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSQ",
    "name": "Calamos Strategic Total Return Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSS",
    "name": "CSS Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CSSE",
    "name": "Chicken Soup for the Soul Entertainment, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSSEP",
    "name": "Chicken Soup for the Soul Entertainment, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSTE",
    "name": "Caesarstone Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSTM",
    "name": "Constellium N.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CSTR",
    "name": "CapStar Financial Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSU",
    "name": "Capital Senior Living Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CSV",
    "name": "Carriage Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CSWC",
    "name": "Capital Southwest Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSWCL",
    "name": "Capital Southwest Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSWI",
    "name": "CSW Industrials, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CSX",
    "name": "CSX Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTAA",
    "name": "Qwest Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CTAC",
    "name": "ChaSerg Technology Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTACU",
    "name": "ChaSerg Technology Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTACW",
    "name": "ChaSerg Technology Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTAS",
    "name": "Cintas Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTB",
    "name": "Cooper Tire & Rubber Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CTBB",
    "name": "Qwest Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CTBI",
    "name": "Community Trust Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTDD",
    "name": "Qwest Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CTEK",
    "name": "CynergisTek, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CTG",
    "name": "Computer Task Group, Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTHR",
    "name": "Charles & Colvard Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTIB",
    "name": "CTI Industries Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTIC",
    "name": "CTI BioPharma Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTK",
    "name": "CooTek (Cayman) Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CTL",
    "name": "CenturyLink, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CTLT",
    "name": "Catalent, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CTMX",
    "name": "CytomX Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTO",
    "name": "Consolidated-Tomoka Land Co.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CTR",
    "name": "ClearBridge MLP and Midstream Total Return Fund In",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CTRA",
    "name": "Contura Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CTRC",
    "name": "Centric Brands Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTRE",
    "name": "CareTrust REIT, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTRL",
    "name": "Control4 Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTRN",
    "name": "Citi Trends, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTRP",
    "name": "Ctrip.com International, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTRV",
    "name": "ContraVir Pharmaceuticals Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTS",
    "name": "CTS Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CTSH",
    "name": "Cognizant Technology Solutions Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTSO",
    "name": "Cytosorbents Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTT",
    "name": "CatchMark Timber Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CTV",
    "name": "Qwest Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CTWS",
    "name": "Connecticut Water Service, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTXR",
    "name": "Citius Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTXRW",
    "name": "Citius Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTXS",
    "name": "Citrix Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CTY",
    "name": "Qwest Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CTZ",
    "name": "Qwest Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CUB",
    "name": "Cubic Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CUBA",
    "name": "The Herzfeld Caribbean Basin Fund, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CUBE",
    "name": "CubeSmart",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CUBI",
    "name": "Customers Bancorp, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CUBI^C",
    "name": "Customers Bancorp, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CUBI^D",
    "name": "Customers Bancorp, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CUBI^E",
    "name": "Customers Bancorp, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CUBI^F",
    "name": "Customers Bancorp, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CUE",
    "name": "Cue Biopharma, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CUI",
    "name": "CUI Global, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CUK",
    "name": "Carnival Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CULP",
    "name": "Culp, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CUO",
    "name": "Continental Materials Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CUR",
    "name": "Neuralstem, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CURO",
    "name": "CURO Group Holdings Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CUTR",
    "name": "Cutera, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CUZ",
    "name": "Cousins Properties Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CVA",
    "name": "Covanta Holding Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CVBF",
    "name": "CVB Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CVCO",
    "name": "Cavco Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CVCY",
    "name": "Central Valley Community Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CVE",
    "name": "Cenovus Energy Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CVEO",
    "name": "Civeo Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CVGI",
    "name": "Commercial Vehicle Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CVGW",
    "name": "Calavo Growers, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CVI",
    "name": "CVR Energy Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CVIA",
    "name": "Covia Holdings Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CVLT",
    "name": "Commvault Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CVLY",
    "name": "Codorus Valley Bancorp, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CVM",
    "name": "Cel-Sci Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CVNA",
    "name": "Carvana Co.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CVON",
    "name": "ConvergeOne Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CVR",
    "name": "Chicago Rivet & Machine Co.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CVRR",
    "name": "CVR Refining, LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CVRS",
    "name": "Corindus Vascular Robotics, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CVS",
    "name": "CVS Health Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CVTI",
    "name": "Covenant Transportation Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CVU",
    "name": "CPI Aerostructures, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "CVV",
    "name": "CVD Equipment Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CVX",
    "name": "Chevron Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CW",
    "name": "Curtiss-Wright Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CWBC",
    "name": "Community West Bancshares",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CWBR",
    "name": "CohBar, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CWCO",
    "name": "Consolidated Water Co. Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CWEN",
    "name": "Clearway Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CWEN.A",
    "name": "Clearway Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CWH",
    "name": "Camping World Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CWK",
    "name": "Cushman & Wakefield plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CWST",
    "name": "Casella Waste Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CWT",
    "name": "California Water  Service Group Holding",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CX",
    "name": "Cemex S.A.B. de C.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CXDC",
    "name": "China XD Plastics Company Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CXE",
    "name": "Colonial High Income Municipal Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CXH",
    "name": "Colonial Investment Grade Municipal Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CXO",
    "name": "Concho Resources Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CXP",
    "name": "Columbia Property Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CXSE",
    "name": "WisdomTree Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CXW",
    "name": "CoreCivic, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CY",
    "name": "Cypress Semiconductor Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CYAD",
    "name": "Celyad SA",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CYAN",
    "name": "Cyanotech Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CYBE",
    "name": "CyberOptics Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CYBR",
    "name": "CyberArk Software Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CYCC",
    "name": "Cyclacel Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CYCCP",
    "name": "Cyclacel Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CYD",
    "name": "China Yuchai International Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CYH",
    "name": "Community Health Systems, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "CYHHZ",
    "name": "Community Health Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CYOU",
    "name": "Changyou.com Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CYRN",
    "name": "CYREN Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CYRX",
    "name": "CryoPort, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CYRXW",
    "name": "CryoPort, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CYTK",
    "name": "Cytokinetics, Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CYTR",
    "name": "CytRx Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CYTX",
    "name": "Cytori Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CYTXW",
    "name": "Cytori Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CYTXZ",
    "name": "Cytori Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CZFC",
    "name": "Citizens First Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CZNC",
    "name": "Citizens & Northern Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CZR",
    "name": "Caesars Entertainment Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CZWI",
    "name": "Citizens Community Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "CZZ",
    "name": "Cosan Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "D",
    "name": "Dominion Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DAC",
    "name": "Danaos Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DAIO",
    "name": "Data I/O Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DAKT",
    "name": "Daktronics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DAL",
    "name": "Delta Air Lines, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DALI",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DAN",
    "name": "Dana Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DAR",
    "name": "Darling Ingredients Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DARE",
    "name": "Dare Bioscience, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DATA",
    "name": "Tableau Software, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DAVA",
    "name": "Endava plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DAVE",
    "name": "Famous Dave&#39;s of America, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DAX",
    "name": "Horizons ETF Trust I",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DB",
    "name": "Deutsche Bank AG",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DBD",
    "name": "Diebold Nixdorf Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DBL",
    "name": "DoubleLine Opportunistic Credit Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DBVT",
    "name": "DBV Technologies S.A.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DBX",
    "name": "Dropbox, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DCAR",
    "name": "DropCar, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DCF",
    "name": "Dreyfus Alcentra",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DCI",
    "name": "Donaldson Company, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DCIX",
    "name": "Diana Containerships Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DCO",
    "name": "Ducommun Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DCOM",
    "name": "Dime Community Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DCP",
    "name": "DCP Midstream LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DCP^B",
    "name": "DCP Midstream LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DCP^C",
    "name": "DCP Midstream LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DCPH",
    "name": "Deciphera Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DCUD",
    "name": "Dominion Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DD^A",
    "name": "E.I. du Pont de Nemours and Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DD^B",
    "name": "E.I. du Pont de Nemours and Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DDBI",
    "name": "Legg Mason ETF Investment Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DDD",
    "name": "3D Systems Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DDE",
    "name": "Dover Downs Gaming & Entertainment Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DDF",
    "name": "Delaware Investments Dividend & Income Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DDIV",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DDMX",
    "name": "DD3 Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DDMXU",
    "name": "DD3 Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DDMXW",
    "name": "DD3 Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DDS",
    "name": "Dillard&#39;s, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DDT",
    "name": "Dillard&#39;s, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DE",
    "name": "Deere & Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DEA",
    "name": "Easterly Government Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DECK",
    "name": "Deckers Outdoor Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DEI",
    "name": "Douglas Emmett, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DELT",
    "name": "Delta Technology Holdings Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DENN",
    "name": "Denny&#39;s Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DEO",
    "name": "Diageo plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DERM",
    "name": "Dermira, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DESP",
    "name": "Despegar.com, Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DEST",
    "name": "Destination Maternity Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DEX",
    "name": "Delaware Enhanced Global Dividend",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DF",
    "name": "Dean Foods Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DFBH",
    "name": "DFB Healthcare Acquisitions Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DFBHU",
    "name": "DFB Healthcare Acquisitions Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DFBHW",
    "name": "DFB Healthcare Acquisitions Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DFFN",
    "name": "Diffusion Pharmaceuticals Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DFIN",
    "name": "Donnelley Financial Solutions, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DFNL",
    "name": "Davis Fundamental ETF Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DFP",
    "name": "Flaherty & Crumrine Dynamic Preferred and Income Fund Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DFRG",
    "name": "Del Frisco&#39;s Restaurant Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DFS",
    "name": "Discover Financial Services",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DFVL",
    "name": "Barclays PLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DFVS",
    "name": "Barclays PLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DG",
    "name": "Dollar General Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DGICA",
    "name": "Donegal Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DGICB",
    "name": "Donegal Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DGII",
    "name": "Digi International Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DGLD",
    "name": "Credit Suisse AG",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DGLY",
    "name": "Digital Ally, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DGRE",
    "name": "WisdomTree Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DGRS",
    "name": "WisdomTree Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DGRW",
    "name": "WisdomTree Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DGSE",
    "name": "DGSE Companies, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "DGX",
    "name": "Quest Diagnostics Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DHF",
    "name": "Dreyfus High Yield Strategies Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DHI",
    "name": "D.R. Horton, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DHIL",
    "name": "Diamond Hill Investment Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DHR",
    "name": "Danaher Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DHT",
    "name": "DHT Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DHX",
    "name": "DHI Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DHXM",
    "name": "DHX Media Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DHY",
    "name": "Credit Suisse High Yield Bond Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "DIAX",
    "name": "Nuveen Dow 30SM Dynamic Overwrite Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DIN",
    "name": "Dine Brands Global, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DINT",
    "name": "Davis Fundamental ETF Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DIOD",
    "name": "Diodes Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DIS",
    "name": "Walt Disney Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DISCA",
    "name": "Discovery, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DISCB",
    "name": "Discovery, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DISCK",
    "name": "Discovery, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DISH",
    "name": "DISH Network Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DIT",
    "name": "AMCON Distributing Company",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "DJCO",
    "name": "Daily Journal Corp. (S.C.)",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DK",
    "name": "Delek US Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DKL",
    "name": "Delek Logistics Partners, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DKS",
    "name": "Dick&#39;s Sporting Goods Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DKT",
    "name": "Deutsch Bk Contingent Cap Tr V",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DL",
    "name": "China Distance Education Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DLA",
    "name": "Delta Apparel, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "DLB",
    "name": "Dolby Laboratories",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DLBS",
    "name": "Barclays PLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DLHC",
    "name": "DLH Holdings Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DLNG",
    "name": "Dynagas LNG Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DLNG^A",
    "name": "Dynagas LNG Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DLNG^B",
    "name": "Dynagas LNG Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DLPH",
    "name": "Delphi Technologies PLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DLPN",
    "name": "Dolphin Entertainment, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DLPNW",
    "name": "Dolphin Entertainment, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DLR",
    "name": "Digital Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DLR^C",
    "name": "Digital Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DLR^G",
    "name": "Digital Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DLR^H",
    "name": "Digital Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DLR^I",
    "name": "Digital Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DLR^J",
    "name": "Digital Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DLTH",
    "name": "Duluth Holdings Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DLTR",
    "name": "Dollar Tree, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DLX",
    "name": "Deluxe Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DM",
    "name": "Dominion Energy Midstream Partners, LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DMB",
    "name": "Dreyfus Municipal Bond Infrastructure Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DMF",
    "name": "Dreyfus Municipal Income, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "DMLP",
    "name": "Dorchester Minerals, L.P.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DMO",
    "name": "Western Asset Mortgage Defined Opportunity Fund Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DMPI",
    "name": "DelMar Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DMRC",
    "name": "Digimarc Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DNB",
    "name": "Dun & Bradstreet Corporation (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DNBF",
    "name": "DNB Financial Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DNI",
    "name": "Dividend and Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DNJR",
    "name": "GOLDEN BULL LIMITED",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DNKN",
    "name": "Dunkin&#39; Brands Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DNLI",
    "name": "Denali Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DNN",
    "name": "Denison Mine Corp",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "DNOW",
    "name": "NOW Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DNP",
    "name": "Duff & Phelps Utilities Income, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DNR",
    "name": "Denbury Resources Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DO",
    "name": "Diamond Offshore Drilling, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DOC",
    "name": "Physicians Realty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DOCU",
    "name": "DocuSign, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DOGZ",
    "name": "Dogness (International) Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DOMO",
    "name": "Domo, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DOOO",
    "name": "BRP Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DOOR",
    "name": "Masonite International Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DORM",
    "name": "Dorman Products, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DOTA",
    "name": "Draper Oakwood Technology Acquisition, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DOTAR",
    "name": "Draper Oakwood Technology Acquisition, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DOTAU",
    "name": "Draper Oakwood Technology Acquisition, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DOTAW",
    "name": "Draper Oakwood Technology Acquisition, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DOV",
    "name": "Dover Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DOVA",
    "name": "Dova Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DOX",
    "name": "Amdocs Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DPG",
    "name": "Duff & Phelps Global Utility Income Fund Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DPLO",
    "name": "Diplomat Pharmacy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DPW",
    "name": "DPW Holdings, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "DPZ",
    "name": "Domino&#39;s Pizza Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DQ",
    "name": "DAQO New Energy Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DRAD",
    "name": "Digirad Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DRD",
    "name": "DRDGOLD Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DRE",
    "name": "Duke Realty Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DRH",
    "name": "Diamondrock Hospitality Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DRI",
    "name": "Darden Restaurants, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DRIO",
    "name": "DarioHealth Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DRIOW",
    "name": "DarioHealth Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DRIV",
    "name": "Global X Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DRNA",
    "name": "Dicerna Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DRQ",
    "name": "Dril-Quip, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DRRX",
    "name": "DURECT Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DRUA",
    "name": "Dominion Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DRYS",
    "name": "DryShips Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DS",
    "name": "Drive Shack Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DS^B",
    "name": "Drive Shack Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DS^C",
    "name": "Drive Shack Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DS^D",
    "name": "Drive Shack Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DSE",
    "name": "Duff & Phelps Select MLP and Midstream Energy Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DSGX",
    "name": "The Descartes Systems Group Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DSKE",
    "name": "Daseke, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DSKEW",
    "name": "Daseke, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DSL",
    "name": "DoubleLine Income Solutions Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DSLV",
    "name": "Credit Suisse AG",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DSM",
    "name": "Dreyfus Strategic Municipal Bond Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DSPG",
    "name": "DSP Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DSS",
    "name": "Document Security Systems, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "DSU",
    "name": "Blackrock Debt Strategies Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DSW",
    "name": "DSW Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DSWL",
    "name": "Deswell Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DSX",
    "name": "Diana Shipping inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DSX^B",
    "name": "Diana Shipping inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DTE",
    "name": "DTE Energy Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DTEA",
    "name": "DAVIDsTEA Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DTF",
    "name": "Duff & Phelps Utilities Tax-Free Income, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DTJ",
    "name": "DTE Energy Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DTLA^",
    "name": "Brookfield DTLA Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DTQ",
    "name": "DTE Energy Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DTRM",
    "name": "Determine, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DTUL",
    "name": "Barclays PLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DTUS",
    "name": "Barclays PLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DTV",
    "name": "DTE Energy Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DTW",
    "name": "DTE Energy Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DTY",
    "name": "DTE Energy Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DTYL",
    "name": "Barclays PLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DTYS",
    "name": "Barclays PLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DUC",
    "name": "Duff & Phelps Utility & Corporate Bond Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DUK",
    "name": "Duke Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DUKB",
    "name": "Duke Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DUKH",
    "name": "Duke Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DUSA",
    "name": "Davis Fundamental ETF Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DVA",
    "name": "DaVita Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DVAX",
    "name": "Dynavax Technologies Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DVCR",
    "name": "Diversicare Healthcare Services Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DVD",
    "name": "Dover Motorsports, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DVLU",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DVMT",
    "name": "Dell Technologies Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DVN",
    "name": "Devon Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DVOL",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DVY",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DWAQ",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DWAS",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DWAT",
    "name": "Arrow Investments Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DWCH",
    "name": "Datawatch Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DWCR",
    "name": "Arrow Investments Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DWDP",
    "name": "DowDuPont Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DWFI",
    "name": "SPDR Series Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DWIN",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DWLD",
    "name": "Davis Fundamental ETF Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DWLV",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DWMC",
    "name": "AdvisorShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DWPP",
    "name": "First Trust Exchange-Traded Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DWSH",
    "name": "AdvisorShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DWSN",
    "name": "Dawson Geophysical Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DWTR",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DX",
    "name": "Dynex Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DX^A",
    "name": "Dynex Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DXB",
    "name": "Deutsche Bank AG",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DX^B",
    "name": "Dynex Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DXC",
    "name": "DXC Technology Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DXCM",
    "name": "DexCom, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DXF",
    "name": "Dunxin Financial Holdings Limited",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "DXGE",
    "name": "WisdomTree Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DXJS",
    "name": "WisdomTree Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DXLG",
    "name": "Destination XL Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DXPE",
    "name": "DXP Enterprises, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DXR",
    "name": "Daxor Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "DXYN",
    "name": "The Dixie Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DY",
    "name": "Dycom Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DYNC",
    "name": "Vistra Energy Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "DYNT",
    "name": "Dynatronics Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DYSL",
    "name": "Dynasil Corporation of America",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "DZSI",
    "name": "DASAN Zhone Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "E",
    "name": "ENI S.p.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EA",
    "name": "Electronic Arts Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EAB",
    "name": "Entergy Arkansas, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EAD",
    "name": "Wells Fargo Income Opportunities Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EAE",
    "name": "Entergy Arkansas, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EAF",
    "name": "GrafTech International Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EAGL",
    "name": "Platinum Eagle Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EAGLU",
    "name": "Platinum Eagle Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EAGLW",
    "name": "Platinum Eagle Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EAI",
    "name": "Entergy Arkansas, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EARN",
    "name": "Ellington Residential Mortgage REIT",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EARS",
    "name": "Auris Medical Holding AG",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EAST",
    "name": "Eastside Distilling, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EAT",
    "name": "Brinker International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EB",
    "name": "Eventbrite, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EBAY",
    "name": "eBay Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EBAYL",
    "name": "eBay Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EBF",
    "name": "Ennis, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EBIX",
    "name": "Ebix, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EBIZ",
    "name": "Global X Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EBMT",
    "name": "Eagle Bancorp Montana, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EBR",
    "name": "Centrais Electricas Brasileiras S.A.- Eletrobras",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EBR.B",
    "name": "Centrais Electricas Brasileiras S.A.- Eletrobras",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EBS",
    "name": "Emergent Biosolutions, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EBSB",
    "name": "Meridian Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EBTC",
    "name": "Enterprise Bancorp Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EC",
    "name": "Ecopetrol S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ECA",
    "name": "Encana Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ECC",
    "name": "Eagle Point Credit Company Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ECCA",
    "name": "Eagle Point Credit Company Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ECCB",
    "name": "Eagle Point Credit Company Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ECCX",
    "name": "Eagle Point Credit Company Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ECCY",
    "name": "Eagle Point Credit Company Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ECF",
    "name": "Ellsworth Growth and Income Fund Ltd.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ECF^A",
    "name": "Ellsworth Growth and Income Fund Ltd.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ECHO",
    "name": "Echo Global Logistics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ECL",
    "name": "Ecolab Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ECOL",
    "name": "US Ecology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ECOM",
    "name": "ChannelAdvisor Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ECOR",
    "name": "electroCore, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ECPG",
    "name": "Encore Capital Group Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ECR",
    "name": "Eclipse Resources Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ECT",
    "name": "ECA Marcellus Trust I",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ECYT",
    "name": "Endocyte, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ED",
    "name": "Consolidated Edison Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EDAP",
    "name": "EDAP TMS S.A.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EDBI",
    "name": "Legg Mason ETF Investment Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EDD",
    "name": "Morgan Stanley Emerging Markets Domestic Debt Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EDF",
    "name": "Stone Harbor Emerging Markets Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EDGE",
    "name": "Edge Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EDI",
    "name": "Stone Harbor Emerging Markets Total Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EDIT",
    "name": "Editas Medicine, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EDN",
    "name": "Empresa Distribuidora Y Comercializadora Norte S.A. (Edenor)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EDNT",
    "name": "Edison Nation, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EDRY",
    "name": "EuroDry Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EDTX",
    "name": "EdtechX Holdings Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EDTXU",
    "name": "EdtechX Holdings Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EDTXW",
    "name": "EdtechX Holdings Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EDU",
    "name": "New Oriental Education & Technology Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EDUC",
    "name": "Educational Development Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EE",
    "name": "El Paso Electric Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EEA",
    "name": "European Equity Fund, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EEFT",
    "name": "Euronet Worldwide, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EEI",
    "name": "Ecology and Environment, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EEMA",
    "name": "iShares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EEP",
    "name": "Enbridge Energy, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EEQ",
    "name": "Enbridge Energy Management LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EEX",
    "name": "Emerald Expositions Events, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EFAS",
    "name": "Global X Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EFBI",
    "name": "Eagle Financial Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EFC",
    "name": "Ellington Financial LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EFF",
    "name": "Eaton vance Floating-Rate Income Plus Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EFII",
    "name": "Electronics for Imaging, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EFL",
    "name": "Eaton Vance Floating-Rate 2022 Target Term Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EFOI",
    "name": "Energy Focus, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EFR",
    "name": "Eaton Vance Senior Floating-Rate Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EFSC",
    "name": "Enterprise Financial Services Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EFT",
    "name": "Eaton Vance Floating Rate Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EFX",
    "name": "Equifax, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EGAN",
    "name": "eGain Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EGBN",
    "name": "Eagle Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EGF",
    "name": "Blackrock Enhanced Government Fund, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EGHT",
    "name": "8x8 Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EGHT",
    "name": "8x8 Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EGI",
    "name": "Entree Resources Ltd.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EGIF",
    "name": "Eagle Growth and Income Opportunities Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EGL",
    "name": "Engility Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EGLE",
    "name": "Eagle Bulk Shipping Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EGO",
    "name": "Eldorado Gold Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EGOV",
    "name": "NIC Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EGP",
    "name": "EastGroup Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EGRX",
    "name": "Eagle Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EGY",
    "name": "VAALCO Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EHC",
    "name": "Encompass Health Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EHI",
    "name": "Western Asset Global High Income Fund Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EHIC",
    "name": "eHi Car Services Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EHT",
    "name": "Eaton Vance High Income 2021 Target Term Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EHTH",
    "name": "eHealth, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EIA",
    "name": "Eaton Vance California Municipal Bond Fund II",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EIDX",
    "name": "Eidos Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EIG",
    "name": "Employers Holdings Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EIGI",
    "name": "Endurance International Group Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EIGR",
    "name": "Eiger BioPharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EIM",
    "name": "Eaton Vance Municipal Bond Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EIO",
    "name": "Eaton Vance Ohio Municipal Bond Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EIP",
    "name": "Eaton Vance Pennsylvania Municipal Bond Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EIV",
    "name": "Eaton Vance Municipal Bond Fund II",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EIX",
    "name": "Edison International",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EKSO",
    "name": "Ekso Bionics Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EL",
    "name": "Estee Lauder Companies, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ELAN",
    "name": "Elanco Animal Health Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ELC",
    "name": "Entergy Louisiana, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ELF",
    "name": "e.l.f. Beauty, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ELGX",
    "name": "Endologix, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ELJ",
    "name": "Entergy Louisiana, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ELLI",
    "name": "Ellie Mae, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ELLO",
    "name": "Ellomay Capital Ltd.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ELMD",
    "name": "Electromed, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ELOX",
    "name": "Eloxx Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ELP",
    "name": "Companhia Paranaense de Energia (COPEL)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ELS",
    "name": "Equity Lifestyle Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ELSE",
    "name": "Electro-Sensors, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ELTK",
    "name": "Eltek Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ELU",
    "name": "Entergy Louisiana, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ELVT",
    "name": "Elevate Credit, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ELY",
    "name": "Callaway Golf Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EMAN",
    "name": "eMagin Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EMB",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EMCB",
    "name": "WisdomTree Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EMCF",
    "name": "Emclaire Financial Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EMCG",
    "name": "WisdomTree Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EMCI",
    "name": "EMC Insurance Group Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EMD",
    "name": "Western Asset Emerging Markets Debt Fund Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EME",
    "name": "EMCOR Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EMES",
    "name": "Emerge Energy Services LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EMF",
    "name": "Templeton Emerging Markets Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EMI",
    "name": "Eaton Vance Michigan Municipal Income Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EMIF",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EMITF",
    "name": "Elbit Imaging Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EMJ",
    "name": "Eaton Vance New Jersey Municipal Bond Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EMKR",
    "name": "EMCORE Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EML",
    "name": "Eastern Company (The)",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EMMS",
    "name": "Emmis Communications Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EMN",
    "name": "Eastman Chemical Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EMO",
    "name": "ClearBridge Energy Midstream Opportunity Fund Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EMP",
    "name": "Entergy Mississippi, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EMR",
    "name": "Emerson Electric Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EMX",
    "name": "EMX Royalty Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EMXC",
    "name": "iShares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ENB",
    "name": "Enbridge Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ENBA",
    "name": "Enbridge Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ENBL",
    "name": "Enable Midstream Partners, LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ENDP",
    "name": "Endo International plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ENFC",
    "name": "Entegra Financial Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ENG",
    "name": "ENGlobal Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ENIA",
    "name": "Enel Americas S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ENIC",
    "name": "Enel Chile S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ENJ",
    "name": "Entergy New Orleans, LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ENLC",
    "name": "EnLink Midstream, LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ENLK",
    "name": "EnLink Midstream Partners, LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ENO",
    "name": "Entergy New Orleans, LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ENPH",
    "name": "Enphase Energy, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ENR",
    "name": "Energizer Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ENS",
    "name": "Enersys",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ENSG",
    "name": "The Ensign Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ENSV",
    "name": "ENSERVCO Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ENT",
    "name": "Global Eagle Entertainment Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ENTA",
    "name": "Enanta Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ENTG",
    "name": "Entegris, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ENTX",
    "name": "Entera Bio Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ENTXW",
    "name": "Entera Bio Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ENV",
    "name": "Envestnet, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ENVA",
    "name": "Enova International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ENX",
    "name": "Eaton Vance New York Municipal Bond Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ENZ",
    "name": "Enzo Biochem, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ENZL",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EOCC",
    "name": "Enel Generacion Chile S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EOD",
    "name": "Wells Fargo Global Dividend Opportunity Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EOG",
    "name": "EOG Resources, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EOI",
    "name": "Eaton Vance Enhance Equity Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EOLS",
    "name": "Evolus, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EOS",
    "name": "Eaton Vance Enhanced Equity Income Fund II",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EOT",
    "name": "Eaton Vance Municipal Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EPAM",
    "name": "EPAM Systems, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EPAY",
    "name": "Bottomline Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EPC",
    "name": "Energizer Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EP^C",
    "name": "El Paso Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EPD",
    "name": "Enterprise Products Partners L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EPE",
    "name": "EP Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EPIX",
    "name": "ESSA Pharma Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EPM",
    "name": "Evolution Petroleum Corporation, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EPR",
    "name": "EPR Properties",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EPR^C",
    "name": "EPR Properties",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EPR^E",
    "name": "EPR Properties",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EPR^G",
    "name": "EPR Properties",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EPRT",
    "name": "Essential Properties Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EPZM",
    "name": "Epizyme, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EQ",
    "name": "Equillium, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EQBK",
    "name": "Equity Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EQC",
    "name": "Equity Commonwealth",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EQC^D",
    "name": "Equity Commonwealth",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EQGP",
    "name": "EQGP Holdings, LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EQH",
    "name": "AXA Equitable Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EQIX",
    "name": "Equinix, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EQM",
    "name": "EQM Midstream Partners, LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EQNR",
    "name": "Equinor ASA",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EQR",
    "name": "Equity Residential",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EQRR",
    "name": "ProShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EQS",
    "name": "Equus Total Return, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EQT",
    "name": "EQT Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ERA",
    "name": "Era Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ERC",
    "name": "Wells Fargo Multi-Sector Income Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ERF",
    "name": "Enerplus Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ERH",
    "name": "Wells Fargo Utilities and High Income Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ERI",
    "name": "Eldorado Resorts, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ERIC",
    "name": "Ericsson",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ERIE",
    "name": "Erie Indemnity Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ERII",
    "name": "Energy Recovery, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ERJ",
    "name": "Embraer S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EROS",
    "name": "Eros International PLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ERYP",
    "name": "Erytech Pharma S.A.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ES",
    "name": "Eversource Energy",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ESBK",
    "name": "Elmira Savings Bank NY (The)",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESCA",
    "name": "Escalade, Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESE",
    "name": "ESCO Technologies Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ESEA",
    "name": "Euroseas Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESES",
    "name": "Eco-Stim Energy Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESG",
    "name": "FlexShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESGD",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESGE",
    "name": "iShares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESGG",
    "name": "FlexShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESGR",
    "name": "Enstar Group Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESGRP",
    "name": "Enstar Group Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESGU",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESIO",
    "name": "Electro Scientific Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESL",
    "name": "Esterline Technologies Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ESLT",
    "name": "Elbit Systems Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESNC",
    "name": "EnSync, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ESND",
    "name": "Essendant Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESNT",
    "name": "Essent Group Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ESP",
    "name": "Espey Mfg. & Electronics Corp.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ESPR",
    "name": "Esperion Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESQ",
    "name": "Esquire Financial Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESRT",
    "name": "Empire State Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ESRX",
    "name": "Express Scripts Holding Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESS",
    "name": "Essex Property Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ESSA",
    "name": "ESSA Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESTA",
    "name": "Establishment Labs Holdings Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESTC",
    "name": "Elastic N.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ESTE",
    "name": "Earthstone Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ESTR",
    "name": "Estre Ambiental, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESTRW",
    "name": "Estre Ambiental, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ESV",
    "name": "ENSCO plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ESXB",
    "name": "Community Bankers Trust Corporation.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ET",
    "name": "Energy Transfer L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ETB",
    "name": "Eaton Vance Tax-Managed Buy-Write Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ETFC",
    "name": "E*TRADE Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ETG",
    "name": "Eaton Vance Tax-Advantaged Global Dividend Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ETH",
    "name": "Ethan Allen Interiors Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ETJ",
    "name": "Eaton Vance Risk-Managed Diversified Equity Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ETM",
    "name": "Entercom Communications Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ETN",
    "name": "Eaton Corporation, PLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ETO",
    "name": "Eaton Vance Tax-Advantage Global Dividend Opp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ETON",
    "name": "Eton Pharmaceutcials, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ETP^C",
    "name": "Energy Transfer Operating, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ETP^D",
    "name": "Energy Transfer Operating, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ETR",
    "name": "Entergy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ETRN",
    "name": "Equitrans Midstream Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ETSY",
    "name": "Etsy, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ETTX",
    "name": "Entasis Therapeutics Holdings Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ETV",
    "name": "Eaton Vance Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ETW",
    "name": "Eaton Vance Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ETX",
    "name": "Eaton Vance Municipal Income 2028 Term Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ETY",
    "name": "Eaton Vance Tax-Managed Diversified Equity Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EUFN",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EURN",
    "name": "Euronav NV",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EV",
    "name": "Eaton Vance Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EVA",
    "name": "Enviva Partners, LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EVBG",
    "name": "Everbridge, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EVBN",
    "name": "Evans Bancorp, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EVC",
    "name": "Entravision Communications Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EVER",
    "name": "EverQuote, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EVF",
    "name": "Eaton Vance Senior Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EVFM",
    "name": "Evofem Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EVFTC",
    "name": "Eaton Vance NextShares Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EVG",
    "name": "Eaton Vance Short Diversified Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EVGBC",
    "name": "Eaton Vance NextShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EVGN",
    "name": "Evogene Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EVH",
    "name": "Evolent Health, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EVI",
    "name": "EnviroStarm, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EVJ",
    "name": "Eaton Vance New Jersey Municipal Income Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EVK",
    "name": "Ever-Glory International Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EVLMC",
    "name": "Eaton Vance NextShares Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EVLO",
    "name": "Evelo Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EVLV",
    "name": "EVINE Live Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EVM",
    "name": "Eaton Vance California Municipal Bond Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EVN",
    "name": "Eaton Vance Municipal Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EVO",
    "name": "Eaton Vance Ohio Municipal Income Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EVOK",
    "name": "Evoke Pharma, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EVOL",
    "name": "Evolving Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EVOP",
    "name": "EVO Payments, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EVP",
    "name": "Eaton Vance Pennsylvania Municipal Income Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EVR",
    "name": "Evercore Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EVRG",
    "name": "Evergy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EVRI",
    "name": "Everi Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EVSTC",
    "name": "Eaton Vance NextShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EVT",
    "name": "Eaton Vance Tax Advantaged Dividend Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EVTC",
    "name": "Evertec, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EVV",
    "name": "Eaton Vance Limited Duration Income Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EVY",
    "name": "Eaton Vance New York Municipal Income Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "EW",
    "name": "Edwards Lifesciences Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EWBC",
    "name": "East West Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EWZS",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EXAS",
    "name": "Exact Sciences Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EXC",
    "name": "Exelon Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EXD",
    "name": "Eaton Vance Tax-Advantaged Bond",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EXEL",
    "name": "Exelixis, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EXFO",
    "name": "EXFO Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EXG",
    "name": "Eaton Vance Tax-Managed Global Diversified Equity Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EXK",
    "name": "Endeavour Silver Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EXLS",
    "name": "ExlService Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EXP",
    "name": "Eagle Materials Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EXPD",
    "name": "Expeditors International of Washington, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EXPE",
    "name": "Expedia Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EXPI",
    "name": "eXp World Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EXPO",
    "name": "Exponent, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EXPR",
    "name": "Express, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EXR",
    "name": "Extra Space Storage Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EXTN",
    "name": "Exterran Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "EXTR",
    "name": "Extreme Networks, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EYE",
    "name": "National Vision Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EYEG",
    "name": "Eyegate Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EYEGW",
    "name": "Eyegate Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EYEN",
    "name": "Eyenovia, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EYES",
    "name": "Second Sight Medical Products, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EYESW",
    "name": "Second Sight Medical Products, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EYPT",
    "name": "EyePoint Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EZPW",
    "name": "EZCORP, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "EZT",
    "name": "Entergy Texas Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "F",
    "name": "Ford Motor Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FAAR",
    "name": "First Trust Exchange-Traded Fund VII",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FAB",
    "name": "First Trust Exchange-Traded AlphaDEX Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FAD",
    "name": "First Trust Exchange-Traded AlphaDEX Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FAF",
    "name": "First American Corporation (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FALN",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FAM",
    "name": "First Trust/Aberdeen Global Opportunity Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FAMI",
    "name": "FARMMI, INC.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FANG",
    "name": "Diamondback Energy, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FANH",
    "name": "Fanhua Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FARM",
    "name": "Farmer Brothers Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FARO",
    "name": "FARO Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FAST",
    "name": "Fastenal Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FAT",
    "name": "FAT Brands Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FATE",
    "name": "Fate Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FAX",
    "name": "Aberdeen Asia-Pacific Income Fund Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "FB",
    "name": "Facebook, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FBC",
    "name": "Flagstar Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FBHS",
    "name": "Fortune Brands Home & Security, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FBIO",
    "name": "Fortress Biotech, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FBIOP",
    "name": "Fortress Biotech, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FBIZ",
    "name": "First Business Financial Services, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FBK",
    "name": "FB Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FBM",
    "name": "Foundation Building Materials, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FBMS",
    "name": "The First Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FBNC",
    "name": "First Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FBP",
    "name": "First BanCorp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FBR",
    "name": "Fibria Celulose S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FBSS",
    "name": "Fauquier Bankshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FBZ",
    "name": "First Trust Exchange-Traded AlphDEX Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FC",
    "name": "Franklin Covey Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FCA",
    "name": "First Trust Exchange-Traded AlphDEX Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FCAL",
    "name": "First Trust Exchange-Traded Fund III",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FCAN",
    "name": "First Trust Exchange-Traded AlphDEX Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FCAP",
    "name": "First Capital, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FCAU",
    "name": "Fiat Chrysler Automobiles N.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FCB",
    "name": "FCB Financial Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FCBC",
    "name": "First Community Bankshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FCBP",
    "name": "First Choice Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FCCO",
    "name": "First Community Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FCCY",
    "name": "1st Constitution Bancorp (NJ)",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FCE.A",
    "name": "Forest City Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FCEF",
    "name": "First Trust Exchange-Traded Fund VIII",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FCEL",
    "name": "FuelCell Energy, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FCF",
    "name": "First Commonwealth Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FCFS",
    "name": "FirstCash, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FCN",
    "name": "FTI Consulting, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FCNCA",
    "name": "First Citizens BancShares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FCO",
    "name": "Aberdeen Global Income Fund, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "FCPT",
    "name": "Four Corners Property Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FCSC",
    "name": "Fibrocell Science Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FCT",
    "name": "First Trust Senior Floating Rate Income Fund II",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FCVT",
    "name": "First Trust Exchange-Traded Fund IV",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FCX",
    "name": "Freeport-McMoran, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FDBC",
    "name": "Fidelity D & D Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FDC",
    "name": "First Data Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FDEF",
    "name": "First Defiance Financial Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FDEU",
    "name": "First Trust Dynamic Europe Equity Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FDIV",
    "name": "First Trust Exchange-Traded Fund IV",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FDNI",
    "name": "First Trust Exchange-Traded Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FDP",
    "name": "Fresh Del Monte Produce, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FDS",
    "name": "FactSet Research Systems Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FDT",
    "name": "First Trust Exchange-Traded AlphDEX Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FDTS",
    "name": "First Trust Exchange-Traded AlphDEX Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FDUS",
    "name": "Fidus Investment Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FDUSL",
    "name": "Fidus Investment Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FDX",
    "name": "FedEx Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FE",
    "name": "FirstEnergy Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FEDU",
    "name": "Four Seasons Education (Cayman) Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FEI",
    "name": "First Trust MLP and Energy Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FEIM",
    "name": "Frequency Electronics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FELE",
    "name": "Franklin Electric Co., Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FELP",
    "name": "Foresight Energy LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FEM",
    "name": "First Trust Exchange-Traded AlphDEX Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FEMB",
    "name": "First Trust Exchange-Traded Fund III",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FEMS",
    "name": "First Trust Exchange-Traded AlphDEX Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FEN",
    "name": "First Trust Energy Income and Growth Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "FENC",
    "name": "Fennec Pharmaceuticals Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FENG",
    "name": "Phoenix New Media Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FEO",
    "name": "First Trust/Aberdeen Emerging Opportunity Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FEP",
    "name": "First Trust Exchange-Traded AlphDEX Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FET",
    "name": "Forum Energy Technologies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FEUZ",
    "name": "First Trust Exchange-Traded AlphDEX Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FEX",
    "name": "First Trust Exchange-Traded AlphaDEX Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FEYE",
    "name": "FireEye, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FF",
    "name": "FutureFuel Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FFA",
    "name": "First Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FFBC",
    "name": "First Financial Bancorp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FFBCW",
    "name": "First Financial Bancorp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FFBW",
    "name": "FFBW, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FFC",
    "name": "Flaherty & Crumrine Preferred Securities Income Fund Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FFG",
    "name": "FBL Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FFHL",
    "name": "Fuwei Films (Holdings) Co., Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FFIC",
    "name": "Flushing Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FFIN",
    "name": "First Financial Bankshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FFIV",
    "name": "F5 Networks, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FFNW",
    "name": "First Financial Northwest, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FFWM",
    "name": "First Foundation Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FG",
    "name": "FGL Holdings",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FGB",
    "name": "First Trust Specialty Finance and Financial Opportunities Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FGBI",
    "name": "First Guaranty Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FGEN",
    "name": "FibroGen, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FGM",
    "name": "First Trust Exchange-Traded AlphDEX Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FGP",
    "name": "Ferrellgas Partners, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FG.WS",
    "name": "FGL Holdings",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FHB",
    "name": "First Hawaiian, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FHK",
    "name": "First Trust Exchange-Traded AlphDEX Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FHN",
    "name": "First Horizon National Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FHN^A",
    "name": "First Horizon National Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FI",
    "name": "Frank&#39;s International N.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FIBK",
    "name": "First Interstate BancSystem, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FICO",
    "name": "Fair Isaac Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FID",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FIF",
    "name": "First Trust Energy Infrastructure Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FII",
    "name": "Federated Investors, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FINX",
    "name": "Global X Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FIS",
    "name": "Fidelity National Information Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FISI",
    "name": "Financial Institutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FISV",
    "name": "Fiserv, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FIT",
    "name": "Fitbit, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FITB",
    "name": "Fifth Third Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FITBI",
    "name": "Fifth Third Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FIV",
    "name": "First Trust Senior Floating Rate 2022 Target Term Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FIVE",
    "name": "Five Below, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FIVN",
    "name": "Five9, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FIX",
    "name": "Comfort Systems USA, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FIXD",
    "name": "First Trust Exchange-Traded Fund VIII",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FIXX",
    "name": "Homology Medicines, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FIZZ",
    "name": "National Beverage Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FJP",
    "name": "First Trust Exchange-Traded AlphDEX Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FKO",
    "name": "First Trust Exchange-Traded AlphDEX Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FKU",
    "name": "First Trust Exchange-Traded AlphDEX Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FL",
    "name": "Foot Locker, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FLAG",
    "name": "Exchange Traded Concepts Trust FLAG-Forensic Accounting Long-S",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FLAT",
    "name": "Barclays PLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FLC",
    "name": "Flaherty & Crumrine Total Return Fund Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FLDM",
    "name": "Fluidigm Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FLEX",
    "name": "Flex Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FLGT",
    "name": "Fulgent Genetics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FLIC",
    "name": "The First of Long Island Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FLIR",
    "name": "FLIR Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FLKS",
    "name": "Flex Pharma, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FLL",
    "name": "Full House Resorts, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FLMN",
    "name": "Falcon Minerals Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FLMNW",
    "name": "Falcon Minerals Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FLN",
    "name": "First Trust Exchange-Traded AlphDEX Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FLNT",
    "name": "Fluent, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FLO",
    "name": "Flowers Foods, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FLOW",
    "name": "SPX FLOW, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FLR",
    "name": "Fluor Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FLS",
    "name": "Flowserve Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FLT",
    "name": "FleetCor Technologies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FLWS",
    "name": "1-800 FLOWERS.COM, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FLXN",
    "name": "Flexion Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FLXS",
    "name": "Flexsteel Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FLY",
    "name": "Fly Leasing Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FMAO",
    "name": "Farmers & Merchants Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FMB",
    "name": "First Trust Exchange-Traded Fund III",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FMBH",
    "name": "First Mid-Illinois Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FMBI",
    "name": "First Midwest Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FMC",
    "name": "FMC Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FMCI",
    "name": "Forum Merger II Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FMCIU",
    "name": "Forum Merger II Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FMCIW",
    "name": "Forum Merger II Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FMHI",
    "name": "First Trust Exchange-Traded Fund III",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FMK",
    "name": "First Trust Exchange-Traded AlphaDEX Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FMN",
    "name": "Federated Premier Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FMNB",
    "name": "Farmers National Banc Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FMO",
    "name": "Fiduciary/Claymore Energy Infrastructure Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FMS",
    "name": "Fresenius Medical Care Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FMX",
    "name": "Fomento Economico Mexicano S.A.B. de C.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FMY",
    "name": "First Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FN",
    "name": "Fabrinet",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FNB",
    "name": "F.N.B. Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FNB^E",
    "name": "F.N.B. Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FNCB",
    "name": "FNCB Bancorp Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FND",
    "name": "Floor & Decor Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FNF",
    "name": "Fidelity National Financial, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FNHC",
    "name": "FedNat Holding Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FNJN",
    "name": "Finjan Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FNK",
    "name": "First Trust Exchange-Traded AlphaDEX Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FNKO",
    "name": "Funko, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FNLC",
    "name": "First Bancorp, Inc (ME)",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FNSR",
    "name": "Finisar Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FNV",
    "name": "Franco-Nevada Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FNWB",
    "name": "First Northwest Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FNX",
    "name": "First Trust Exchange-Traded AlphaDEX Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FNY",
    "name": "First Trust Exchange-Traded AlphaDEX Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FOANC",
    "name": "Gabelli NextShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FOCS",
    "name": "Focus Financial Partners Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FOE",
    "name": "Ferro Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FOF",
    "name": "Cohen & Steers Closed-End Opportunity Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FOLD",
    "name": "Amicus Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FOMX",
    "name": "Foamix Pharmaceuticals Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FONE",
    "name": "First Trust Exchange-Traded Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FONR",
    "name": "Fonar Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FOR",
    "name": "Forestar Group Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FORD",
    "name": "Forward Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FORK",
    "name": "Fuling Global Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FORM",
    "name": "FormFactor, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FORR",
    "name": "Forrester Research, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FORTY",
    "name": "Formula Systems (1985) Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FOSL",
    "name": "Fossil Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FOX",
    "name": "Twenty-First Century Fox, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FOXA",
    "name": "Twenty-First Century Fox, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FOXF",
    "name": "Fox Factory Holding Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FPA",
    "name": "First Trust Exchange-Traded AlphDEX Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FPAC",
    "name": "Far Point Acquisition Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FPAC.U",
    "name": "Far Point Acquisition Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FPAC.WS",
    "name": "Far Point Acquisition Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FPAY",
    "name": "FlexShopper, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FPAYW",
    "name": "FlexShopper, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FPF",
    "name": "First Trust Intermediate Duration Preferred & Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FPH",
    "name": "Five Point Holdings, LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FPI",
    "name": "Farmland Partners Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FPI^B",
    "name": "Farmland Partners Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FPL",
    "name": "First Trust New Opportunities MLP & Energy Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FPRX",
    "name": "Five Prime Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FPXE",
    "name": "First Trust Exchange-Traded Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FPXI",
    "name": "First Trust Exchange-Traded Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FR",
    "name": "First Industrial Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FRA",
    "name": "Blackrock Floating Rate Income Strategies Fund Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FRAC",
    "name": "Keane Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FRAN",
    "name": "Francesca&#39;s Holdings Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FRBA",
    "name": "First Bank",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FRBK",
    "name": "Republic First Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FRC",
    "name": "FIRST REPUBLIC BANK",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FRC^D",
    "name": "FIRST REPUBLIC BANK",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FRC^E.CL",
    "name": "FIRST REPUBLIC BANK",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FRC^F",
    "name": "FIRST REPUBLIC BANK",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FRC^G",
    "name": "FIRST REPUBLIC BANK",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FRC^H",
    "name": "FIRST REPUBLIC BANK",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FRC^I",
    "name": "FIRST REPUBLIC BANK",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FRD",
    "name": "Friedman Industries Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "FRED",
    "name": "Fred&#39;s, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FRGI",
    "name": "Fiesta Restaurant Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FRME",
    "name": "First Merchants Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FRO",
    "name": "Frontline Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FRPH",
    "name": "FRP Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FRPT",
    "name": "Freshpet, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FRSH",
    "name": "Papa Murphy&#39;s Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FRSX",
    "name": "Foresight Autonomous Holdings Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FRT",
    "name": "Federal Realty Investment Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FRTA",
    "name": "Forterra, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FRT^C",
    "name": "Federal Realty Investment Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FSAC",
    "name": "Federal Street Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FSACU",
    "name": "Federal Street Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FSACW",
    "name": "Federal Street Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FSB",
    "name": "Franklin Financial Network, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FSBC",
    "name": "FSB Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FSBW",
    "name": "FS Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FSCT",
    "name": "ForeScout Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FSD",
    "name": "First Trust High Income Long Short Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FSFG",
    "name": "First Savings Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FSI",
    "name": "Flexible Solutions International Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "FSIC",
    "name": "FS Investment Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FSLR",
    "name": "First Solar, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FSM",
    "name": "Fortuna Silver Mines Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FSNN",
    "name": "Fusion Connect, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FSP",
    "name": "Franklin Street Properties Corp.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "FSS",
    "name": "Federal Signal Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FSTR",
    "name": "L.B. Foster Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FSV",
    "name": "FirstService Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FSZ",
    "name": "First Trust Exchange-Traded AlphDEX Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FT",
    "name": "Franklin Universal Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FTA",
    "name": "First Trust Exchange-Traded AlphaDEX Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTACU",
    "name": "FinTech Acquisition Corp. III",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTAG",
    "name": "First Trust Exchange-Traded Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTAI",
    "name": "Fortress Transportation and Infrastructure Investors LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FTC",
    "name": "First Trust Exchange-Traded AlphaDEX Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTCH",
    "name": "Farfetch Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FTCS",
    "name": "First Trust Exchange-Traded Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTD",
    "name": "FTD Companies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTDR",
    "name": "frontdoor, inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTEK",
    "name": "Fuel Tech, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTEO",
    "name": "FRONTEO, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTF",
    "name": "Franklin Limited Duration Income Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "FTFT",
    "name": "Future FinTech Group Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTGC",
    "name": "First Trust Exchange-Traded Fund VII",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTHI",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTI",
    "name": "TechnipFMC plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FTK",
    "name": "Flotek Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FTLB",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTNT",
    "name": "Fortinet, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTNW",
    "name": "FTE Networks, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "FTR",
    "name": "Frontier Communications Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTRI",
    "name": "First Trust Exchange-Traded Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTS",
    "name": "Fortis Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FTSI",
    "name": "FTS International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FTSL",
    "name": "First Trust Exchange-Traded Fund IV",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTSM",
    "name": "First Trust Exchange-Traded Fund IV",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTSV",
    "name": "Forty Seven, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTV",
    "name": "Fortive Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FTV^A",
    "name": "Fortive Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FTXD",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTXG",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTXH",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTXL",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTXN",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTXO",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FTXR",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FUL",
    "name": "H. B. Fuller Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FULT",
    "name": "Fulton Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FUN",
    "name": "Cedar Fair, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "FUNC",
    "name": "First United Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FUND",
    "name": "Sprott Focus Trust, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FUSB",
    "name": "First US Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FUV",
    "name": "Arcimoto, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FV",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FVC",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FVCB",
    "name": "FVCBankcorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FVE",
    "name": "Five Star Senior Living Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FWONA",
    "name": "Liberty Media Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FWONK",
    "name": "Liberty Media Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FWP",
    "name": "Forward Pharma A/S",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FWRD",
    "name": "Forward Air Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FYC",
    "name": "First Trust Exchange-Traded AlphaDEX Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FYT",
    "name": "First Trust Exchange-Traded AlphaDEX Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "FYX",
    "name": "First Trust Exchange-Traded AlphaDEX Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "G",
    "name": "Genpact Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GAB",
    "name": "Gabelli Equity Trust, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GABC",
    "name": "German American Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GAB^D",
    "name": "Gabelli Equity Trust, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GAB^G",
    "name": "Gabelli Equity Trust, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GAB^H",
    "name": "Gabelli Equity Trust, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GAB^J",
    "name": "Gabelli Equity Trust, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GAIA",
    "name": "Gaia, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GAIN",
    "name": "Gladstone Investment Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GAINL",
    "name": "Gladstone Investment Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GAINM",
    "name": "Gladstone Investment Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GALT",
    "name": "Galectin Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GAM",
    "name": "General American Investors, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GAM^B",
    "name": "General American Investors, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GARS",
    "name": "Garrison Capital Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GASS",
    "name": "StealthGas, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GATX",
    "name": "GATX Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GBAB",
    "name": "Guggenheim Taxable Municipal Managed Duration Trst",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GBCI",
    "name": "Glacier Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GBDC",
    "name": "Golub Capital BDC, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GBL",
    "name": "Gamco Investors, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GBLI",
    "name": "Global Indemnity Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GBLIL",
    "name": "Global Indemnity Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GBLIZ",
    "name": "Global Indemnity Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GBNK",
    "name": "Guaranty Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GBR",
    "name": "New Concept Energy, Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GBT",
    "name": "Global Blood Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GBX",
    "name": "Greenbrier Companies, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GCAP",
    "name": "GAIN Capital Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GCBC",
    "name": "Greene County Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GCI",
    "name": "TEGNA Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GCO",
    "name": "Genesco Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GCP",
    "name": "GCP Applied Technologies Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GCV",
    "name": "Gabelli Convertible and Income Securities Fund, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GCV^B",
    "name": "Gabelli Convertible and Income Securities Fund, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GCVRZ",
    "name": "Sanofi",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GD",
    "name": "General Dynamics Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GDDY",
    "name": "GoDaddy Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GDEN",
    "name": "Golden Entertainment, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GDI",
    "name": "Gardner Denver Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GDL",
    "name": "The GDL Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GDL^C",
    "name": "The GDL Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GDO",
    "name": "Western Asset Global Corporate Defined Opportunity Fund Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GDOT",
    "name": "Green Dot Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GDP",
    "name": "Goodrich Petroleum Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GDS",
    "name": "GDS Holdings Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GDV",
    "name": "Gabelli Dividend",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GDV^A",
    "name": "Gabelli Dividend",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GDV^D",
    "name": "Gabelli Dividend",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GDV^G",
    "name": "Gabelli Dividend",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GE",
    "name": "General Electric Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GEC",
    "name": "Great Elm Capital Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GECC",
    "name": "Great Elm Capital Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GECCL",
    "name": "Great Elm Capital Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GECCM",
    "name": "Great Elm Capital Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GEF",
    "name": "Greif Bros. Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GEF.B",
    "name": "Greif Bros. Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GEL",
    "name": "Genesis Energy, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GEMP",
    "name": "Gemphire Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GEN",
    "name": "Genesis Healthcare, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GENC",
    "name": "Gencor Industries Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GENE",
    "name": "Genetic Technologies Ltd",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GENY",
    "name": "Principal Exchange-Traded Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GEO",
    "name": "Geo Group Inc (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GEOS",
    "name": "Geospace Technologies Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GER",
    "name": "Goldman Sachs MLP Energy Renaissance Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GERN",
    "name": "Geron Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GES",
    "name": "Guess?, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GEVO",
    "name": "Gevo, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GF",
    "name": "New Germany Fund, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GFA",
    "name": "Gafisa SA",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GFED",
    "name": "Guaranty Federal Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GFF",
    "name": "Griffon Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GFI",
    "name": "Gold Fields Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GFN",
    "name": "General Finance Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GFNCP",
    "name": "General Finance Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GFNSL",
    "name": "General Finance Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GFY",
    "name": "Western Asset Variable Rate Strategic Fund Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GG",
    "name": "Goldcorp Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GGAL",
    "name": "Grupo Financiero Galicia S.A.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GGB",
    "name": "Gerdau S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GGG",
    "name": "Graco Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GGM",
    "name": "Guggenheim Credit Allocation Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GGN",
    "name": "GAMCO Global Gold, Natural Reources & Income Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GGN^B",
    "name": "GAMCO Global Gold, Natural Reources & Income Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GGO",
    "name": "The Gabelli Go Anywhere Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GGO^A",
    "name": "The Gabelli Go Anywhere Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GGT",
    "name": "Gabelli Multi-Media Trust Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GGT^B",
    "name": "Gabelli Multi-Media Trust Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GGT^E",
    "name": "Gabelli Multi-Media Trust Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GGZ",
    "name": "Gabelli Global Small and Mid Cap Value Trust (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GGZ^A",
    "name": "Gabelli Global Small and Mid Cap Value Trust (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GH",
    "name": "Guardant Health, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GHC",
    "name": "Graham Holdings Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GHDX",
    "name": "Genomic Health, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GHG",
    "name": "GreenTree Hospitality Group Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GHL",
    "name": "Greenhill & Co., Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GHM",
    "name": "Graham Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GHY",
    "name": "PGIM Global Short Duration High Yield Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GIB",
    "name": "CGI Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GIFI",
    "name": "Gulf Island Fabrication, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GIG",
    "name": "GigCapital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GIG~",
    "name": "GigCapital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GIGM",
    "name": "GigaMedia Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GIG.U",
    "name": "GigCapital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GIG.WS",
    "name": "GigCapital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GIII",
    "name": "G-III Apparel Group, LTD.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GIL",
    "name": "Gildan Activewear, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GILD",
    "name": "Gilead Sciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GILT",
    "name": "Gilat Satellite Networks Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GIM",
    "name": "Templeton Global Income Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GIS",
    "name": "General Mills, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GJH",
    "name": "STRATS Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GJO",
    "name": "STRATS Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GJP",
    "name": "Synthetic Fixed-Income Securities, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GJR",
    "name": "Synthetic Fixed-Income Securities, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GJS",
    "name": "STRATS Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GJT",
    "name": "Synthetic Fixed-Income Securities, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GJV",
    "name": "Synthetic Fixed-Income Securities, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GKOS",
    "name": "Glaukos Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GLAC",
    "name": "Greenland Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLACR",
    "name": "Greenland Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLACU",
    "name": "Greenland Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLACW",
    "name": "Greenland Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLAD",
    "name": "Gladstone Capital Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLADD",
    "name": "Gladstone Capital Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLADN",
    "name": "Gladstone Capital Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLBS",
    "name": "Globus Maritime Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLBZ",
    "name": "Glen Burnie Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLDD",
    "name": "Great Lakes Dredge & Dock Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLDI",
    "name": "Credit Suisse AG",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLG",
    "name": "China Commercial Credit, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLIBA",
    "name": "GCI Liberty, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLIBP",
    "name": "GCI Liberty, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLMD",
    "name": "Galmed Pharmaceuticals Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLNG",
    "name": "Golar LNG Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLO",
    "name": "Clough Global Opportunities Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GLOB",
    "name": "Globant S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GLOG",
    "name": "GasLog LP.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GLOG^A",
    "name": "GasLog LP.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GLOP",
    "name": "GasLog Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GLOP^A",
    "name": "GasLog Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GLOP^B",
    "name": "GasLog Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GLOP^C",
    "name": "GasLog Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GLOW",
    "name": "Glowpoint, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GLP",
    "name": "Global Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GLP^A",
    "name": "Global Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GLPG",
    "name": "Galapagos NV",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLPI",
    "name": "Gaming and Leisure Properties, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLQ",
    "name": "Clough Global Equity Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GLRE",
    "name": "Greenlight Reinsurance, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLT",
    "name": "Glatfelter",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GLU",
    "name": "The Gabelli Global Utility and Income Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GLU~",
    "name": "The Gabelli Global Utility and Income Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GLU^A",
    "name": "The Gabelli Global Utility and Income Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GLUU",
    "name": "Glu Mobile Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GLV",
    "name": "Clough Global Dividend and Income Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GLW",
    "name": "Corning Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GLYC",
    "name": "GlycoMimetics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GM",
    "name": "General Motors Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GMDA",
    "name": "Gamida Cell Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GME",
    "name": "Gamestop Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GMED",
    "name": "Globus Medical, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GMLP",
    "name": "Golar LNG Partners LP",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GMLPP",
    "name": "Golar LNG Partners LP",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GMO",
    "name": "General Moly, Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GMRE",
    "name": "Global Medical REIT Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GMRE^A",
    "name": "Global Medical REIT Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GMS",
    "name": "GMS Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GMTA",
    "name": "GATX Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GM.WS.B",
    "name": "General Motors Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GMZ",
    "name": "Goldman Sachs MLP Income Opportunities Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GNBC",
    "name": "Green Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GNC",
    "name": "GNC Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GNCA",
    "name": "Genocea Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GNE",
    "name": "Genie Energy Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GNE^A",
    "name": "Genie Energy Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GNK",
    "name": "Genco Shipping & Trading Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GNL",
    "name": "Global Net Lease, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GNL^A",
    "name": "Global Net Lease, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GNMA",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GNMK",
    "name": "GenMark Diagnostics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GNMX",
    "name": "Aevi Genomic Medicine, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GNPX",
    "name": "Genprex, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GNRC",
    "name": "Generac Holdlings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GNRX",
    "name": "VanEck Vectors ETF Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GNT",
    "name": "GAMCO Natural Resources, Gold & Income Tust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GNT^A",
    "name": "GAMCO Natural Resources, Gold & Income Tust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GNTX",
    "name": "Gentex Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GNTY",
    "name": "Guaranty Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GNUS",
    "name": "Genius Brands International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GNW",
    "name": "Genworth Financial Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GOF",
    "name": "Guggenheim Strategic Opportunities Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GOGL",
    "name": "Golden Ocean Group Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GOGO",
    "name": "Gogo Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GOL",
    "name": "Gol Linhas Aereas Inteligentes S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GOLD",
    "name": "Randgold Resources Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GOLF",
    "name": "Acushnet Holdings Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GOOD",
    "name": "Gladstone Commercial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GOODM",
    "name": "Gladstone Commercial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GOODO",
    "name": "Gladstone Commercial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GOODP",
    "name": "Gladstone Commercial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GOOG",
    "name": "Alphabet Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GOOGL",
    "name": "Alphabet Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GOOS",
    "name": "Canada Goose Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GORO",
    "name": "Gold Resource Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GOV",
    "name": "Government Properties Income Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GOVNI",
    "name": "Government Properties Income Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GPAQ",
    "name": "Gordon Pointe Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GPAQU",
    "name": "Gordon Pointe Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GPAQW",
    "name": "Gordon Pointe Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GPC",
    "name": "Genuine Parts Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GPI",
    "name": "Group 1 Automotive, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GPIC",
    "name": "Gaming Partners International Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GPJA",
    "name": "Georgia Power Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GPK",
    "name": "Graphic Packaging Holding Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GPL",
    "name": "Great Panther Silver Limited",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GPM",
    "name": "Guggenheim Enhanced Equity Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GPMT",
    "name": "Granite Point Mortgage Trust Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GPN",
    "name": "Global Payments Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GPOR",
    "name": "Gulfport Energy Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GPP",
    "name": "Green Plains Partners LP",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GPRE",
    "name": "Green Plains, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GPRK",
    "name": "Geopark Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GPRO",
    "name": "GoPro, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GPS",
    "name": "Gap, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GPX",
    "name": "GP Strategies Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GRA",
    "name": "W.R. Grace & Co.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GRAF",
    "name": "Graf Industrial Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GRAF.U",
    "name": "Graf Industrial Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GRAF.WS",
    "name": "Graf Industrial Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GRAM",
    "name": "Grana y Montero S.A.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GRBIC",
    "name": "Gabelli NextShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GRBK",
    "name": "Green Brick Partners, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GRC",
    "name": "Gorman-Rupp Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GRF",
    "name": "Eagle Capital Growth Fund, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GRFS",
    "name": "Grifols, S.A.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GRID",
    "name": "First Trust Exchange-Traded Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GRIF",
    "name": "Griffin Industrial Realty, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GRIN",
    "name": "Grindrod Shipping Holdings Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GRMN",
    "name": "Garmin Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GRNQ",
    "name": "Greenpro Capital Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GROW",
    "name": "U.S. Global Investors, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GRPN",
    "name": "Groupon, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GRP.U",
    "name": "Granite Real Estate Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GRSH",
    "name": "Gores Holdings III, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GRSHU",
    "name": "Gores Holdings III, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GRSHW",
    "name": "Gores Holdings III, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GRTS",
    "name": "Gritstone Oncology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GRUB",
    "name": "GrubHub Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GRVY",
    "name": "GRAVITY Co., Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GRX",
    "name": "The Gabelli Healthcare & Wellness Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GRX^A",
    "name": "The Gabelli Healthcare & Wellness Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GRX^B",
    "name": "The Gabelli Healthcare & Wellness Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GS",
    "name": "Goldman Sachs Group, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GS^A",
    "name": "Goldman Sachs Group, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GSAH",
    "name": "GS Acquisition Holdings Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GSAH.U",
    "name": "GS Acquisition Holdings Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GSAH.WS",
    "name": "GS Acquisition Holdings Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GSAT",
    "name": "Globalstar, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GSB",
    "name": "GlobalSCAPE, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GS^B",
    "name": "Goldman Sachs Group, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GSBC",
    "name": "Great Southern Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GSBD",
    "name": "Goldman Sachs BDC, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GS^C",
    "name": "Goldman Sachs Group, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GS^D",
    "name": "Goldman Sachs Group, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GSH",
    "name": "Guangshen Railway Company Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GSHD",
    "name": "Goosehead Insurance, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GSIT",
    "name": "GSI Technology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GS^J",
    "name": "Goldman Sachs Group, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GSK",
    "name": "GlaxoSmithKline PLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GS^K",
    "name": "Goldman Sachs Group, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GSKY",
    "name": "GreenSky, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GSL",
    "name": "Global Ship Lease, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GSL^B",
    "name": "Global Ship Lease, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GSM",
    "name": "Ferroglobe PLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GS^N",
    "name": "Goldman Sachs Group, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GSS",
    "name": "Golden Star Resources, Ltd",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GSUM",
    "name": "Gridsum Holding Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GSV",
    "name": "Gold Standard Ventures Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GSVC",
    "name": "GSV Capital Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GT",
    "name": "The Goodyear Tire & Rubber Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GTE",
    "name": "Gran Tierra Energy Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GTES",
    "name": "Gates Industrial Corporation plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GTHX",
    "name": "G1 Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GTIM",
    "name": "Good Times Restaurants Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GTLS",
    "name": "Chart Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GTN",
    "name": "Gray Television, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GTN.A",
    "name": "Gray Television, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GTS",
    "name": "Triple-S Management Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GTT",
    "name": "GTT Communications, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GTX",
    "name": "Garrett Motion Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GTXI",
    "name": "GTx, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GTY",
    "name": "Getty Realty Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GTYH",
    "name": "GTY Technology Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GTYHU",
    "name": "GTY Technology Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GTYHW",
    "name": "GTY Technology Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GULF",
    "name": "WisdomTree Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GURE",
    "name": "Gulf Resources, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GUT",
    "name": "Gabelli Utility Trust (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GUT^A",
    "name": "Gabelli Utility Trust (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GUT^C",
    "name": "Gabelli Utility Trust (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GV",
    "name": "Goldfield Corporation (The)",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "GVA",
    "name": "Granite Construction Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GVP",
    "name": "GSE Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GWB",
    "name": "Great Western Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GWGH",
    "name": "GWG Holdings, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GWPH",
    "name": "GW Pharmaceuticals Plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GWR",
    "name": "Genesee & Wyoming, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GWRE",
    "name": "Guidewire Software, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GWRS",
    "name": "Global Water Resources, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GWW",
    "name": "W.W. Grainger, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GYB",
    "name": "CABCO Series 2004-101 Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GYC",
    "name": "Corporate Asset Backed Corp CABCO",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "GYRO",
    "name": "Gyrodyne , LLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "GZT",
    "name": "Gazit-Globe Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "H",
    "name": "Hyatt Hotels Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HA",
    "name": "Hawaiian Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HABT",
    "name": "The Habit Restaurants, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HAE",
    "name": "Haemonetics Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HAFC",
    "name": "Hanmi Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HAIN",
    "name": "The Hain Celestial Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HAIR",
    "name": "Restoration Robotics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HAL",
    "name": "Halliburton Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HALL",
    "name": "Hallmark Financial Services, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HALO",
    "name": "Halozyme Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HAS",
    "name": "Hasbro, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HASI",
    "name": "Hannon Armstrong Sustainable Infrastructure Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HAYN",
    "name": "Haynes International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HBAN",
    "name": "Huntington Bancshares Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HBANN",
    "name": "Huntington Bancshares Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HBANO",
    "name": "Huntington Bancshares Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HBB",
    "name": "Hamilton Beach Brands Holding Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HBCP",
    "name": "Home Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HBI",
    "name": "Hanesbrands Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HBIO",
    "name": "Harvard Bioscience, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HBK",
    "name": "Hamilton Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HBM",
    "name": "Hudbay Minerals Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HBMD",
    "name": "Howard Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HBNC",
    "name": "Horizon Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HBP",
    "name": "Huttig Building Products, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HCA",
    "name": "HCA Healthcare, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HCAP",
    "name": "Harvest Capital Credit Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HCAPZ",
    "name": "Harvest Capital Credit Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HCC",
    "name": "Warrior Met Coal, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HCCH",
    "name": "HL Acquisitions Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HCCHR",
    "name": "HL Acquisitions Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HCCHU",
    "name": "HL Acquisitions Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HCCHW",
    "name": "HL Acquisitions Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HCCI",
    "name": "Heritage-Crystal Clean, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HCFT",
    "name": "Hunt Companies Finance Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HCFT^A",
    "name": "Hunt Companies Finance Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HCHC",
    "name": "HC2 Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HCI",
    "name": "HCI Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HCKT",
    "name": "The Hackett Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HCLP",
    "name": "Hi-Crush Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HCM",
    "name": "Hutchison China MediTech Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HCP",
    "name": "HCP, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HCSG",
    "name": "Healthcare Services Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HCXY",
    "name": "Hercules Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HCXZ",
    "name": "Hercules Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HD",
    "name": "Home Depot, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HDB",
    "name": "HDFC Bank Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HDP",
    "name": "Hortonworks, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HDS",
    "name": "HD Supply Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HDSN",
    "name": "Hudson Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HE",
    "name": "Hawaiian Electric Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HEAR",
    "name": "Turtle Beach Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HEB",
    "name": "Hemispherx BioPharma, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "HEBT",
    "name": "Hebron Technology Co., Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HEES",
    "name": "H&E Equipment Services, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HEI",
    "name": "Heico Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HEI.A",
    "name": "Heico Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HELE",
    "name": "Helen of Troy Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HEP",
    "name": "Holly Energy Partners, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HEQ",
    "name": "John Hancock Hedged Equity & Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HES",
    "name": "Hess Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HES^A",
    "name": "Hess Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HESM",
    "name": "Hess Midstream Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HE^U",
    "name": "Hawaiian Electric Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HEWG",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HF",
    "name": "HFF, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HFBC",
    "name": "HopFed Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HFBL",
    "name": "Home Federal Bancorp, Inc. of Louisiana",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HFC",
    "name": "HollyFrontier Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HFFG",
    "name": "HF Foods Group Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HFGIC",
    "name": "Hartford Funds NextShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HFRO",
    "name": "Highland Floating Rate Opportunities Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HFWA",
    "name": "Heritage Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HGH",
    "name": "Hartford Financial Services Group, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HGSH",
    "name": "China HGS Real Estate, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HGV",
    "name": "Hilton Grand Vacations Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HHC",
    "name": "Howard Hughes Corporation (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HHS",
    "name": "Harte-Hanks, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HI",
    "name": "Hillenbrand Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HIBB",
    "name": "Hibbett Sports, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HIE",
    "name": "Miller/Howard High Income Equity Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HIFR",
    "name": "InfraREIT, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HIFS",
    "name": "Hingham Institution for Savings",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HIG",
    "name": "Hartford Financial Services Group, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HIG^G",
    "name": "Hartford Financial Services Group, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HIG.WS",
    "name": "Hartford Financial Services Group, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HIHO",
    "name": "Highway Holdings Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HII",
    "name": "Huntington Ingalls Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HIIQ",
    "name": "Health Insurance Innovations, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HIL",
    "name": "Hill International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HIMX",
    "name": "Himax Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HIO",
    "name": "Western Asset High Income Opportunity Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HIVE",
    "name": "Aerohive Networks, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HIW",
    "name": "Highwoods Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HIX",
    "name": "Western Asset High Income Fund II Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HJLI",
    "name": "Hancock Jaffe Laboratories, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HJLIW",
    "name": "Hancock Jaffe Laboratories, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HJV",
    "name": "MS Structured Asset Corp Saturns GE Cap Corp Series 2002-14",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HK",
    "name": "Halcon Resources Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HK.WS",
    "name": "Halcon Resources Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HL",
    "name": "Hecla Mining Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HL^B",
    "name": "Hecla Mining Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HLF",
    "name": "Herbalife Nutrition Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HLG",
    "name": "Hailiang Education Group Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HLI",
    "name": "Houlihan Lokey, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HLIT",
    "name": "Harmonic Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HLM^",
    "name": "Hillman Group Capital Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "HLNE",
    "name": "Hamilton Lane Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HLT",
    "name": "Hilton Worldwide Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HLTH",
    "name": "Nobilis Health Corp.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "HLX",
    "name": "Helix Energy Solutions Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HMC",
    "name": "Honda Motor Company, Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HMG",
    "name": "HMG/Courtland Properties, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "HMHC",
    "name": "Houghton Mifflin Harcourt Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HMI",
    "name": "Huami Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HMLP",
    "name": "Hoegh LNG Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HMLP^A",
    "name": "Hoegh LNG Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HMN",
    "name": "Horace Mann Educators Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HMNF",
    "name": "HMN Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HMNY",
    "name": "Helios and Matheson Analytics Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HMST",
    "name": "HomeStreet, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HMSY",
    "name": "HMS Holdings Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HMTA",
    "name": "HomeTown Bankshares Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HMTV",
    "name": "Hemisphere Media Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HMY",
    "name": "Harmony Gold Mining Company Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HNDL",
    "name": "Strategy Shares",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HNGR",
    "name": "Hanger, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HNI",
    "name": "HNI Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HNNA",
    "name": "Hennessy Advisors, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HNP",
    "name": "Huaneng Power International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HNRG",
    "name": "Hallador Energy Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HNW",
    "name": "Pioneer Diversified High Income Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "HOFT",
    "name": "Hooker Furniture Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HOG",
    "name": "Harley-Davidson, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HOLI",
    "name": "Hollysys Automation Technologies, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HOLX",
    "name": "Hologic, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HOMB",
    "name": "Home BancShares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HOME",
    "name": "At Home Group Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HON",
    "name": "Honeywell International Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HONE",
    "name": "HarborOne Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HOPE",
    "name": "Hope Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HOS",
    "name": "Hornbeck Offshore Services",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HOV",
    "name": "Hovnanian Enterprises Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HOVNP",
    "name": "Hovnanian Enterprises Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HP",
    "name": "Helmerich & Payne, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HPE",
    "name": "Hewlett Packard Enterprise Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HPF",
    "name": "John Hancock Pfd Income Fund II",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HPI",
    "name": "John Hancock Preferred Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HPJ",
    "name": "Highpower International Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HPP",
    "name": "Hudson Pacific Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HPQ",
    "name": "HP Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HPR",
    "name": "HighPoint Resources Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HPS",
    "name": "John Hancock Preferred Income Fund III",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HPT",
    "name": "Hospitality Properties Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HQCL",
    "name": "Hanwha Q CELLS Co., Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HQH",
    "name": "Tekla Healthcare Investors",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HQL",
    "name": "Tekla Life Sciences Investors",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HQY",
    "name": "HealthEquity, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HR",
    "name": "Healthcare Realty Trust Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HRB",
    "name": "H&R Block, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HRC",
    "name": "Hill-Rom Holdings Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HRI",
    "name": "Herc Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HRL",
    "name": "Hormel Foods Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HRS",
    "name": "Harris Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HRTG",
    "name": "Heritage Insurance Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HRTX",
    "name": "Heron Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HRZN",
    "name": "Horizon Technology Finance Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HSBC",
    "name": "HSBC Holdings plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HSBC^A",
    "name": "HSBC Holdings plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HSC",
    "name": "Harsco Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HSDT",
    "name": "Helius Medical Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HSGX",
    "name": "Histogenics Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HSIC",
    "name": "Henry Schein, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HSII",
    "name": "Heidrick & Struggles International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HSKA",
    "name": "Heska Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HSON",
    "name": "Hudson Global, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HST",
    "name": "Host Hotels & Resorts, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HSTM",
    "name": "HealthStream, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HSY",
    "name": "Hershey Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HT",
    "name": "Hersha Hospitality Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HTA",
    "name": "Healthcare Trust of America, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HTBI",
    "name": "HomeTrust Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HTBK",
    "name": "Heritage Commerce Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HTBX",
    "name": "Heat Biologics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HT^C",
    "name": "Hersha Hospitality Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HTD",
    "name": "John Hancock Tax Advantaged Dividend Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HT^D",
    "name": "Hersha Hospitality Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HT^E",
    "name": "Hersha Hospitality Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HTFA",
    "name": "Horizon Technology Finance Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HTGC",
    "name": "Hercules Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HTGM",
    "name": "HTG Molecular Diagnostics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HTGX",
    "name": "Hercules Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HTH",
    "name": "Hilltop Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HTHT",
    "name": "Huazhu Group Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HTLD",
    "name": "Heartland Express, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HTLF",
    "name": "Heartland Financial USA, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HTY",
    "name": "John Hancock Tax-Advantaged Global Shareholder Yield Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HTZ",
    "name": "Hertz Global Holdings, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HUBB",
    "name": "Hubbell Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HUBG",
    "name": "Hub Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HUBS",
    "name": "HubSpot, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HUD",
    "name": "Hudson Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HUM",
    "name": "Humana Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HUN",
    "name": "Huntsman Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HUNT",
    "name": "Hunter Maritime Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HUNTU",
    "name": "Hunter Maritime Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HUNTW",
    "name": "Hunter Maritime Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HURC",
    "name": "Hurco Companies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HURN",
    "name": "Huron Consulting Group Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HUSA",
    "name": "Houston American Energy Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "HUYA",
    "name": "HUYA Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HVBC",
    "name": "HV Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HVT",
    "name": "Haverty Furniture Companies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HVT.A",
    "name": "Haverty Furniture Companies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HWBK",
    "name": "Hawthorn Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HWC",
    "name": "Hancock Whitney Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HWCC",
    "name": "Houston Wire & Cable Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HWCPL",
    "name": "Hancock Whitney Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HWKN",
    "name": "Hawkins, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HX",
    "name": "Hexindai Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HXL",
    "name": "Hexcel Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HY",
    "name": "Hyster-Yale Materials Handling, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HYAC",
    "name": "Haymaker Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HYACU",
    "name": "Haymaker Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HYACW",
    "name": "Haymaker Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HYB",
    "name": "New America High Income Fund, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HYGS",
    "name": "Hydrogenics Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HYI",
    "name": "Western Asset High Yield Defined Opportunity Fund Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HYLS",
    "name": "First Trust Exchange-Traded Fund IV",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HYND",
    "name": "WisdomTree Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HYRE",
    "name": "HyreCar Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HYT",
    "name": "Blackrock Corporate High Yield Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HYXE",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HYZD",
    "name": "WisdomTree Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HZN",
    "name": "Horizon Global Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "HZNP",
    "name": "Horizon Pharma plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "HZO",
    "name": "MarineMax, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "I",
    "name": "Intelsat S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IAC",
    "name": "IAC/InterActiveCorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IAE",
    "name": "Voya Asia Pacific High Dividend Equity Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IAF",
    "name": "Aberdeen Australia Equity Fund Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "IAG",
    "name": "Iamgold Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IART",
    "name": "Integra LifeSciences Holdings Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IBA",
    "name": "Industrias Bachoco, S.A. de C.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IBB",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IBCP",
    "name": "Independent Bank Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IBIO",
    "name": "iBio, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "IBKC",
    "name": "IBERIABANK Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IBKCO",
    "name": "IBERIABANK Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IBKCP",
    "name": "IBERIABANK Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IBM",
    "name": "International Business Machines Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IBN",
    "name": "ICICI Bank Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IBO",
    "name": "IBO (Listing Market - NYSE Amex Network B F)",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "IBOC",
    "name": "International Bancshares Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IBP",
    "name": "Installed Building Products, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IBTX",
    "name": "Independent Bank Group, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IBUY",
    "name": "Amplify ETF Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ICAD",
    "name": "icad inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ICBK",
    "name": "County Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ICCC",
    "name": "ImmuCell Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ICCH",
    "name": "ICC Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ICD",
    "name": "Independence Contract Drilling, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ICE",
    "name": "Intercontinental Exchange Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ICFI",
    "name": "ICF International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ICHR",
    "name": "Ichor Holdings",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ICL",
    "name": "Israel Chemicals Shs",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ICLK",
    "name": "iClick Interactive Asia Group Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ICLN",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ICLR",
    "name": "ICON plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ICON",
    "name": "Iconix Brand Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ICPT",
    "name": "Intercept Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ICUI",
    "name": "ICU Medical, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IDA",
    "name": "IDACORP, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IDCC",
    "name": "InterDigital, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IDE",
    "name": "Voya Infrastructure, Industrials and Materials Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IDEX",
    "name": "Ideanomics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IDLB",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IDN",
    "name": "Intellicheck, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "IDRA",
    "name": "Idera Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IDSA",
    "name": "Industrial Services of America, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IDSY",
    "name": "I.D. Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IDT",
    "name": "IDT Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IDTI",
    "name": "Integrated Device Technology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IDXG",
    "name": "Interpace Diagnostics Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IDXX",
    "name": "IDEXX Laboratories, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IEA",
    "name": "Infrastructure and Energy Alternatives, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IEAWW",
    "name": "Infrastructure and Energy Alternatives, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IEC",
    "name": "IEC Electronics Corp.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "IEF",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IEI",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IEP",
    "name": "Icahn Enterprises L.P.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IESC",
    "name": "IES Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IEUS",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IEX",
    "name": "IDEX Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IFEU",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IFF",
    "name": "International Flavors & Fragrances, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IFFT",
    "name": "International Flavors & Fragrances, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IFGL",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IFMK",
    "name": "iFresh Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IFN",
    "name": "India Fund, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IFRX",
    "name": "InflaRx N.V.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IFV",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IGA",
    "name": "Voya Global Advantage and Premium Opportunity Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IGD",
    "name": "Voya Global Equity Dividend and Premium Opportunity Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IGF",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IGI",
    "name": "Western Asset Investment Grade Defined Opportunity Trust Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IGIB",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IGLD",
    "name": "Internet Gold Golden Lines Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IGOV",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IGR",
    "name": "CBRE Clarion Global Real Estate Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IGSB",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IGT",
    "name": "International Game Technology",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IHC",
    "name": "Independence Holding Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IHD",
    "name": "Voya Emerging Markets High Income Dividend Equity Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IHG",
    "name": "Intercontinental Hotels Group",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IHIT",
    "name": "Invesco High Income 2023 Target Term Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IHT",
    "name": "InnSuites Hospitality Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "IHTA",
    "name": "Invesco High Income 2024 Target Term Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IID",
    "name": "Voya International High Dividend Equity Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IIF",
    "name": "Morgan Stanley India Investment Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "III",
    "name": "Information Services Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IIIN",
    "name": "Insteel Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IIIV",
    "name": "i3 Verticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IIJI",
    "name": "Internet Initiative Japan, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IIM",
    "name": "Invesco Value Municipal Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IIN",
    "name": "IntriCon Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IIPR",
    "name": "Innovative Industrial Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IIPR^A",
    "name": "Innovative Industrial Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IIVI",
    "name": "II-VI Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IJT",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IKNX",
    "name": "Ikonics Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ILMN",
    "name": "Illumina, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ILPT",
    "name": "Industrial Logistics Properties Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IMAX",
    "name": "Imax Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IMDZ",
    "name": "Immune Design Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IMGN",
    "name": "ImmunoGen, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IMH",
    "name": "Impac Mortgage Holdings, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "IMI",
    "name": "Intermolecular, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IMKTA",
    "name": "Ingles Markets, Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IMMP",
    "name": "Immutep Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IMMR",
    "name": "Immersion Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IMMU",
    "name": "Immunomedics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IMMY",
    "name": "Imprimis Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IMO",
    "name": "Imperial Oil Limited",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "IMOS",
    "name": "ChipMOS TECHNOLOGIES INC.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IMPV",
    "name": "Imperva, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IMRN",
    "name": "Immuron Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IMRNW",
    "name": "Immuron Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IMTE",
    "name": "Integrated Media Technology Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IMV",
    "name": "IMV Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IMXI",
    "name": "International Money Express, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INAP",
    "name": "Internap Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INB",
    "name": "Cohen & Steers Global Income Builder, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "INBK",
    "name": "First Internet Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INBKL",
    "name": "First Internet Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INCY",
    "name": "Incyte Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INDB",
    "name": "Independent Bank Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INDU",
    "name": "Industrea Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INDUU",
    "name": "Industrea Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INDUW",
    "name": "Industrea Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INDY",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INF",
    "name": "Brookfield Global Listed Infrastructure Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "INFI",
    "name": "Infinity Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INFN",
    "name": "Infinera Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INFO",
    "name": "IHS Markit Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INFR",
    "name": "Legg Mason ETF Investment Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INFU",
    "name": "InfuSystems Holdings, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "INFY",
    "name": "Infosys Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ING",
    "name": "ING Group, N.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "INGN",
    "name": "Inogen, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INGR",
    "name": "Ingredion Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "INN",
    "name": "Summit Hotel Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "INN^D",
    "name": "Summit Hotel Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "INN^E",
    "name": "Summit Hotel Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "INNT",
    "name": "Innovate Biopharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INO",
    "name": "Inovio Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INOD",
    "name": "Innodata Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INOV",
    "name": "Inovalon Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INPX",
    "name": "Inpixon",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INS",
    "name": "Intelligent Systems Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "INSE",
    "name": "Inspired Entertainment, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INSG",
    "name": "Inseego Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INSI",
    "name": "Insight Select Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "INSM",
    "name": "Insmed, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INSP",
    "name": "Inspire Medical Systems, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "INST",
    "name": "Instructure, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "INSW",
    "name": "International Seaways, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "INSW^A",
    "name": "International Seaways, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "INSY",
    "name": "Insys Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INT",
    "name": "World Fuel Services Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "INTC",
    "name": "Intel Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INTG",
    "name": "The Intergroup Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INTL",
    "name": "INTL FCStone Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INTT",
    "name": "inTest Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "INTU",
    "name": "Intuit Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INTX",
    "name": "Intersections, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INUV",
    "name": "Inuvo, Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "INVA",
    "name": "Innoviva, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INVE",
    "name": "Identiv, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INVH",
    "name": "Invitation Homes Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "INWK",
    "name": "InnerWorkings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "INXN",
    "name": "InterXion Holding N.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IO",
    "name": "Ion Geophysical Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IONS",
    "name": "Ionis Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IOR",
    "name": "Income Opportunity Realty Investors, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "IOSP",
    "name": "Innospec Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IOTS",
    "name": "Adesto Technologies Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IOVA",
    "name": "Iovance Biotherapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IP",
    "name": "International Paper Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IPAR",
    "name": "Inter Parfums, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IPAS",
    "name": "iPass Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IPB",
    "name": "Merrill Lynch & Co., Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "IPCI",
    "name": "Intellipharmaceutics International Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IPDN",
    "name": "Professional Diversity Network, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IPG",
    "name": "Interpublic Group of Companies, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IPGP",
    "name": "IPG Photonics Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IPHI",
    "name": "Inphi Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IPHS",
    "name": "Innophos Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IPI",
    "name": "Intrepid Potash, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IPIC",
    "name": "iPic Entertainment Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IPKW",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IPL^D",
    "name": "Interstate Power and Light Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IPOA",
    "name": "Social Capital Hedosophia Holdings Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IPOA.U",
    "name": "Social Capital Hedosophia Holdings Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IPOA.WS",
    "name": "Social Capital Hedosophia Holdings Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IPWR",
    "name": "Ideal Power Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IQ",
    "name": "iQIYI, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IQI",
    "name": "Invesco Quality Municipal Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IQV",
    "name": "IQVIA Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IR",
    "name": "Ingersoll-Rand plc (Ireland)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IRBT",
    "name": "iRobot Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IRCP",
    "name": "IRSA Propiedades Comerciales S.A.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IRDM",
    "name": "Iridium Communications Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IRDMB",
    "name": "Iridium Communications Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IRET",
    "name": "Investors Real Estate Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IRET^C",
    "name": "Investors Real Estate Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IRIX",
    "name": "IRIDEX Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IRL",
    "name": "New Ireland Fund, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IRM",
    "name": "Iron Mountain Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IRMD",
    "name": "iRadimed Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IROQ",
    "name": "IF Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IRR",
    "name": "Voya Natural Resources Equity Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IRS",
    "name": "IRSA Inversiones Y Representaciones S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IRT",
    "name": "Independence Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IRTC",
    "name": "iRhythm Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IRWD",
    "name": "Ironwood Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ISBC",
    "name": "Investors Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ISCA",
    "name": "International Speedway Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ISD",
    "name": "PGIM Short Duration High Yield Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ISDR",
    "name": "Issuer Direct Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ISDS",
    "name": "Powershares Exchange-Traded Self-Indexed Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ISDX",
    "name": "Powershares Exchange-Traded Self-Indexed Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ISEM",
    "name": "Powershares Exchange-Traded Self-Indexed Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ISF",
    "name": "ING Group, N.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ISG",
    "name": "ING Group, N.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ISHG",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ISIG",
    "name": "Insignia Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ISNS",
    "name": "Image Sensing Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ISR",
    "name": "IsoRay, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ISRG",
    "name": "Intuitive Surgical, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ISRL",
    "name": "Isramco, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ISSC",
    "name": "Innovative Solutions and Support, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ISTB",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ISTR",
    "name": "Investar Holding Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IT",
    "name": "Gartner, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ITCB",
    "name": "Ita? CorpBanca",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ITCI",
    "name": "Intra-Cellular Therapies Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ITEQ",
    "name": "BlueStar Israel Technology ETF",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ITG",
    "name": "Investment Technology Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ITGR",
    "name": "Integer Holdings Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ITI",
    "name": "Iteris, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ITIC",
    "name": "Investors Title Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ITP",
    "name": "IT Tech Packaging, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ITRI",
    "name": "Itron, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ITRM",
    "name": "Iterum Therapeutics plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ITRN",
    "name": "Ituran Location and Control Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ITT",
    "name": "ITT Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ITUB",
    "name": "Itau Unibanco Banco Holding SA",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ITW",
    "name": "Illinois Tool Works Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IUS",
    "name": "Powershares Exchange-Traded Self-Indexed Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IUSB",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IUSG",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IUSS",
    "name": "Powershares Exchange-Traded Self-Indexed Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IUSV",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IVAC",
    "name": "Intevac, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IVC",
    "name": "Invacare Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IVENC",
    "name": "Ivy NextShares",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IVFGC",
    "name": "Ivy NextShares",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IVFVC",
    "name": "Ivy NextShares",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IVH",
    "name": "Ivy High Income Opportunities Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IVR",
    "name": "INVESCO MORTGAGE CAPITAL INC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IVR^A",
    "name": "Invesco Mortgage Capital Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IVR^B",
    "name": "INVESCO MORTGAGE CAPITAL INC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IVR^C",
    "name": "INVESCO MORTGAGE CAPITAL INC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IVZ",
    "name": "Invesco Plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IX",
    "name": "Orix Corp Ads",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "IXUS",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "IZEA",
    "name": "IZEA Worldwide, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JACK",
    "name": "Jack In The Box Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JAG",
    "name": "Jagged Peak Energy Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JAGX",
    "name": "Jaguar Health, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JAKK",
    "name": "JAKKS Pacific, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JASN",
    "name": "Jason Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JASNW",
    "name": "Jason Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JAX",
    "name": "J. Alexander&#39;s Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JAZZ",
    "name": "Jazz Pharmaceuticals plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JBGS",
    "name": "JBG SMITH Properties",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JBHT",
    "name": "J.B. Hunt Transport Services, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JBK",
    "name": "Lehman ABS Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JBL",
    "name": "Jabil Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JBLU",
    "name": "JetBlue Airways Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JBN",
    "name": "Select Asset Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JBR",
    "name": "Select Asset Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JBSS",
    "name": "John B. Sanfilippo & Son, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JBT",
    "name": "John Bean Technologies Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JCAP",
    "name": "Jernigan Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JCAP^B",
    "name": "Jernigan Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JCE",
    "name": "Nuveen Core Equity Alpha Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JCI",
    "name": "Johnson Controls International plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JCO",
    "name": "Nuveen Credit Opportunities 2022 Target Term Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JCOM",
    "name": "j2 Global, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JCP",
    "name": "J.C. Penney Company, Inc. Holding Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JCS",
    "name": "Communications Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JCTCF",
    "name": "Jewett-Cameron Trading Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JD",
    "name": "JD.com, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JDD",
    "name": "Nuveen Diversified Dividend and Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JE",
    "name": "Just Energy Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JE^A",
    "name": "Just Energy Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JEC",
    "name": "Jacobs Engineering Group Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JEF",
    "name": "Jefferies Financial Group Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JELD",
    "name": "JELD-WEN Holding, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JEMD",
    "name": "Nuveen Emerging Markets Debt 2022 Target Term Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JEQ",
    "name": "Aberdeen Japan Equity Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JFR",
    "name": "Nuveen Floating Rate Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JG",
    "name": "Aurora Mobile Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JGH",
    "name": "Nuveen Global High Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JHB",
    "name": "Nuveen High Income November 2021 Target Term Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JHD",
    "name": "Nuveen High Income December 2019 Target Term Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JHG",
    "name": "Janus Henderson Group plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JHI",
    "name": "John Hancock Investors Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JHS",
    "name": "John Hancock Income Securities Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JHX",
    "name": "James Hardie Industries plc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JHY",
    "name": "Nuveen High Income 2020 Target Term Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JILL",
    "name": "J. Jill, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JJSF",
    "name": "J & J Snack Foods Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JKHY",
    "name": "Jack Henry & Associates, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JKI",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JKS",
    "name": "JinkoSolar Holding Company Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JLL",
    "name": "Jones Lang LaSalle Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JLS",
    "name": "Nuveen Mortgage Opportunity Term Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JMEI",
    "name": "Jumei International Holding Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JMF",
    "name": "Nuveen Energy MLP Total Return Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JMLP",
    "name": "Nuveen All Cap Energy MLP Opportunities Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JMM",
    "name": "Nuveen Multi-Market Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JMP",
    "name": "JMP Group LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JMPB",
    "name": "JMP Group LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JMPD",
    "name": "JMP Group LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JMT",
    "name": "Nuven Mortgage Opportunity Term Fund 2",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JMU",
    "name": "JMU Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JNCE",
    "name": "Jounce Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JNJ",
    "name": "Johnson & Johnson",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JNPR",
    "name": "Juniper Networks, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JOB",
    "name": "GEE Group Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "JOBS",
    "name": "51job, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JOE",
    "name": "St. Joe Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JOF",
    "name": "Japan Smaller Capitalization Fund Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JOUT",
    "name": "Johnson Outdoors Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JP",
    "name": "Jupai Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JPC",
    "name": "Nuveen Preferred & Income Opportunities Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JPI",
    "name": "Nuveen Preferred and Income Term Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JPM",
    "name": "J P Morgan Chase & Co",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JPM^A",
    "name": "J P Morgan Chase & Co",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JPM^B",
    "name": "J P Morgan Chase & Co",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JPM^D",
    "name": "J P Morgan Chase & Co",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JPM^E",
    "name": "J P Morgan Chase & Co",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JPM^F",
    "name": "J P Morgan Chase & Co",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JPM^G",
    "name": "J P Morgan Chase & Co",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JPM^H",
    "name": "J P Morgan Chase & Co",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JPS",
    "name": "Nuveen Preferred & Income Securities Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JPT",
    "name": "Nuveen Preferred and Income 2022 Term Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JQC",
    "name": "Nuveen Credit Strategies Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JRI",
    "name": "Nuveen Real Asset Income and Growth Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JRJC",
    "name": "China Finance Online Co. Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JRO",
    "name": "Nuveen Floating Rate Income Opportuntiy Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JRS",
    "name": "Nuveen Real Estate Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JRSH",
    "name": "Jerash Holdings (US), Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JRVR",
    "name": "James River Group Holdings, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JSD",
    "name": "Nuveen Short Duration Credit Opportunities Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JSM",
    "name": "Navient Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JSMD",
    "name": "Janus Detroit Street Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JSML",
    "name": "Janus Detroit Street Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JSYN",
    "name": "Jensyn Acquistion Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JSYNR",
    "name": "Jensyn Acquistion Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JSYNU",
    "name": "Jensyn Acquistion Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JSYNW",
    "name": "Jensyn Acquistion Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JT",
    "name": "Jianpu Technology Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JTA",
    "name": "Nuveen Tax-Advantaged Total Return Strategy Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JTD",
    "name": "Nuveen Tax-Advantaged Dividend Growth Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JTPY",
    "name": "JetPay Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JVA",
    "name": "Coffee Holding Co., Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "JW.A",
    "name": "John Wiley & Sons, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JW.B",
    "name": "John Wiley & Sons, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JWN",
    "name": "Nordstrom, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "JYNT",
    "name": "The Joint Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "K",
    "name": "Kellogg Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KAI",
    "name": "Kadant Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KALA",
    "name": "Kala Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KALU",
    "name": "Kaiser Aluminum Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KALV",
    "name": "KalVista Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KAMN",
    "name": "Kaman Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KANG",
    "name": "iKang Healthcare Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KAR",
    "name": "KAR Auction Services, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KB",
    "name": "KB Financial Group Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KBAL",
    "name": "Kimball International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KBH",
    "name": "KB Home",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KBLM",
    "name": "KBL Merger Corp. IV",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KBLMR",
    "name": "KBL Merger Corp. IV",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KBLMU",
    "name": "KBL Merger Corp. IV",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KBLMW",
    "name": "KBL Merger Corp. IV",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KBR",
    "name": "KBR, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KBSF",
    "name": "KBS Fashion Group Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KBWB",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KBWD",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KBWP",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KBWR",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KBWY",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KCAP",
    "name": "KCAP Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KCAPL",
    "name": "KCAP Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KDMN",
    "name": "Kadmon Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KDP",
    "name": "Keurig Dr Pepper Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KE",
    "name": "Kimball Electronics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KEG",
    "name": "Key Energy Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KELYA",
    "name": "Kelly Services, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KELYB",
    "name": "Kelly Services, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KEM",
    "name": "Kemet Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KEN",
    "name": "Kenon Holdings Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KEP",
    "name": "Korea Electric Power Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KEQU",
    "name": "Kewaunee Scientific Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KERX",
    "name": "Keryx Biopharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KEX",
    "name": "Kirby Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KEY",
    "name": "KeyCorp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KEY^I",
    "name": "KeyCorp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KEY^J",
    "name": "KeyCorp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KEYS",
    "name": "Keysight Technologies Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KEYW",
    "name": "The KEYW Holding Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KF",
    "name": "Korea Fund, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KFFB",
    "name": "Kentucky First Federal Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KFRC",
    "name": "Kforce, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KFS",
    "name": "Kingsway Financial Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KFY",
    "name": "Korn/Ferry International",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KGC",
    "name": "Kinross Gold Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KGJI",
    "name": "Kingold Jewelry Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KHC",
    "name": "The Kraft Heinz Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KIDS",
    "name": "OrthoPediatrics Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KIM",
    "name": "Kimco Realty Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KIM^I",
    "name": "Kimco Realty Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KIM^J",
    "name": "Kimco Realty Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KIM^K",
    "name": "Kimco Realty Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KIM^L",
    "name": "Kimco Realty Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KIM^M",
    "name": "Kimco Realty Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KIN",
    "name": "Kindred Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KINS",
    "name": "Kingstone Companies, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KIO",
    "name": "KKR Income Opportunities Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KIQ",
    "name": "Kelso Technologies Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "KIRK",
    "name": "Kirkland&#39;s, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KKR",
    "name": "KKR & Co. Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KKR^A",
    "name": "KKR & Co. Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KKR^B",
    "name": "KKR & Co. Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KL",
    "name": "Kirkland Lake Gold Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KLAC",
    "name": "KLA-Tencor Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KLIC",
    "name": "Kulicke and Soffa Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KLXE",
    "name": "KLX Energy Services Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KMB",
    "name": "Kimberly-Clark Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KMDA",
    "name": "Kamada Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KMF",
    "name": "Kayne Anderson Midstream Energy Fund, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KMI",
    "name": "Kinder Morgan, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KMPA",
    "name": "Kemper Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KMPH",
    "name": "KemPharm, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KMPR",
    "name": "Kemper Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KMT",
    "name": "Kennametal Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KMX",
    "name": "CarMax Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KN",
    "name": "Knowles Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KNDI",
    "name": "Kandi Technologies Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KNL",
    "name": "Knoll, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KNOP",
    "name": "KNOT Offshore Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KNSA",
    "name": "Kiniksa Pharmaceuticals, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KNSL",
    "name": "Kinsale Capital Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KNX",
    "name": "Knight Transportation, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KO",
    "name": "Coca-Cola Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KOD",
    "name": "Kodiak Sciences Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KODK",
    "name": "Eastman Kodak Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KOF",
    "name": "Coca Cola Femsa S.A.B. de C.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KONA",
    "name": "Kona Grill, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KOOL",
    "name": "Cesca Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KOP",
    "name": "Koppers Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KOPN",
    "name": "Kopin Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KORS",
    "name": "Michael Kors Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KOS",
    "name": "Kosmos Energy Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KOSS",
    "name": "Koss Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KPFS",
    "name": "Pepper Food Service Co., Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KPTI",
    "name": "Karyopharm Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KR",
    "name": "Kroger Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KRA",
    "name": "Kraton Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KRC",
    "name": "Kilroy Realty Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KREF",
    "name": "KKR Real Estate Finance Trust Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KRG",
    "name": "Kite Realty Group Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KRMA",
    "name": "Global X Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KRNT",
    "name": "Kornit Digital Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KRNY",
    "name": "Kearny Financial",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KRO",
    "name": "Kronos Worldwide Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KRP",
    "name": "Kimbell Royalty Partners",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KRYS",
    "name": "Krystal Biotech, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KSM",
    "name": "Scudder Strategic Municiple Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KSS",
    "name": "Kohl&#39;s Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KSU",
    "name": "Kansas City Southern",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KSU^",
    "name": "Kansas City Southern",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KT",
    "name": "KT Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KTCC",
    "name": "Key Tronic Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KTF",
    "name": "Scudder Municiple Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KTH",
    "name": "Lehman ABS Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KTN",
    "name": "Lehman ABS Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KTOS",
    "name": "Kratos Defense & Security Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KTOV",
    "name": "Kitov Pharma Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KTOVW",
    "name": "Kitov Pharma Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KTP",
    "name": "Lehman ABS Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KURA",
    "name": "Kura Oncology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KVHI",
    "name": "KVH Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KW",
    "name": "Kennedy-Wilson Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KWEB",
    "name": "KraneShares Trust KraneShares CSI China Internet ETF",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KWR",
    "name": "Quaker Chemical Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KYN",
    "name": "Kayne Anderson MLP/Midstream Investment Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KYN^F",
    "name": "Kayne Anderson MLP/Midstream Investment Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "KZIA",
    "name": "Kazia Therapeutics Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "KZR",
    "name": "Kezar Life Sciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "L",
    "name": "Loews Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LABL",
    "name": "Multi-Color Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LAC",
    "name": "Lithium Americas Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LACQ",
    "name": "Leisure Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LACQU",
    "name": "Leisure Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LACQW",
    "name": "Leisure Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LAD",
    "name": "Lithia Motors, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LADR",
    "name": "Ladder Capital Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LAIX",
    "name": "LAIX Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LAKE",
    "name": "Lakeland Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LALT",
    "name": "Invesco Actively Managed Exchange-Traded Fund Trus",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LAMR",
    "name": "Lamar Advertising Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LANC",
    "name": "Lancaster Colony Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LAND",
    "name": "Gladstone Land Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LANDP",
    "name": "Gladstone Land Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LARK",
    "name": "Landmark Bancorp Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LASR",
    "name": "nLIGHT, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LAUR",
    "name": "Laureate Education, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LAWS",
    "name": "Lawson Products, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LAZ",
    "name": "Lazard Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LAZY",
    "name": "Lazydays Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LB",
    "name": "L Brands, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LBAI",
    "name": "Lakeland Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LBC",
    "name": "Luther Burbank Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LBRDA",
    "name": "Liberty Broadband Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LBRDK",
    "name": "Liberty Broadband Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LBRT",
    "name": "Liberty Oilfield Services Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LBTYA",
    "name": "Liberty Global plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LBTYB",
    "name": "Liberty Global plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LBTYK",
    "name": "Liberty Global plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LBY",
    "name": "Libbey, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "LC",
    "name": "LendingClub Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LCI",
    "name": "Lannett Co Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LCII",
    "name": "LCI Industries",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LCNB",
    "name": "LCNB Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LCUT",
    "name": "Lifetime Brands, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LDL",
    "name": "Lydall, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LDOS",
    "name": "Leidos Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LDP",
    "name": "Cohen & Steers Limited Duration Preferred and Income Fund, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LDRI",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LE",
    "name": "Lands&#39; End, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LEA",
    "name": "Lear Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LEAF",
    "name": "Leaf Group Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LECO",
    "name": "Lincoln Electric Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LEDS",
    "name": "SemiLEDS Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LEE",
    "name": "Lee Enterprises, Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LEG",
    "name": "Leggett & Platt, Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LEGR",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LEJU",
    "name": "Leju Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LEN",
    "name": "Lennar Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LEN.B",
    "name": "Lennar Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LENS",
    "name": "Presbia PLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LEO",
    "name": "Dreyfus Strategic Municipals, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LEU",
    "name": "Centrus Energy Corp.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "LEVB",
    "name": "Level Brands, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "LEVL",
    "name": "Level One Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LEXEA",
    "name": "Liberty Expedia Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LEXEB",
    "name": "Liberty Expedia Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LFAC",
    "name": "LF Capital Acquistion Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LFACU",
    "name": "LF Capital Acquistion Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LFACW",
    "name": "LF Capital Acquistion Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LFC",
    "name": "China Life Insurance Company Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LFUS",
    "name": "Littelfuse, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LFVN",
    "name": "Lifevantage Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LGC",
    "name": "Legacy Acquisition Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LGC.U",
    "name": "Legacy Acquisition Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LGC.WS",
    "name": "Legacy Acquisition Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LGCY",
    "name": "Legacy Reserves Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LGF.A",
    "name": "Lions Gate Entertainment Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LGF.B",
    "name": "Lions Gate Entertainment Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LGI",
    "name": "Lazard Global Total Return and Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LGIH",
    "name": "LGI Homes, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LGL",
    "name": "LGL Group, Inc. (The)",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "LGND",
    "name": "Ligand Pharmaceuticals Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LH",
    "name": "Laboratory Corporation of America Holdings",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LHC",
    "name": "Leo Holdings Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LHCG",
    "name": "LHC Group",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LHC.U",
    "name": "Leo Holdings Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LHC.WS",
    "name": "Leo Holdings Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LHO",
    "name": "LaSalle Hotel Properties",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LHO^I",
    "name": "LaSalle Hotel Properties",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LHO^J",
    "name": "LaSalle Hotel Properties",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LIFE",
    "name": "aTyr Pharma, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LII",
    "name": "Lennox International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LILA",
    "name": "Liberty Latin America Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LILAK",
    "name": "Liberty Latin America Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LIN",
    "name": "Linde plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LINC",
    "name": "Lincoln Educational Services Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LIND",
    "name": "Lindblad Expeditions Holdings Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LINDW",
    "name": "Lindblad Expeditions Holdings Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LINK",
    "name": "Interlink Electronics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LION",
    "name": "Fidelity Southern Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LIQT",
    "name": "LiqTech International, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "LITB",
    "name": "LightInTheBox Holding Co., Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LITE",
    "name": "Lumentum Holdings Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LIVE",
    "name": "Live Ventures Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LIVN",
    "name": "LivaNova PLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LIVX",
    "name": "LiveXLive Media, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LJPC",
    "name": "La Jolla Pharmaceutical Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LKFN",
    "name": "Lakeland Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LKM",
    "name": "Link Motion Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LKOR",
    "name": "FlexShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LKQ",
    "name": "LKQ Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LKSD",
    "name": "LSC Communications, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LL",
    "name": "Lumber Liquidators Holdings, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LLEX",
    "name": "Lilis Energy, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "LLEX",
    "name": "Lilis Energy, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LLIT",
    "name": "Lianluo Smart Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LLL",
    "name": "L3 Technologies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LLNW",
    "name": "Limelight Networks, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LLY",
    "name": "Eli Lilly and Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LM",
    "name": "Legg Mason, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LMAT",
    "name": "LeMaitre Vascular, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LMB",
    "name": "Limbach Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LMBS",
    "name": "First Trust Exchange-Traded Fund IV",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LMFA",
    "name": "LM Funding America, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LMFAW",
    "name": "LM Funding America, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LMHA",
    "name": "Legg Mason, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LMHB",
    "name": "Legg Mason, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LMNR",
    "name": "Limoneira Co",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LMNX",
    "name": "Luminex Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LMRK",
    "name": "Landmark Infrastructure Partners LP",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LMRKN",
    "name": "Landmark Infrastructure Partners LP",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LMRKO",
    "name": "Landmark Infrastructure Partners LP",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LMRKP",
    "name": "Landmark Infrastructure Partners LP",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LMST",
    "name": "Limestone Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LMT",
    "name": "Lockheed Martin Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LN",
    "name": "LINE Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LNC",
    "name": "Lincoln National Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LNC.WS",
    "name": "Lincoln National Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LND",
    "name": "Brasilagro Cia Brasileira De Propriedades Agricolas",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LNDC",
    "name": "Landec Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LNG",
    "name": "Cheniere Energy, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "LNGR",
    "name": "Global X Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LNN",
    "name": "Lindsay Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LNT",
    "name": "Alliant Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LNTH",
    "name": "Lantheus Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LOAC",
    "name": "Longevity Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LOACR",
    "name": "Longevity Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LOACU",
    "name": "Longevity Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LOACW",
    "name": "Longevity Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LOAN",
    "name": "Manhattan Bridge Capital, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LOB",
    "name": "Live Oak Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LOCO",
    "name": "El Pollo Loco Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LODE",
    "name": "Comstock Mining, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "LOGC",
    "name": "LogicBio Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LOGI",
    "name": "Logitech International S.A.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LOGM",
    "name": "LogMein, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LOMA",
    "name": "Loma Negra Compania Industrial Argentina Sociedad Anonima",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LONE",
    "name": "Lonestar Resources US Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LOOP",
    "name": "Loop Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LOPE",
    "name": "Grand Canyon Education, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LOR",
    "name": "Lazard World Dividend & Income Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LORL",
    "name": "Loral Space and Communications, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LOV",
    "name": "Spark Networks, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "LOVE",
    "name": "The Lovesac Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LOW",
    "name": "Lowe&#39;s Companies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LOXO",
    "name": "Loxo Oncology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LPCN",
    "name": "Lipocine Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LPG",
    "name": "Dorian LPG Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LPI",
    "name": "Laredo Petroleum, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LPL",
    "name": "LG Display Co., Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LPLA",
    "name": "LPL Financial Holdings Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LPSN",
    "name": "LivePerson, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LPT",
    "name": "Liberty Property Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LPTH",
    "name": "LightPath Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LPTX",
    "name": "LEAP THERAPEUTICS, INC.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LPX",
    "name": "Louisiana-Pacific Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LQDA",
    "name": "Liquidia Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LQDT",
    "name": "Liquidity Services, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LRAD",
    "name": "LRAD Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LRCX",
    "name": "Lam Research Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LRGE",
    "name": "Legg Mason ETF Investment Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LRN",
    "name": "K12 Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LSBK",
    "name": "Lake Shore Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LSCC",
    "name": "Lattice Semiconductor Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LSI",
    "name": "Life Storage, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LSTR",
    "name": "Landstar System, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LSXMA",
    "name": "Liberty Media Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LSXMB",
    "name": "Liberty Media Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LSXMK",
    "name": "Liberty Media Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LTBR",
    "name": "Lightbridge Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LTC",
    "name": "LTC Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LTHM",
    "name": "Livent Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LTM",
    "name": "LATAM Airlines Group S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LTN",
    "name": "Union Acquisition Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LTN~",
    "name": "Union Acquisition Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LTN.U",
    "name": "Union Acquisition Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LTN.WS",
    "name": "Union Acquisition Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LTRPA",
    "name": "Liberty TripAdvisor Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LTRPB",
    "name": "Liberty TripAdvisor Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LTRX",
    "name": "Lantronix, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LTS",
    "name": "Ladenburg Thalmann Financial Services Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "LTS^A",
    "name": "Ladenburg Thalmann Financial Services Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "LTSF",
    "name": "Ladenburg Thalmann Financial Services Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "LTSK",
    "name": "Ladenburg Thalmann Financial Services Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "LTSL",
    "name": "Ladenburg Thalmann Financial Services Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "LTXB",
    "name": "LegacyTexas Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LUB",
    "name": "Luby&#39;s, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LULU",
    "name": "lululemon athletica inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LUNA",
    "name": "Luna Innovations Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LUV",
    "name": "Southwest Airlines Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LVHD",
    "name": "Legg Mason ETF Investment Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LVS",
    "name": "Las Vegas Sands Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LW",
    "name": "Lamb Weston Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LWAY",
    "name": "Lifeway Foods, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LX",
    "name": "LexinFintech Holdings Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LXFR",
    "name": "Luxfer Holdings PLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LXFT",
    "name": "Luxoft Holding, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LXP",
    "name": "Lexington Realty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LXP^C",
    "name": "Lexington Realty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LXRX",
    "name": "Lexicon Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LXU",
    "name": "Lsb Industries Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LYB",
    "name": "LyondellBasell Industries NV",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LYG",
    "name": "Lloyds Banking Group Plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LYL",
    "name": "Dragon Victory International Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LYTS",
    "name": "LSI Industries Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "LYV",
    "name": "Live Nation Entertainment, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "LZB",
    "name": "La-Z-Boy Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "M",
    "name": "Macy&#39;s Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MA",
    "name": "Mastercard Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MAA",
    "name": "Mid-America Apartment Communities, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MAA^I",
    "name": "Mid-America Apartment Communities, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MAB",
    "name": "Eaton Vance Massachusetts Municipal Bond Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "MAC",
    "name": "Macerich Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MACK",
    "name": "Merrimack Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MAG",
    "name": "MAG Silver Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "MAGS",
    "name": "Magal Security Systems Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MAIN",
    "name": "Main Street Capital Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MAMS",
    "name": "MAM Software Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MAN",
    "name": "ManpowerGroup",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MANH",
    "name": "Manhattan Associates, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MANT",
    "name": "ManTech International Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MANU",
    "name": "Manchester United Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MAR",
    "name": "Marriott International",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MARA",
    "name": "Marathon Patent Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MARK",
    "name": "Remark Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MARPS",
    "name": "Marine Petroleum Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MAS",
    "name": "Masco Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MASI",
    "name": "Masimo Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MAT",
    "name": "Mattel, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MATW",
    "name": "Matthews International Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MATX",
    "name": "Matson, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MAV",
    "name": "Pioneer Municipal High Income Advantage Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MAXR",
    "name": "Maxar Technologies Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MAYS",
    "name": "J. W. Mays, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MB",
    "name": "MINDBODY, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MBB",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MBCN",
    "name": "Middlefield Banc Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MBFI",
    "name": "MB Financial Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MBFIO",
    "name": "MB Financial Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MBI",
    "name": "MBIA, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MBII",
    "name": "Marrone Bio Innovations, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MBIN",
    "name": "Merchants Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MBIO",
    "name": "Mustang Bio, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MBOT",
    "name": "Microbot Medical Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MBRX",
    "name": "Moleculin Biotech, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MBSD",
    "name": "FlexShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MBT",
    "name": "Mobile TeleSystems OJSC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MBTF",
    "name": "M B T Financial Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MBUU",
    "name": "Malibu Boats, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MBWM",
    "name": "Mercantile Bank Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MC",
    "name": "Moelis & Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MCA",
    "name": "Blackrock MuniYield California Insured Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MCB",
    "name": "Metropolitan Bank Holding Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MCBC",
    "name": "Macatawa Bank Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MCC",
    "name": "Medley Capital Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MCD",
    "name": "McDonald&#39;s Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MCEF",
    "name": "First Trust Exchange-Traded Fund VIII",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MCEP",
    "name": "Mid-Con Energy Partners, LP",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MCF",
    "name": "Contango Oil & Gas Company",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "MCFT",
    "name": "MasterCraft Boat Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MCHI",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MCHP",
    "name": "Microchip Technology Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MCHX",
    "name": "Marchex, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MCI",
    "name": "Barings Corporate Investors",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MCK",
    "name": "McKesson Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MCN",
    "name": "Madison Covered Call & Equity Strategy Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MCO",
    "name": "Moody&#39;s Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MCR",
    "name": "MFS Charter Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MCRB",
    "name": "Seres Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MCRI",
    "name": "Monarch Casino & Resort, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MCRN",
    "name": "Milacron Holdings Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MCS",
    "name": "Marcus Corporation (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MCV",
    "name": "Medley Capital Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MCX",
    "name": "Medley Capital Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MCY",
    "name": "Mercury General Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MD",
    "name": "Mednax, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MDB",
    "name": "MongoDB, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MDC",
    "name": "M.D.C. Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MDCA",
    "name": "MDC Partners Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MDCO",
    "name": "The Medicines Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MDGL",
    "name": "Madrigal Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MDGS",
    "name": "Medigus Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MDGSW",
    "name": "Medigus Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MDIV",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MDLQ",
    "name": "Medley LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MDLX",
    "name": "Medley LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MDLY",
    "name": "Medley Management Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MDLZ",
    "name": "Mondelez International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MDP",
    "name": "Meredith Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MDR",
    "name": "McDermott International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MDRR",
    "name": "Medalist Diversified REIT, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MDRX",
    "name": "Allscripts Healthcare Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MDSO",
    "name": "Medidata Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MDT",
    "name": "Medtronic plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MDU",
    "name": "MDU Resources Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MDWD",
    "name": "MediWound Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MED",
    "name": "MEDIFAST INC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MEDP",
    "name": "Medpace Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MEET",
    "name": "The Meet Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MEI",
    "name": "Methode Electronics, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MEIP",
    "name": "MEI Pharma, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MELI",
    "name": "MercadoLibre, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MELR",
    "name": "Melrose Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MEN",
    "name": "Blackrock MuniEnhanced Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MEOH",
    "name": "Methanex Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MERC",
    "name": "Mercer International Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MER^K",
    "name": "Merrill Lynch & Co., Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MESA",
    "name": "Mesa Air Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MESO",
    "name": "Mesoblast Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MET",
    "name": "MetLife, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MET^A",
    "name": "MetLife, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "METC",
    "name": "Ramaco Resources, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MET^E",
    "name": "MetLife, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MFA",
    "name": "MFA Financial, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MFA^B",
    "name": "MFA Financial, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MFAC",
    "name": "Megalith Financial Acquisition Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MFAC.U",
    "name": "Megalith Financial Acquisition Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MFAC.WS",
    "name": "Megalith Financial Acquisition Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MFC",
    "name": "Manulife Financial Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MFCB",
    "name": "MFC Bancorp Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MFD",
    "name": "Macquarie First Trust Global",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MFG",
    "name": "Mizuho Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MFGP",
    "name": "Micro Focus Intl PLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MFIN",
    "name": "Medallion Financial Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MFINL",
    "name": "Medallion Financial Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MFL",
    "name": "Blackrock MuniHoldings Investment Quality Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MFM",
    "name": "MFS Municipal Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MFNC",
    "name": "Mackinac Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MFO",
    "name": "MFA Financial, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MFSF",
    "name": "MutualFirst Financial Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MFT",
    "name": "Blackrock MuniYield Investment QualityFund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MFV",
    "name": "MFS Special Value Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MG",
    "name": "Mistras Group Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MGA",
    "name": "Magna International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MGEE",
    "name": "MGE Energy Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MGEN",
    "name": "Miragen Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MGF",
    "name": "MFS Government Markets Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MGI",
    "name": "Moneygram International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MGIC",
    "name": "Magic Software Enterprises Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MGLN",
    "name": "Magellan Health, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MGM",
    "name": "MGM Resorts International",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MGNX",
    "name": "MacroGenics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MGP",
    "name": "MGM Growth Properties LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MGPI",
    "name": "MGP Ingredients, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MGRC",
    "name": "McGrath RentCorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MGTA",
    "name": "Magenta Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MGTX",
    "name": "MeiraGTx Holdings plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MGU",
    "name": "Macquarie Global Infrastructure Total Return Fund Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MGY",
    "name": "Magnolia Oil & Gas Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MGYR",
    "name": "Magyar Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MGY.WS",
    "name": "Magnolia Oil & Gas Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MH^A",
    "name": "Maiden Holdings, Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MH^C",
    "name": "Maiden Holdings, Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MHD",
    "name": "Blackrock MuniHoldings Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MH^D",
    "name": "Maiden Holdings, Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MHE",
    "name": "BlackRock Massachusetts Tax-Exempt Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MHF",
    "name": "Western Asset Municipal High Income Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MHH",
    "name": "Mastech Digital, Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "MHI",
    "name": "Pioneer Municipal High Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MHK",
    "name": "Mohawk Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MHLA",
    "name": "Maiden Holdings, Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MHLD",
    "name": "Maiden Holdings, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MHN",
    "name": "Blackrock MuniHoldings New York Quality Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MHNC",
    "name": "Maiden Holdings, Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MHO",
    "name": "M/I Homes, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MIC",
    "name": "Macquarie Infrastructure Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MICR",
    "name": "Micron Solutions, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "MICT",
    "name": "MICT, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MIDD",
    "name": "The Middleby Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MIE",
    "name": "Cohen & Steers MLP Income and Energy Opportunity Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MIK",
    "name": "The Michaels Companies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MILN",
    "name": "Global X Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MIME",
    "name": "Mimecast Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MIN",
    "name": "MFS Intermediate Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MIND",
    "name": "Mitcham Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MINDP",
    "name": "Mitcham Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MINI",
    "name": "Mobile Mini, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MITK",
    "name": "Mitek Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MITL",
    "name": "Mitel Networks Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MITT",
    "name": "AG Mortgage Investment Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MITT^A",
    "name": "AG Mortgage Investment Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MITT^B",
    "name": "AG Mortgage Investment Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MIW",
    "name": "Eaton Vance Michigan Municipal Bond Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "MIXT",
    "name": "MiX Telematics Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MIY",
    "name": "Blackrock MuniYield Michigan Quality Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MJCO",
    "name": "Majesco",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "MKC",
    "name": "McCormick & Company, Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MKC.V",
    "name": "McCormick & Company, Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MKGI",
    "name": "Monaker Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MKL",
    "name": "Markel Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MKSI",
    "name": "MKS Instruments, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MKTX",
    "name": "MarketAxess Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MLAB",
    "name": "Mesa Laboratories, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MLCO",
    "name": "Melco Resorts & Entertainment Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MLHR",
    "name": "Herman Miller, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MLI",
    "name": "Mueller Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MLM",
    "name": "Martin Marietta Materials, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MLNT",
    "name": "Melinta Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MLNX",
    "name": "Mellanox Technologies, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MLP",
    "name": "Maui Land & Pineapple Company, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MLR",
    "name": "Miller Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MLSS",
    "name": "Milestone Scientific, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "MLVF",
    "name": "Malvern Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MMAC",
    "name": "MMA Capital Management, LLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MMC",
    "name": "Marsh & McLennan Companies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MMD",
    "name": "MainStay MacKay DefinedTerm Municipal Opportunitie",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MMDM",
    "name": "Modern Media Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MMDMR",
    "name": "Modern Media Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MMDMU",
    "name": "Modern Media Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MMDMW",
    "name": "Modern Media Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MMI",
    "name": "Marcus & Millichap, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MMLP",
    "name": "Martin Midstream Partners L.P.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MMM",
    "name": "3M Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MMP",
    "name": "Magellan Midstream Partners L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MMS",
    "name": "Maximus, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MMSI",
    "name": "Merit Medical Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MMT",
    "name": "MFS Multimarket Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MMU",
    "name": "Western Asset Managed Municipals Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MMV",
    "name": "Eaton Vance Massachusetts Municipal Income Trust",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "MMYT",
    "name": "MakeMyTrip Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MN",
    "name": "Manning & Napier, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MNDO",
    "name": "MIND C.T.I. Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MNE",
    "name": "Blackrock Muni New York Intermediate Duration Fund Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MNGA",
    "name": "MagneGas Applied Technology Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MNI",
    "name": "McClatchy Company (The)",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "MNK",
    "name": "Mallinckrodt plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MNKD",
    "name": "MannKind Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MNLO",
    "name": "Menlo Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MNOV",
    "name": "MediciNova, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MNP",
    "name": "Western Asset Municipal Partners Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MNR",
    "name": "Monmouth Real Estate Investment Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MNR^C",
    "name": "Monmouth Real Estate Investment Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MNRO",
    "name": "Monro, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MNST",
    "name": "Monster Beverage Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MNTA",
    "name": "Momenta Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MNTX",
    "name": "Manitex International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MO",
    "name": "Altria Group",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MOBL",
    "name": "MobileIron, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MOC",
    "name": "Command Security Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "MOD",
    "name": "Modine Manufacturing Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MODN",
    "name": "Model N, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MOFG",
    "name": "MidWestOne Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MOG.A",
    "name": "Moog Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MOG.B",
    "name": "Moog Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MOGLC",
    "name": "Gabelli NextShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MOGO",
    "name": "Mogo Finance Technology Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MOH",
    "name": "Molina Healthcare Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MOMO",
    "name": "Momo Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MOR",
    "name": "MorphoSys AG",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MORN",
    "name": "Morningstar, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MOS",
    "name": "Mosaic Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MOSC",
    "name": "Mosaic Acquisition Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MOSC.U",
    "name": "Mosaic Acquisition Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MOSC.WS",
    "name": "Mosaic Acquisition Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MOSY",
    "name": "MoSys, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MOTS",
    "name": "Motus GI Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MOV",
    "name": "Movado Group Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MOXC",
    "name": "Moxian, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MPA",
    "name": "Blackrock MuniYield Pennsylvania Quality Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MPAA",
    "name": "Motorcar Parts of America, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MPB",
    "name": "Mid Penn Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MPC",
    "name": "Marathon Petroleum Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MPLX",
    "name": "MPLX LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MPO",
    "name": "MIDSTATES PETROLEUM COMPANY, INC.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MPV",
    "name": "Barings Participation Investors",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MPVD",
    "name": "Mountain Province Diamonds Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MPW",
    "name": "Medical Properties Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MPWR",
    "name": "Monolithic Power Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MPX",
    "name": "Marine Products Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MQT",
    "name": "Blackrock MuniYield Quality Fund II, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MQY",
    "name": "Blackrock MuniYield Quality Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MRAM",
    "name": "Everspin Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MRBK",
    "name": "Meridian Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MRC",
    "name": "MRC Global Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MRCC",
    "name": "Monroe Capital Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MRCCL",
    "name": "Monroe Capital Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MRCY",
    "name": "Mercury Systems Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MRIN",
    "name": "Marin Software Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MRK",
    "name": "Merck & Company, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MRKR",
    "name": "Marker Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MRLN",
    "name": "Marlin Business Services Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MRNS",
    "name": "Marinus Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MRO",
    "name": "Marathon Oil Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MRSN",
    "name": "Mersana Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MRT",
    "name": "MedEquities Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MRTN",
    "name": "Marten Transport, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MRTX",
    "name": "Mirati Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MRUS",
    "name": "Merus N.V.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MRVL",
    "name": "Marvell Technology Group Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MS",
    "name": "Morgan Stanley",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MSA",
    "name": "MSA Safety Incorporporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MS^A",
    "name": "Morgan Stanley",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MSB",
    "name": "Mesabi Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MSBF",
    "name": "MSB Financial Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MSBI",
    "name": "Midland States Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MSC",
    "name": "Studio City International Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MSCI",
    "name": "MSCI Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MSD",
    "name": "Morgan Stanley Emerging Markets Debt Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MS^E",
    "name": "Morgan Stanley",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MSEX",
    "name": "Middlesex Water Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MSF",
    "name": "Morgan Stanley Emerging Markets Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MS^F",
    "name": "Morgan Stanley",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MSFT",
    "name": "Microsoft Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MSG",
    "name": "The Madison Square Garden Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MSG",
    "name": "The Madison Square Garden Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MS^G",
    "name": "Morgan Stanley",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MSGN",
    "name": "MSG Networks Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MSI",
    "name": "Motorola Solutions, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MS^I",
    "name": "Morgan Stanley",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MS^K",
    "name": "Morgan Stanley",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MSL",
    "name": "MidSouth Bancorp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MSM",
    "name": "MSC Industrial Direct Company, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MSN",
    "name": "Emerson Radio Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "MSON",
    "name": "MISONIX, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MSTR",
    "name": "MicroStrategy Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MSVB",
    "name": "Mid-Southern Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MT",
    "name": "ArcelorMittal",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MTB",
    "name": "M&T Bank Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MTB^",
    "name": "M&T Bank Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MTBC",
    "name": "Medical Transcription Billing, Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MTB^C",
    "name": "M&T Bank Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MTBCP",
    "name": "Medical Transcription Billing, Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MTB.WS",
    "name": "M&T Bank Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MTCH",
    "name": "Match Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MTD",
    "name": "Mettler-Toledo International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MTDR",
    "name": "Matador Resources Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MTEC",
    "name": "MTech Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MTECU",
    "name": "MTech Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MTECW",
    "name": "MTech Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MTEM",
    "name": "Molecular Templates, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MTEX",
    "name": "Mannatech, Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MTFB",
    "name": "Motif Bio plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MTFBW",
    "name": "Motif Bio plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MTG",
    "name": "MGIC Investment Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MTH",
    "name": "Meritage Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MTL",
    "name": "Mechel PAO",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MTL^",
    "name": "Mechel PAO",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MTLS",
    "name": "Materialise NV",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MTN",
    "name": "Vail Resorts, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MTNB",
    "name": "Matinas Biopharma Holdings, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "MTOR",
    "name": "Meritor, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MTP",
    "name": "Midatech Pharma PLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MTR",
    "name": "Mesa Royalty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MTRN",
    "name": "Materion Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MTRX",
    "name": "Matrix Service Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MTSC",
    "name": "MTS Systems Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MTSI",
    "name": "MACOM Technology Solutions Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MTSL",
    "name": "MER Telemanagement Solutions Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MTT",
    "name": "Western Asset Municipal Defined Opportunity Trust Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MTW",
    "name": "Manitowoc Company, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MTX",
    "name": "Minerals Technologies Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MTZ",
    "name": "MasTec, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MU",
    "name": "Micron Technology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MUA",
    "name": "Blackrock MuniAssets Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MUC",
    "name": "Blackrock MuniHoldings California Quality Fund,  Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MUDS",
    "name": "Mudrick Capital Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MUDSU",
    "name": "Mudrick Capital Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MUDSW",
    "name": "Mudrick Capital Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MUE",
    "name": "Blackrock MuniHoldings Quality Fund II, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MUFG",
    "name": "Mitsubishi UFJ Financial Group Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MUH",
    "name": "Blackrock MuniHoldings Fund II, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MUI",
    "name": "Blackrock Muni Intermediate Duration Fund Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MUJ",
    "name": "Blackrock MuniHoldings New Jersey Insured Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MUR",
    "name": "Murphy Oil Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MUS",
    "name": "Blackrock MuniHoldings Quality Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MUSA",
    "name": "Murphy USA Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MUX",
    "name": "McEwen Mining Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MVBF",
    "name": "MVB Financial Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MVC",
    "name": "MVC Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MVCD",
    "name": "MVC Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MVF",
    "name": "MuniVest Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MVIS",
    "name": "Microvision, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MVO",
    "name": "MV Oil Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MVT",
    "name": "Blackrock MuniVest Fund II, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MWA",
    "name": "Mueller Water Products Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MX",
    "name": "MagnaChip Semiconductor Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MXC",
    "name": "Mexco Energy Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "MXE",
    "name": "Mexico Equity and Income Fund, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MXF",
    "name": "Mexico Fund, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MXIM",
    "name": "Maxim Integrated Products, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MXL",
    "name": "MaxLinear, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MXWL",
    "name": "Maxwell Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MYC",
    "name": "Blackrock MuniYield California Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MYD",
    "name": "Blackrock MuniYield Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MYE",
    "name": "Myers Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MYF",
    "name": "Blackrock MuniYield Investment Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MYFW",
    "name": "First Western Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MYGN",
    "name": "Myriad Genetics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MYI",
    "name": "Blackrock MuniYield Quality Fund III, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MYJ",
    "name": "Blackrock MuniYield New Jersey Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MYL",
    "name": "Mylan N.V.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MYN",
    "name": "Blackrock MuniYield New York Quality Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MYND",
    "name": "MYnd Analytics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MYNDW",
    "name": "MYnd Analytics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MYO",
    "name": "Myomo Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "MYOK",
    "name": "MyoKardia, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MYOS",
    "name": "MYOS RENS Technology Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MYOV",
    "name": "Myovant Sciences Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MYRG",
    "name": "MYR Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MYSZ",
    "name": "My Size, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "MZA",
    "name": "MuniYield Arizona Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "MZOR",
    "name": "Mazor Robotics Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NAC",
    "name": "Nuveen California Quality Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NAD",
    "name": "Nuveen Quality Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NAII",
    "name": "Natural Alternatives International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NAK",
    "name": "Northern Dynasty Minerals, Ltd.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NAKD",
    "name": "Naked Brand Group Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NAN",
    "name": "Nuveen New York Quality Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NANO",
    "name": "Nanometrics Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NAO",
    "name": "Nordic American Offshore Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NAOV",
    "name": "NanoVibronix, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NAP",
    "name": "Navios Maritime Midstream Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NAT",
    "name": "Nordic American Tankers Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NATH",
    "name": "Nathan&#39;s Famous, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NATI",
    "name": "National Instruments Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NATR",
    "name": "Nature&#39;s Sunshine Products, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NAUH",
    "name": "National American University Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NAV",
    "name": "Navistar International Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NAVB",
    "name": "Navidea Biopharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NAV^D",
    "name": "Navistar International Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NAVG",
    "name": "The Navigators Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NAVI",
    "name": "Navient Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NAZ",
    "name": "Nuveen Arizona Quality Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NBB",
    "name": "Nuveen Taxable Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NBEV",
    "name": "New Age Beverages Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NBH",
    "name": "Neuberger Berman Municipal Fund Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NBHC",
    "name": "National Bank Holdings Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NBIX",
    "name": "Neurocrine Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NBL",
    "name": "Noble Energy Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NBLX",
    "name": "Noble Midstream Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NBN",
    "name": "Northeast Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NBO",
    "name": "Neuberger Berman New York Municipal Fund Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NBR",
    "name": "Nabors Industries Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NBR^A",
    "name": "Nabors Industries Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NBRV",
    "name": "Nabriva Therapeutics plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NBTB",
    "name": "NBT Bancorp Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NBW",
    "name": "Neuberger Berman California Municipal Fund Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NBY",
    "name": "NovaBay Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NC",
    "name": "NACCO Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NCA",
    "name": "Nuveen California Municipal Value Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NCB",
    "name": "Nuveen California Municipal Value Fund 2",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NCBS",
    "name": "Nicolet Bankshares Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NCI",
    "name": "Navigant Consulting, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NCLH",
    "name": "Norwegian Cruise Line Holdings Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NCLH",
    "name": "Norwegian Cruise Line Holdings Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NCMI",
    "name": "National CineMedia, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NCNA",
    "name": "NuCana plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NCOM",
    "name": "National Commerce Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NCR",
    "name": "NCR Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NCS",
    "name": "NCI Building Systems, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NCSM",
    "name": "NCS Multistage Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NCTY",
    "name": "The9 Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NCV",
    "name": "AllianzGI Convertible & Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NCV^A",
    "name": "AllianzGI Convertible & Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NCZ",
    "name": "AllianzGI Convertible & Income Fund II",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NCZ^A",
    "name": "AllianzGI Convertible & Income Fund II",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NDAQ",
    "name": "Nasdaq, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NDLS",
    "name": "Noodles & Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NDP",
    "name": "Tortoise Energy Independence Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NDRA",
    "name": "ENDRA Life Sciences Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NDRAW",
    "name": "ENDRA Life Sciences Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NDSN",
    "name": "Nordson Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NE",
    "name": "Noble Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NEA",
    "name": "Nuveen AMT-Free Quality Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NEBU",
    "name": "Nebula Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NEBUU",
    "name": "Nebula Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NEBUW",
    "name": "Nebula Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NEE",
    "name": "NextEra Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NEE^I",
    "name": "NextEra Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NEE^J",
    "name": "NextEra Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NEE^K",
    "name": "NextEra Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NEE^R",
    "name": "NextEra Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NEM",
    "name": "Newmont Mining Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NEN",
    "name": "New England Realty Associates Limited Partnership",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NEO",
    "name": "NeoGenomics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NEOG",
    "name": "Neogen Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NEON",
    "name": "Neonode Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NEOS",
    "name": "Neos Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NEP",
    "name": "NextEra Energy Partners, LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NEPT",
    "name": "Neptune Wellness Solutions Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NERV",
    "name": "Minerva Neurosciences, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NES",
    "name": "Nuverra Environmental Solutions, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NESR",
    "name": "National Energy Services Reunited Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NESRW",
    "name": "National Energy Services Reunited Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NETE",
    "name": "Net Element, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NETS",
    "name": "Netshoes (Cayman) Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NEU",
    "name": "NewMarket Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NEV",
    "name": "Nuveen Enhanced Municipal Value Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NEW",
    "name": "Puxin Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NEWA",
    "name": "Newater Technology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NEWM",
    "name": "New Media Investment Group Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NEWR",
    "name": "New Relic, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NEWT",
    "name": "Newtek Business Services Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NEWTI",
    "name": "Newtek Business Services Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NEWTZ",
    "name": "Newtek Business Services Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NEXA",
    "name": "Nexa Resources S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NEXT",
    "name": "NextDecade Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NFBK",
    "name": "Northfield Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NFC",
    "name": "New Frontier Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NFC.U",
    "name": "New Frontier Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NFC.WS",
    "name": "New Frontier Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NFEC",
    "name": "NF Energy Saving Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NFG",
    "name": "National Fuel Gas Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NFJ",
    "name": "AllianzGI NFJ Dividend, Interest & Premium Strategy Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NFLX",
    "name": "Netflix, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NFTY",
    "name": "First Trust Exchange-Traded AlphDEX Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NFX",
    "name": "Newfield Exploration Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NG",
    "name": "Novagold Resources Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NGD",
    "name": "New Gold Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NGG",
    "name": "National Grid Transco, PLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NGHC",
    "name": "National General Holdings Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NGHCN",
    "name": "National General Holdings Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NGHCO",
    "name": "National General Holdings Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NGHCP",
    "name": "National General Holdings Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NGHCZ",
    "name": "National General Holdings Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NGL",
    "name": "NGL ENERGY PARTNERS LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NGL^B",
    "name": "NGL ENERGY PARTNERS LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NGLS^A",
    "name": "Targa Resources Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NGS",
    "name": "Natural Gas Services Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NGVC",
    "name": "Natural Grocers by Vitamin Cottage, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NGVT",
    "name": "Ingevity Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NH",
    "name": "NantHealth, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NHA",
    "name": "Nuveen Municipal 2021 Target Term Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NHC",
    "name": "National HealthCare Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NHF",
    "name": "NexPoint Strategic Opportunities Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NHI",
    "name": "National Health Investors, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NHLD",
    "name": "National Holdings Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NHLDW",
    "name": "National Holdings Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NHS",
    "name": "Neuberger Berman High Yield Strategies Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NHTC",
    "name": "Natural Health Trends Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NI",
    "name": "NiSource, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NICE",
    "name": "NICE Ltd",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NICK",
    "name": "Nicholas Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NID",
    "name": "Nuveen Intermediate Duration Municipal Term Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NIE",
    "name": "AllianzGI Equity & Convertible Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NIHD",
    "name": "NII Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NIM",
    "name": "Nuveen Select Maturities Municipal Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NINE",
    "name": "Nine Energy Service, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NIO",
    "name": "NIO Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NIQ",
    "name": "Nuveenn Intermediate Duration Quality Municipal Term Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NITE",
    "name": "Nightstar Therapeutics plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NIU",
    "name": "Niu Technologies",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NJR",
    "name": "NewJersey Resources Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NJV",
    "name": "Nuveen New Jersey Municipal Value Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NK",
    "name": "NantKwest, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NKE",
    "name": "Nike, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NKG",
    "name": "Nuveen Georgia Quality Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NKSH",
    "name": "National Bankshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NKTR",
    "name": "Nektar Therapeutics",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NKX",
    "name": "Nuveen California AMT-Free Quality Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NL",
    "name": "NL Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NLNK",
    "name": "NewLink Genetics Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NLS",
    "name": "Nautilus Group, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NLSN",
    "name": "Nielsen N.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NLY",
    "name": "Annaly Capital Management Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NLY^C",
    "name": "Annaly Capital Management Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NLY^D",
    "name": "Annaly Capital Management Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NLY^F",
    "name": "Annaly Capital Management Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NLY^G",
    "name": "Annaly Capital Management Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NLY^H",
    "name": "Annaly Capital Management Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NM",
    "name": "Navios Maritime Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NMFC",
    "name": "New Mountain Finance Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NMFX",
    "name": "New Mountain Finance Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NM^G",
    "name": "Navios Maritime Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NM^H",
    "name": "Navios Maritime Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NMI",
    "name": "Nuveen Municipal Income Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NMIH",
    "name": "NMI Holdings Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NMK^B",
    "name": "Niagara Mohawk Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NMK^C",
    "name": "Niagara Mohawk Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NML",
    "name": "Neuberger Berman MLP Income Fund Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NMM",
    "name": "Navios Maritime Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NMR",
    "name": "Nomura Holdings Inc ADR",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NMRD",
    "name": "Nemaura Medical Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NMRK",
    "name": "Newmark Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NMRKV",
    "name": "Newmark Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NMS",
    "name": "Nuveen Minnesota Quality Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NMT",
    "name": "Nuveen Massachusetts Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NMY",
    "name": "Nuveen Maryland Quality Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NMZ",
    "name": "Nuveen Municipal High Income Opportunity Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NNA",
    "name": "Navios Maritime Acquisition Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NNBR",
    "name": "NN, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NNC",
    "name": "Nuveen North Carolina Quality Municipal Income Fd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NNDM",
    "name": "Nano Dimension Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NNI",
    "name": "Nelnet, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NNN",
    "name": "National Retail Properties",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NNN^E",
    "name": "National Retail Properties",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NNN^F",
    "name": "National Retail Properties",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NNVC",
    "name": "NanoViricides, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NNY",
    "name": "Nuveen New York Municipal Value Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NOA",
    "name": "North American Construction Group Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NOAH",
    "name": "Noah Holdings Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NOC",
    "name": "Northrop Grumman Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NODK",
    "name": "NI Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NOG",
    "name": "Northern Oil and Gas, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NOK",
    "name": "Nokia Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NOM",
    "name": "Nuveen Missouri Quality Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NOMD",
    "name": "Nomad Foods Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NOV",
    "name": "National Oilwell Varco, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NOVN",
    "name": "Novan, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NOVT",
    "name": "Novanta Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NOW",
    "name": "ServiceNow, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NP",
    "name": "Neenah, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NPK",
    "name": "National Presto Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NPN",
    "name": "Nuveen Pennsylvania Municipal Value Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NPO",
    "name": "EnPro Industries",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NPTN",
    "name": "NeoPhotonics Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NPV",
    "name": "Nuveen Virginia Quality Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NQP",
    "name": "Nuveen Pennsylvania Quality Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NR",
    "name": "Newpark Resources, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NRC",
    "name": "National Research Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NRCG",
    "name": "NRC Group Holdings Corp.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NRCG.WS",
    "name": "NRC Group Holdings Corp.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NRE",
    "name": "NorthStar Realty Europe Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NRG",
    "name": "NRG Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NRIM",
    "name": "Northrim BanCorp Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NRK",
    "name": "Nuveen New York AMT-Free Quality Municipal",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NRO",
    "name": "Neuberger Berman Real Estate Securities Income Fund, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NRP",
    "name": "Natural Resource Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NRT",
    "name": "North European Oil Royality Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NRZ",
    "name": "New Residential Investment Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NS",
    "name": "Nustar Energy L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NSA",
    "name": "National Storage Affiliates Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NS^A",
    "name": "Nustar Energy L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NSA^A",
    "name": "National Storage Affiliates Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NS^B",
    "name": "Nustar Energy L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NSC",
    "name": "Norfolk Souther Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NS^C",
    "name": "Nustar Energy L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NSEC",
    "name": "National Security Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NSIT",
    "name": "Insight Enterprises, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NSL",
    "name": "Nuveen Senior Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NSP",
    "name": "Insperity, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NSPR",
    "name": "InspireMD Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NSPR.WS",
    "name": "InspireMD Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NSPR.WS.B",
    "name": "InspireMD Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NSS",
    "name": "NuStar Logistics, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NSSC",
    "name": "NAPCO Security Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NSTG",
    "name": "NanoString Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NSU",
    "name": "Nevsun Resources Ltd",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NSYS",
    "name": "Nortech Systems Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NTAP",
    "name": "NetApp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NTB",
    "name": "Bank of N.T. Butterfield & Son Limited (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NTC",
    "name": "Nuveen Connecticut Quality Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NTCT",
    "name": "NetScout Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NTEC",
    "name": "Intec Pharma Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NTES",
    "name": "NetEase, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NTEST",
    "name": "NASDAQ TEST STOCK",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NTEST.A",
    "name": "NASDAQ TEST STOCK",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NTEST.B",
    "name": "NASDAQ TEST STOCK",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NTEST.C",
    "name": "NASDAQ TEST STOCK",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NTG",
    "name": "Tortoise MLP Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NTGN",
    "name": "Neon Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NTGR",
    "name": "NETGEAR, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NTIC",
    "name": "Northern Technologies International Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NTIP",
    "name": "Network-1 Technologies, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NTLA",
    "name": "Intellia Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NTN",
    "name": "NTN Buzztime, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NTNX",
    "name": "Nutanix, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NTP",
    "name": "Nam Tai Property Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NTR",
    "name": "Nutrien Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NTRA",
    "name": "Natera, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NTRI",
    "name": "NutriSystem Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NTRP",
    "name": "Neurotrope, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NTRS",
    "name": "Northern Trust Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NTRSP",
    "name": "Northern Trust Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NTWK",
    "name": "NetSol Technologies Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NTX",
    "name": "Nuveen Texas Quality Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NTZ",
    "name": "Natuzzi, S.p.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NUAN",
    "name": "Nuance Communications, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NUE",
    "name": "Nucor Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NUM",
    "name": "Nuveen Michigan Quality Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NUO",
    "name": "Nuveen Ohio Quality Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NURO",
    "name": "NeuroMetrix, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NUROW",
    "name": "NeuroMetrix, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NUS",
    "name": "Nu Skin Enterprises, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NUV",
    "name": "Nuveen AMT-Free Municipal Value Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NUVA",
    "name": "NuVasive, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NUW",
    "name": "Nuveen AMT-Free Municipal Value Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NVAX",
    "name": "Novavax, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NVCN",
    "name": "Neovasc Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NVCR",
    "name": "NovoCure Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NVDA",
    "name": "NVIDIA Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NVEC",
    "name": "NVE Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NVEE",
    "name": "NV5 Global, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NVFY",
    "name": "Nova Lifestyle, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NVG",
    "name": "Nuveen AMT-Free Municipal Credit Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NVGS",
    "name": "Navigator Holdings Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NVIV",
    "name": "InVivo Therapeutics Holdings Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NVLN",
    "name": "Novelion Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NVMI",
    "name": "Nova Measuring Instruments Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NVMM",
    "name": "Novume Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NVO",
    "name": "Novo Nordisk A/S",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NVR",
    "name": "NVR, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NVRO",
    "name": "Nevro Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NVS",
    "name": "Novartis AG",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NVT",
    "name": "nVent Electric plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NVTA",
    "name": "Invitae Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NVTR",
    "name": "Nuvectra Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NVUS",
    "name": "Novus Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NWBI",
    "name": "Northwest Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NWE",
    "name": "NorthWestern Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NWFL",
    "name": "Norwood Financial Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NWHM",
    "name": "New Home Company Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NWL",
    "name": "Newell Brands Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NWLI",
    "name": "National Western Life Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NWN",
    "name": "Northwest Natural Holding Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NWPX",
    "name": "Northwest Pipe Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NWS",
    "name": "News Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NWSA",
    "name": "News Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NX",
    "name": "Quanex Building Products Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NXC",
    "name": "Nuveen Insured California Select Tax-Free Income Portfolio",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NXE",
    "name": "Nexgen Energy Ltd.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NXEO",
    "name": "Nexeo Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NXEOU",
    "name": "Nexeo Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NXEOW",
    "name": "Nexeo Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NXGN",
    "name": "NextGen Healthcare, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NXJ",
    "name": "Nuveen New Jersey Quality Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NXN",
    "name": "Nuveen Insured New York Select Tax-Free Income Portfolio",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NXP",
    "name": "Nuveen Select Tax Free Income Portfolio",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NXPI",
    "name": "NXP Semiconductors N.V.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NXQ",
    "name": "Nuveen Select Tax Free Income Portfolio II",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NXR",
    "name": "Nuveen Select Tax Free Income Portfolio III",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NXRT",
    "name": "NexPoint Residential Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NXST",
    "name": "Nexstar Media Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NXTD",
    "name": "NXT-ID Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NXTDW",
    "name": "NXT-ID Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NXTM",
    "name": "NxStage Medical, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NYCB",
    "name": "New York Community Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NYCB^A",
    "name": "New York Community Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NYCB^U",
    "name": "New York Community Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NYH",
    "name": "Eaton Vance New York Municipal Bond Fund II",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "NYMT",
    "name": "New York Mortgage Trust, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NYMTN",
    "name": "New York Mortgage Trust, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NYMTO",
    "name": "New York Mortgage Trust, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NYMTP",
    "name": "New York Mortgage Trust, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NYMX",
    "name": "Nymox Pharmaceutical Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NYNY",
    "name": "Empire Resorts, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "NYT",
    "name": "New York Times Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NYV",
    "name": "Nuveen New York Municipal Value Fund 2",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "NZF",
    "name": "Nuveen Municipal Credit Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "O",
    "name": "Realty Income Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OAK",
    "name": "Oaktree Capital Group, LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OAK^A",
    "name": "Oaktree Capital Group, LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OAK^B",
    "name": "Oaktree Capital Group, LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OAS",
    "name": "Oasis Petroleum Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OASM",
    "name": "Oasmia Pharmaceutical AB",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OBAS",
    "name": "Optibase Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OBCI",
    "name": "Ocean Bio-Chem, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OBE",
    "name": "Obsidian Energy Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OBLN",
    "name": "Obalon Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OBNK",
    "name": "Origin Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OBSV",
    "name": "ObsEva SA",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OC",
    "name": "Owens Corning Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OCC",
    "name": "Optical Cable Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OCCI",
    "name": "OFS Credit Company, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OCFC",
    "name": "OceanFirst Financial Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OCLR",
    "name": "Oclaro, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OCN",
    "name": "Ocwen Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OCSI",
    "name": "Oaktree Strategic Income Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OCSL",
    "name": "Oaktree Specialty Lending Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OCSLL",
    "name": "Oaktree Specialty Lending Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OCUL",
    "name": "Ocular Therapeutix, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OCX",
    "name": "OncoCyte Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ODC",
    "name": "Oil-Dri Corporation Of America",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ODFL",
    "name": "Old Dominion Freight Line, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ODP",
    "name": "Office Depot, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ODT",
    "name": "Odonate Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OEC",
    "name": "Orion Engineered Carbons S.A",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OESX",
    "name": "Orion Energy Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OFC",
    "name": "Corporate Office Properties Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OFED",
    "name": "Oconee Federal Financial Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OFG",
    "name": "OFG Bancorp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OFG^A",
    "name": "OFG Bancorp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OFG^B",
    "name": "OFG Bancorp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OFG^D",
    "name": "OFG Bancorp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OFIX",
    "name": "Orthofix Medical Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OFLX",
    "name": "Omega Flex, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OFS",
    "name": "OFS Capital Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OFSSL",
    "name": "OFS Capital Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OFSSZ",
    "name": "OFS Capital Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OGE",
    "name": "OGE Energy Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OGEN",
    "name": "Oragenics Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "OGS",
    "name": "ONE Gas, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OHAI",
    "name": "OHA Investment Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OHGI",
    "name": "One Horizon Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OHI",
    "name": "Omega Healthcare Investors, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OHRP",
    "name": "Ohr Pharmaceutical, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OI",
    "name": "Owens-Illinois, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OIA",
    "name": "Invesco Municipal Income Opportunities Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OIBR~",
    "name": "Oi S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OIBR.C",
    "name": "Oi S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OII",
    "name": "Oceaneering International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OIIM",
    "name": "O2Micro International Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OIS",
    "name": "Oil States International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OKDCC",
    "name": "Eaton Vance NextShares Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OKE",
    "name": "ONEOK, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OKTA",
    "name": "Okta, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OLBK",
    "name": "Old Line Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OLD",
    "name": "Janus Detroit Street Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OLED",
    "name": "Universal Display Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OLLI",
    "name": "Ollie&#39;s Bargain Outlet Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OLN",
    "name": "Olin Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OLP",
    "name": "One Liberty Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OMAB",
    "name": "Grupo Aeroportuario del Centro Norte S.A.B. de C.V.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OMAD",
    "name": "One Madison Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OMAD.U",
    "name": "One Madison Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OMAD.WS",
    "name": "One Madison Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OMC",
    "name": "Omnicom Group Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OMCL",
    "name": "Omnicell, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OMED",
    "name": "OncoMed Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OMER",
    "name": "Omeros Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OMEX",
    "name": "Odyssey Marine Exploration, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OMF",
    "name": "OneMain Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OMI",
    "name": "Owens & Minor, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OMN",
    "name": "OMNOVA Solutions Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OMP",
    "name": "Oasis Midstream Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ON",
    "name": "ON Semiconductor Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ONB",
    "name": "Old National Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ONCE",
    "name": "Spark Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ONCS",
    "name": "OncoSec Medical Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ONCY",
    "name": "Oncolytics Biotech Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ONDK",
    "name": "On Deck Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ONE",
    "name": "OneSmart International Education Group Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ONEQ",
    "name": "Fidelity Nasdaq Composite Index Tracking Stock",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ONS",
    "name": "Oncobiologics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ONSIW",
    "name": "Oncobiologics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ONTX",
    "name": "Onconova Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ONTXW",
    "name": "Onconova Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ONVO",
    "name": "Organovo Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OOMA",
    "name": "Ooma, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OPB",
    "name": "Opus Bank",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OPBK",
    "name": "OP Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OPES",
    "name": "Opes Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OPESU",
    "name": "Opes Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OPESW",
    "name": "Opes Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OPGN",
    "name": "OpGen, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OPGNW",
    "name": "OpGen, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OPHC",
    "name": "OptimumBank Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OPHT",
    "name": "Ophthotech Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OPK",
    "name": "Opko Health, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OPNT",
    "name": "Opiant Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OPOF",
    "name": "Old Point Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OPP",
    "name": "RiverNorth/DoubleLine Strategic Opportunity Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OPRA",
    "name": "Opera Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OPRX",
    "name": "OptimizeRx Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OPTN",
    "name": "OptiNose, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OPTT",
    "name": "Ocean Power Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OPY",
    "name": "Oppenheimer Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OR",
    "name": "Osisko Gold Royalties Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ORA",
    "name": "Ormat Technologies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ORAN",
    "name": "Orange",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ORBC",
    "name": "ORBCOMM Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ORBK",
    "name": "Orbotech Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ORC",
    "name": "Orchid Island Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ORCL",
    "name": "Oracle Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ORG",
    "name": "Janus Detroit Street Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ORGS",
    "name": "Orgenesis Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ORI",
    "name": "Old Republic International Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ORIG",
    "name": "Ocean Rig UDW Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ORIT",
    "name": "Oritani Financial Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ORLY",
    "name": "O&#39;Reilly Automotive, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ORM",
    "name": "Owens Realty Mortgage, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ORMP",
    "name": "Oramed Pharmaceuticals Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ORN",
    "name": "Orion Group Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ORPN",
    "name": "Bioblast Pharma Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ORRF",
    "name": "Orrstown Financial Services Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ORTX",
    "name": "Orchard Therapeutics plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OSB",
    "name": "Norbord Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OSBC",
    "name": "Old Second Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OSBCP",
    "name": "Old Second Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OSG",
    "name": "Overseas Shipholding Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OSIR",
    "name": "Osiris Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OSIS",
    "name": "OSI Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OSK",
    "name": "Oshkosh Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OSLE",
    "name": "Oaktree Specialty Lending Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OSMT",
    "name": "Osmotica Pharmaceuticals plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OSN",
    "name": "Ossen Innovation Co., Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OSPN",
    "name": "OneSpan Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OSS",
    "name": "One Stop Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OSTK",
    "name": "Overstock.com, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OSUR",
    "name": "OraSure Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OTEL",
    "name": "Otelco Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OTEX",
    "name": "Open Text Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OTIC",
    "name": "Otonomy, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OTIV",
    "name": "On Track Innovations Ltd",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OTTR",
    "name": "Otter Tail Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OTTW",
    "name": "Ottawa Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OUT",
    "name": "OUTFRONT Media Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OVAS",
    "name": "OvaScience Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OVBC",
    "name": "Ohio Valley Banc Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OVID",
    "name": "Ovid Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OVLY",
    "name": "Oak Valley Bancorp (CA)",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OXBR",
    "name": "Oxbridge Re Holdings Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OXBRW",
    "name": "Oxbridge Re Holdings Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OXFD",
    "name": "Oxford Immunotec Global PLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OXLC",
    "name": "Oxford Lane Capital Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OXLCM",
    "name": "Oxford Lane Capital Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OXLCO",
    "name": "Oxford Lane Capital Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OXM",
    "name": "Oxford Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OXSQ",
    "name": "Oxford Square Capital Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OXSQL",
    "name": "Oxford Square Capital Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OXY",
    "name": "Occidental Petroleum Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "OZK",
    "name": "Bank OZK",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "OZM",
    "name": "Och-Ziff Capital Management Group LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "P",
    "name": "Pandora Media, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PAA",
    "name": "Plains All American Pipeline, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PAAS",
    "name": "Pan American Silver Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PAC",
    "name": "Grupo Aeroportuario Del Pacifico, S.A. de C.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PACB",
    "name": "Pacific Biosciences of California, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PACQ",
    "name": "Pure Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PACQU",
    "name": "Pure Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PACQW",
    "name": "Pure Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PACW",
    "name": "PacWest Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PAG",
    "name": "Penske Automotive Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PAGG",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PAGP",
    "name": "Plains Group Holdings, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PAGS",
    "name": "PagSeguro Digital Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PAH",
    "name": "Platform Specialty Products Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PAHC",
    "name": "Phibro Animal Health Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PAI",
    "name": "Western Asset Investment Grade Income Fund Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PAM",
    "name": "Pampa Energia S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PANL",
    "name": "Pangaea Logistics Solutions Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PANW",
    "name": "Palo Alto Networks, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PAR",
    "name": "PAR Technology Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PARR",
    "name": "Par Pacific Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PATI",
    "name": "Patriot Transportation Holding, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PATK",
    "name": "Patrick Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PAVM",
    "name": "PAVmed Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PAVMW",
    "name": "PAVmed Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PAVMZ",
    "name": "PAVmed Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PAYC",
    "name": "Paycom Software, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PAYX",
    "name": "Paychex, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PB",
    "name": "Prosperity Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PBA",
    "name": "Pembina Pipeline Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PBB",
    "name": "Prospect Capital Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PBBI",
    "name": "PB Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PBCT",
    "name": "People&#39;s United Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PBCTP",
    "name": "People&#39;s United Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PBF",
    "name": "PBF Energy Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PBFX",
    "name": "PBF Logistics LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PBH",
    "name": "Prestige Consumer Healthcare Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PBHC",
    "name": "Pathfinder Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PBI",
    "name": "Pitney Bowes Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PBI^B",
    "name": "Pitney Bowes Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PBIP",
    "name": "Prudential Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PBPB",
    "name": "Potbelly Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PBR",
    "name": "Petroleo Brasileiro S.A.- Petrobras",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PBR.A",
    "name": "Petroleo Brasileiro S.A.- Petrobras",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PBSK",
    "name": "Poage Bankshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PBT",
    "name": "Permian Basin Royalty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PBY",
    "name": "Prospect Capital Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PBYI",
    "name": "Puma Biotechnology Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PCAR",
    "name": "PACCAR Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PCB",
    "name": "Pacific City Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PCF",
    "name": "High Income Securities Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PCG",
    "name": "Pacific Gas & Electric Co.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PCG^A",
    "name": "Pacific Gas & Electric Co.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PCG^B",
    "name": "Pacific Gas & Electric Co.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PCG^C",
    "name": "Pacific Gas & Electric Co.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PCG^D",
    "name": "Pacific Gas & Electric Co.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PCG^E",
    "name": "Pacific Gas & Electric Co.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PCG^G",
    "name": "Pacific Gas & Electric Co.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PCG^H",
    "name": "Pacific Gas & Electric Co.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PCG^I",
    "name": "Pacific Gas & Electric Co.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PCH",
    "name": "PotlatchDeltic Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PCI",
    "name": "PIMCO Dynamic Credit and Mortgage Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PCK",
    "name": "Pimco California Municipal Income Fund II",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PCM",
    "name": "PIMCO Commercial Mortgage Securities Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PCMI",
    "name": "PCM, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PCN",
    "name": "Pimco Corporate & Income Stategy Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PCOM",
    "name": "Points International, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PCQ",
    "name": "PIMCO California Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PCRX",
    "name": "Pacira Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PCSB",
    "name": "PCSB Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PCTI",
    "name": "PC-Tel, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PCTY",
    "name": "Paylocity Holding Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PCYG",
    "name": "Park City Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PCYO",
    "name": "Pure Cycle Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PDBC",
    "name": "Invesco Actively Managed Exchange-Traded Commodity Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PDCE",
    "name": "PDC Energy, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PDCO",
    "name": "Patterson Companies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PDD",
    "name": "Pinduoduo Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PDEX",
    "name": "Pro-Dex, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PDFS",
    "name": "PDF Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PDI",
    "name": "PIMCO Dynamic Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PDLB",
    "name": "PDL Community Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PDLI",
    "name": "PDL BioPharma, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PDM",
    "name": "Piedmont Office Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PDP",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PDS",
    "name": "Precision Drilling Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PDT",
    "name": "John Hancock Premium Dividend Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PDVW",
    "name": "pdvWireless, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PE",
    "name": "Parsley Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PEB",
    "name": "Pebblebrook Hotel Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PEB^C",
    "name": "Pebblebrook Hotel Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PEB^D",
    "name": "Pebblebrook Hotel Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PEBK",
    "name": "Peoples Bancorp of North Carolina, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PEBO",
    "name": "Peoples Bancorp Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PED",
    "name": "Pedevco Corp.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PEER",
    "name": "PeerStream, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PEERW",
    "name": "PeerStream, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PEG",
    "name": "Public Service Enterprise Group Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PEGA",
    "name": "Pegasystems Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PEGI",
    "name": "Pattern Energy Group Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PEI",
    "name": "Pennsylvania Real Estate Investment Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PEI^B",
    "name": "Pennsylvania Real Estate Investment Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PEI^C",
    "name": "Pennsylvania Real Estate Investment Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PEI^D",
    "name": "Pennsylvania Real Estate Investment Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PEIX",
    "name": "Pacific Ethanol, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PEN",
    "name": "Penumbra, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PENN",
    "name": "Penn National Gaming, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PEO",
    "name": "Adams Natural Resources Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PEP",
    "name": "Pepsico, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PER",
    "name": "SandRidge Permian Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PERI",
    "name": "Perion Network Ltd",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PES",
    "name": "Pioneer Energy Services Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PESI",
    "name": "Perma-Fix Environmental Services, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PETQ",
    "name": "PetIQ, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PETS",
    "name": "PetMed Express, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PETX",
    "name": "Aratana Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PETZ",
    "name": "TDH Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PETZC",
    "name": "Gabelli NextShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PEY",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PEZ",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PFBC",
    "name": "Preferred Bank",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PFBI",
    "name": "Premier Financial Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PFD",
    "name": "Flaherty & Crumrine Preferred Income Fund Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PFE",
    "name": "Pfizer, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PFF",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PFG",
    "name": "Principal Financial Group Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PFGC",
    "name": "Performance Food Group Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PFH",
    "name": "CABCO Series 2004-101 Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PFI",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PFIE",
    "name": "Profire Energy, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PFIN",
    "name": "P & F Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PFIS",
    "name": "Peoples Financial Services Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PFL",
    "name": "PIMCO Income Strategy Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PFLT",
    "name": "PennantPark Floating Rate Capital Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PFM",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PFMT",
    "name": "Performant Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PFN",
    "name": "PIMCO Income Strategy Fund II",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PFNX",
    "name": "Pfenex Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PFO",
    "name": "Flaherty & Crumrine Preferred Income Opportunity Fund Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PFPT",
    "name": "Proofpoint, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PFS",
    "name": "Provident Financial Services, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PFSI",
    "name": "PennyMac Financial Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PFSW",
    "name": "PFSweb, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PG",
    "name": "Procter & Gamble Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PGC",
    "name": "Peapack-Gladstone Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PGJ",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PGLC",
    "name": "Pershing Gold Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PGNX",
    "name": "Progenics Pharmaceuticals Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PGP",
    "name": "Pimco Global Stocksplus & Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PGR",
    "name": "Progressive Corporation (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PGRE",
    "name": "Paramount Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PGTI",
    "name": "PGT Innovations, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PGTI",
    "name": "PGT Innovations, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PGZ",
    "name": "Principal Real Estate Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PH",
    "name": "Parker-Hannifin Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PHAS",
    "name": "PhaseBio Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PHD",
    "name": "Pioneer Floating Rate Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PHG",
    "name": "Koninklijke Philips N.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PHI",
    "name": "PLDT Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PHII",
    "name": "PHI, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PHIIK",
    "name": "PHI, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PHIO",
    "name": "Phio Pharmaceuticals Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PHIOW",
    "name": "Phio Pharmaceuticals Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PHK",
    "name": "Pimco High Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PHM",
    "name": "PulteGroup, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PHO",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PHT",
    "name": "Pioneer High Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PHX",
    "name": "Panhandle Royalty Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PI",
    "name": "Impinj, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PICO",
    "name": "PICO Holdings Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PID",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PIE",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PIH",
    "name": "1347 Property Insurance Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PIHPP",
    "name": "1347 Property Insurance Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PII",
    "name": "Polaris Industries Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PIM",
    "name": "Putnam Master Intermediate Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PINC",
    "name": "Premier, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PIO",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PIR",
    "name": "Pier 1 Imports, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PIRS",
    "name": "Pieris Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PIXY",
    "name": "ShiftPixy, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PIY",
    "name": "Merrill Lynch Depositor, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PIZ",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PJC",
    "name": "Piper Jaffray Companies",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PJH",
    "name": "Prudential Financial, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PJT",
    "name": "PJT Partners Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PK",
    "name": "Park Hotels & Resorts Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PKBK",
    "name": "Parke Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PKD",
    "name": "Parker Drilling Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PKE",
    "name": "Park Electrochemical Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PKG",
    "name": "Packaging Corporation of America",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PKI",
    "name": "PerkinElmer, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PKO",
    "name": "Pimco Income Opportunity Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PKOH",
    "name": "Park-Ohio Holdings Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PKW",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PKX",
    "name": "POSCO",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PLAB",
    "name": "Photronics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PLAG",
    "name": "Planet Green Holdings Corp",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PLAN",
    "name": "Anaplan, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PLAY",
    "name": "Dave & Buster&#39;s Entertainment, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PLBC",
    "name": "Plumas Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PLCE",
    "name": "Children&#39;s Place, Inc. (The)",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PLD",
    "name": "Prologis, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PLG",
    "name": "Platinum Group Metals Ltd.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PLLL",
    "name": "Piedmont Lithium Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PLM",
    "name": "Polymet Mining Corp.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PLNT",
    "name": "Planet Fitness, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PLOW",
    "name": "Douglas Dynamics, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PLPC",
    "name": "Preformed Line Products Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PLSE",
    "name": "Pulse Biosciences, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PLT",
    "name": "Plantronics, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PLUG",
    "name": "Plug Power, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PLUS",
    "name": "ePlus inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PLW",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PLX",
    "name": "Protalix BioTherapeutics, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PLXP",
    "name": "PLx Pharma Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PLXS",
    "name": "Plexus Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PLYA",
    "name": "Playa Hotels & Resorts N.V.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PLYM",
    "name": "Plymouth Industrial REIT, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PLYM^A",
    "name": "Plymouth Industrial REIT, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PM",
    "name": "Philip Morris International Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PMBC",
    "name": "Pacific Mercantile Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PMD",
    "name": "Psychemedics Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PME",
    "name": "Pingtan Marine Enterprise Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PMF",
    "name": "PIMCO Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PML",
    "name": "Pimco Municipal Income Fund II",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PMM",
    "name": "Putnam Managed Municipal Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PMO",
    "name": "Putnam Municipal Opportunities Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PMOM",
    "name": "Principal Exchange-Traded Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PMT",
    "name": "PennyMac Mortgage Investment Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PMT^A",
    "name": "PennyMac Mortgage Investment Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PMT^B",
    "name": "PennyMac Mortgage Investment Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PMTS",
    "name": "CPI Card Group Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PMX",
    "name": "PIMCO Municipal Income Fund III",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PNBK",
    "name": "Patriot National Bancorp Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PNC",
    "name": "PNC Financial Services Group, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PNC^P",
    "name": "PNC Financial Services Group, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PNC^Q",
    "name": "PNC Financial Services Group, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PNC.WS",
    "name": "PNC Financial Services Group, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PNF",
    "name": "PIMCO New York Municipal Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PNFP",
    "name": "Pinnacle Financial Partners, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PNI",
    "name": "Pimco New York Municipal Income Fund II",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PNM",
    "name": "PNM Resources, Inc. (Holding Co.)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PNNT",
    "name": "PennantPark Investment Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PNQI",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PNR",
    "name": "Pentair plc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PNRG",
    "name": "PrimeEnergy Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PNRL",
    "name": "Paringa Resources Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PNTR",
    "name": "Pointer Telocation Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PNW",
    "name": "Pinnacle West Capital Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PODD",
    "name": "Insulet Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "POL",
    "name": "PolyOne Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "POLA",
    "name": "Polar Power, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "POOL",
    "name": "Pool Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "POPE",
    "name": "Pope Resources",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "POR",
    "name": "Portland General Electric Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "POST",
    "name": "Post Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "POWI",
    "name": "Power Integrations, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "POWL",
    "name": "Powell Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PPBI",
    "name": "Pacific Premier Bancorp Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PPC",
    "name": "Pilgrim&#39;s Pride Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PPDF",
    "name": "PPDAI Group Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PPG",
    "name": "PPG Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PPH",
    "name": "VanEck Vectors ETF Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PPIH",
    "name": "Perma-Pipe International Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PPL",
    "name": "PPL Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PPR",
    "name": "Voya Prime Rate Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PPSI",
    "name": "Pioneer Power Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PPT",
    "name": "Putnam Premier Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PPX",
    "name": "PPL Capital Funding, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PQG",
    "name": "PQ Group Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PRA",
    "name": "ProAssurance Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PRAA",
    "name": "PRA Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRAH",
    "name": "PRA Health Sciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRAN",
    "name": "Prana Biotechnology Ltd",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRCP",
    "name": "Perceptron, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRE^F",
    "name": "PartnerRe Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PRE^G",
    "name": "PartnerRe Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PRE^H",
    "name": "PartnerRe Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PRE^I",
    "name": "PartnerRe Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PRFT",
    "name": "Perficient, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRFZ",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRGO",
    "name": "Perrigo Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PRGS",
    "name": "Progress Software Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRGX",
    "name": "PRGX Global, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRH",
    "name": "Prudential Financial, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PRI",
    "name": "Primerica, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PRIF^A",
    "name": "Priority Income Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PRIF^B",
    "name": "Priority Income Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PRIM",
    "name": "Primoris Services Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRK",
    "name": "Park National Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PRLB",
    "name": "Proto Labs, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PRMW",
    "name": "Primo Water Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRN",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRNB",
    "name": "Principia Biopharma Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRO",
    "name": "PROS Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PROV",
    "name": "Provident Financial Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRPH",
    "name": "ProPhase Labs, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRPL",
    "name": "Purple Innovation, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRPO",
    "name": "Precipio, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRQR",
    "name": "ProQR Therapeutics N.V.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRS",
    "name": "Prudential Financial, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PRSC",
    "name": "The Providence Service Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRSP",
    "name": "Perspecta Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PRT",
    "name": "PermRock Royalty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PRTA",
    "name": "Prothena Corporation plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRTH",
    "name": "Priority Technology Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRTHU",
    "name": "Priority Technology Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRTHW",
    "name": "Priority Technology Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRTK",
    "name": "Paratek Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRTO",
    "name": "Proteon Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRTS",
    "name": "U.S. Auto Parts Network, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PRTY",
    "name": "Party City Holdco Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PRU",
    "name": "Prudential Financial, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PRVB",
    "name": "Provention Bio, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PS",
    "name": "Pluralsight, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PSA",
    "name": "Public Storage",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSA^A",
    "name": "Public Storage",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSA^B",
    "name": "Public Storage",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSA^C",
    "name": "Public Storage",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSA^D",
    "name": "Public Storage",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSA^E",
    "name": "Public Storage",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSA^F",
    "name": "Public Storage",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSA^G",
    "name": "Public Storage",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSAU",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PSA^U",
    "name": "Public Storage",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSA^V",
    "name": "Public Storage",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSA^W",
    "name": "Public Storage",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSA^X",
    "name": "Public Storage",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSA^Y",
    "name": "Public Storage",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSA^Z",
    "name": "Public Storage",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSB",
    "name": "PS Business Parks, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSB^U",
    "name": "PS Business Parks, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSB^V",
    "name": "PS Business Parks, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSB^W",
    "name": "PS Business Parks, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSB^X",
    "name": "PS Business Parks, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSB^Y",
    "name": "PS Business Parks, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSC",
    "name": "Principal Exchange-Traded Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PSCC",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PSCD",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PSCE",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PSCF",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PSCH",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PSCI",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PSCM",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PSCT",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PSCU",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PSDO",
    "name": "Presidio, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PSEC",
    "name": "Prospect Capital Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PSET",
    "name": "Principal Exchange-Traded Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PSF",
    "name": "Cohen & Steers Select Preferred and Income Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSL",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PSMT",
    "name": "PriceSmart, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PSO",
    "name": "Pearson, Plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSTG",
    "name": "Pure Storage, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSTI",
    "name": "Pluristem Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PSX",
    "name": "Phillips 66",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PSXP",
    "name": "Phillips 66 Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PT",
    "name": "Pintec Technology Holdings Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PTC",
    "name": "PTC Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PTCT",
    "name": "PTC Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PTE",
    "name": "PolarityTE, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PTEN",
    "name": "Patterson-UTI Energy, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PTF",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PTGX",
    "name": "Protagonist Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PTH",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PTI",
    "name": "Proteostasis Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PTIE",
    "name": "Pain Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PTLA",
    "name": "Portola Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PTN",
    "name": "Palatin Technologies, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PTNR",
    "name": "Partner Communications Company Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PTR",
    "name": "PetroChina Company Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PTSI",
    "name": "P.A.M. Transportation Services, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PTVCA",
    "name": "Protective Insurance Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PTVCB",
    "name": "Protective Insurance Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PTX",
    "name": "Pernix Therapeutics Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PTY",
    "name": "Pimco Corporate & Income Opportunity Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PUB",
    "name": "People&#39;s Utah Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PUI",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PUK",
    "name": "Prudential Public Limited Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PUK^",
    "name": "Prudential Public Limited Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PUK^A",
    "name": "Prudential Public Limited Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PULM",
    "name": "Pulmatrix, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PUMP",
    "name": "ProPetro Holding Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PVAC",
    "name": "Penn Virginia Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PVAL",
    "name": "Principal Exchange-Traded Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PVBC",
    "name": "Provident Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PVG",
    "name": "Pretium Resources, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PVH",
    "name": "PVH Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PVL",
    "name": "Permianville Royalty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PVTL",
    "name": "Pivotal Software, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PW",
    "name": "Power REIT",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PW^A",
    "name": "Power REIT",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PWOD",
    "name": "Penns Woods Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PWR",
    "name": "Quanta Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PXD",
    "name": "Pioneer Natural Resources Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PXI",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PXLW",
    "name": "Pixelworks, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PXS",
    "name": "Pyxis Tankers Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PXUS",
    "name": "Principal Exchange-Traded Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PY",
    "name": "Principal Exchange-Traded Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PYDS",
    "name": "Payment Data Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PYN",
    "name": "PIMCO New York Municipal Income Fund III",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PYPL",
    "name": "PayPal Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PYS",
    "name": "PPlus Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PYT",
    "name": "PPlus Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PYX",
    "name": "Pyxus International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PYZ",
    "name": "Invesco Exchange-Traded Fund Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "PZC",
    "name": "PIMCO California Municipal Income Fund III",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PZG",
    "name": "Paramount Gold Nevada Corp.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "PZN",
    "name": "Pzena Investment Management Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "PZZA",
    "name": "Papa John&#39;s International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QABA",
    "name": "First Trust Exchange-Traded Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QADA",
    "name": "QAD Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QADB",
    "name": "QAD Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QAT",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QBAK",
    "name": "Qualstar Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QCLN",
    "name": "First Trust Exchange-Traded Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QCOM",
    "name": "QUALCOMM Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QCRH",
    "name": "QCR Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QD",
    "name": "Qudian Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "QDEL",
    "name": "Quidel Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QEP",
    "name": "QEP Resources, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "QES",
    "name": "Quintana Energy Services Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "QGEN",
    "name": "Qiagen N.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "QGEN",
    "name": "Qiagen N.V.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QHC",
    "name": "Quorum Health Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "QIWI",
    "name": "QIWI plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QLC",
    "name": "FlexShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QLYS",
    "name": "Qualys, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QNST",
    "name": "QuinStreet, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QQEW",
    "name": "First Trust Exchange-Traded Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QQQ",
    "name": "Invesco QQQ Trust, Series 1",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QQQC",
    "name": "Global X Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QQQX",
    "name": "Nuveen NASDAQ 100 Dynamic Overwrite Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QQXT",
    "name": "First Trust Exchange-Traded Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QRHC",
    "name": "Quest Resource Holding Corporation.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QRTEA",
    "name": "Qurate Retail, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QRTEB",
    "name": "Qurate Retail, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QRVO",
    "name": "Qorvo, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QSR",
    "name": "Restaurant Brands International Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "QTEC",
    "name": "First Trust Exchange-Traded Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QTM",
    "name": "Quantum Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "QTNA",
    "name": "Quantenna Communications, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QTNT",
    "name": "Quotient Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QTRH",
    "name": "Quarterhill Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QTRX",
    "name": "Quanterix Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QTS",
    "name": "QTS Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "QTS^A",
    "name": "QTS Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "QTS^B",
    "name": "QTS Realty Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "QTT",
    "name": "Qutoutiao Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QTWO",
    "name": "Q2 Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "QUAD",
    "name": "Quad Graphics, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "QUIK",
    "name": "QuickLogic Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QUMU",
    "name": "Qumu Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QUOT",
    "name": "Quotient Technology Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "QURE",
    "name": "uniQure N.V.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "QVCD",
    "name": "QVC, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "QYLD",
    "name": "Horizons ETF Trust I",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "R",
    "name": "Ryder System, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RA",
    "name": "Brookfield Real Assets Income Fund Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RACE",
    "name": "Ferrari N.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RAD",
    "name": "Rite Aid Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RADA",
    "name": "RADA Electronic Industries Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RAIL",
    "name": "Freightcar America, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RAMP",
    "name": "LiveRamp Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RAND",
    "name": "Rand Capital Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RARE",
    "name": "Ultragenyx Pharmaceutical Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RARX",
    "name": "Ra Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RAVE",
    "name": "Rave Restaurant Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RAVN",
    "name": "Raven Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RBA",
    "name": "Ritchie Bros. Auctioneers Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RBB",
    "name": "RBB Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RBBN",
    "name": "Ribbon Communications Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RBC",
    "name": "Regal Beloit Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RBCAA",
    "name": "Republic Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RBCN",
    "name": "Rubicon Technology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RBNC",
    "name": "Reliant Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RBS",
    "name": "Royal Bank Scotland plc (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RC",
    "name": "Ready Capital Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RCA",
    "name": "Ready Capital Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RCG",
    "name": "RENN Fund, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "RCI",
    "name": "Rogers Communication, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RCII",
    "name": "Rent-A-Center Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RCKT",
    "name": "Rocket Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RCKY",
    "name": "Rocky Brands, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RCL",
    "name": "Royal Caribbean Cruises Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RCM",
    "name": "R1 RCM Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RCMT",
    "name": "RCM Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RCON",
    "name": "Recon Technology, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RCP",
    "name": "Ready Capital Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RCS",
    "name": "PIMCO Strategic Income Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RCUS",
    "name": "Arcus Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RDC",
    "name": "Rowan Companies plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RDCM",
    "name": "Radcom Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RDFN",
    "name": "Redfin Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RDHL",
    "name": "Redhill Biopharma Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RDI",
    "name": "Reading International Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RDIB",
    "name": "Reading International Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RDN",
    "name": "Radian Group Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RDNT",
    "name": "RadNet, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RDS.A",
    "name": "Royal Dutch Shell PLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RDS.B",
    "name": "Royal Dutch Shell PLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RDUS",
    "name": "Radius Health, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RDVT",
    "name": "Red Violet, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RDVY",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RDWR",
    "name": "Radware Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RDY",
    "name": "Dr. Reddy&#39;s Laboratories Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RE",
    "name": "Everest Re Group, Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RECN",
    "name": "Resources Connection, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "REDU",
    "name": "RISE Education Cayman Ltd",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "REED",
    "name": "Reeds, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "REFR",
    "name": "Research Frontiers Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "REG",
    "name": "Regency Centers Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "REGI",
    "name": "Renewable Energy Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "REGN",
    "name": "Regeneron Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "REI",
    "name": "Ring Energy, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "RELL",
    "name": "Richardson Electronics, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RELV",
    "name": "Reliv&#39; International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RELX",
    "name": "RELX PLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "REN",
    "name": "Resolute Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RENN",
    "name": "Renren Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "REPH",
    "name": "Recro Pharma, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "REPL",
    "name": "Replimune Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RES",
    "name": "RPC, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RESI",
    "name": "Front Yard Residential Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RESN",
    "name": "Resonant Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RETA",
    "name": "Reata Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RETO",
    "name": "ReTo Eco-Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "REV",
    "name": "Revlon, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "REVG",
    "name": "REV Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "REX",
    "name": "REX American Resources Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "REXR",
    "name": "Rexford Industrial Realty, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "REXR^A",
    "name": "Rexford Industrial Realty, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "REXR^B",
    "name": "Rexford Industrial Realty, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "REZI",
    "name": "Resideo Technologies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RF",
    "name": "Regions Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RF^A",
    "name": "Regions Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RFAP",
    "name": "First Trust Exchange-Traded Fund III",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RF^B",
    "name": "Regions Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RFDI",
    "name": "First Trust Exchange-Traded Fund III",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RFEM",
    "name": "First Trust Exchange-Traded Fund III",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RFEU",
    "name": "First Trust Exchange-Traded Fund III",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RFI",
    "name": "Cohen & Steers Total Return Realty Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RFIL",
    "name": "RF Industries, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RFL",
    "name": "Rafael Holdings, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "RFP",
    "name": "Resolute Forest Products Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RGA",
    "name": "Reinsurance Group of America, Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RGCO",
    "name": "RGC Resources Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RGEN",
    "name": "Repligen Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RGLD",
    "name": "Royal Gold, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RGLS",
    "name": "Regulus Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RGNX",
    "name": "REGENXBIO Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RGR",
    "name": "Sturm, Ruger & Company, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RGS",
    "name": "Regis Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RGSE",
    "name": "Real Goods Solar, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RGT",
    "name": "Royce Global Value Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RH",
    "name": "RH",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RHE",
    "name": "Regional Health Properties, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "RHE^A",
    "name": "Regional Health Properties, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "RHI",
    "name": "Robert Half International Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RHP",
    "name": "Ryman Hospitality Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RHT",
    "name": "Red Hat, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RIBT",
    "name": "RiceBran Technologies",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RIBTW",
    "name": "RiceBran Technologies",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RICK",
    "name": "RCI Hospitality Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RIF",
    "name": "RMR Real Estate Income Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "RIG",
    "name": "Transocean Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RIGL",
    "name": "Rigel Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RILY",
    "name": "B. Riley Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RILYG",
    "name": "B. Riley Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RILYH",
    "name": "B. Riley Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RILYI",
    "name": "B. Riley Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RILYL",
    "name": "B. Riley Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RILYZ",
    "name": "B. Riley Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RING",
    "name": "iShares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RIO",
    "name": "Rio Tinto Plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RIOT",
    "name": "Riot Blockchain, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RIV",
    "name": "RiverNorth Opportunities Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RIVE",
    "name": "Riverview Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RJF",
    "name": "Raymond James Financial, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RKDA",
    "name": "Arcadia Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RL",
    "name": "Ralph Lauren Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RLGT",
    "name": "Radiant Logistics, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "RLGT^A",
    "name": "Radiant Logistics, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "RLGY",
    "name": "Realogy Holdings Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RLH",
    "name": "Red Lion Hotels Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RLI",
    "name": "RLI Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RLJ",
    "name": "RLJ Lodging Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RLJ^A",
    "name": "RLJ Lodging Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RLM",
    "name": "Realm Therapeutics plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RM",
    "name": "Regional Management Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RMAX",
    "name": "RE/MAX Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RMBL",
    "name": "RumbleOn, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RMBS",
    "name": "Rambus, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RMCF",
    "name": "Rocky Mountain Chocolate Factory, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RMD",
    "name": "ResMed Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RMED",
    "name": "Ra Medical Systems, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RMI",
    "name": "RiverNorth Opportunistic Municipal Income Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RMNI",
    "name": "Rimini Street, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RMPL^",
    "name": "RiverNorth Marketplace Lending Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RMR",
    "name": "The RMR Group Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RMT",
    "name": "Royce Micro-Cap Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RMTI",
    "name": "Rockwell Medical, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RNDB",
    "name": "Randolph Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RNDM",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RNDV",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RNEM",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RNET",
    "name": "RigNet, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RNG",
    "name": "Ringcentral, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RNGR",
    "name": "Ranger Energy Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RNLC",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RNMC",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RNN",
    "name": "Rexahn Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "RNP",
    "name": "Cohen & Steers Reit and Preferred Income Fund Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RNR",
    "name": "RenaissanceRe Holdings Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RNR^C",
    "name": "RenaissanceRe Holdings Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RNR^E",
    "name": "RenaissanceRe Holdings Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RNR^F",
    "name": "RenaissanceRe Holdings Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RNSC",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RNST",
    "name": "Renasant Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RNWK",
    "name": "RealNetworks, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ROAD",
    "name": "Construction Partners, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ROAN",
    "name": "Roan Resources, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ROBO",
    "name": "Exchange Traded Concepts Trust ROBO Global Robotics and Automa",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ROBT",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ROCK",
    "name": "Gibraltar Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ROG",
    "name": "Rogers Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ROIC",
    "name": "Retail Opportunity Investments Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ROK",
    "name": "Rockwell Automation, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ROKU",
    "name": "Roku, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ROL",
    "name": "Rollins, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ROLL",
    "name": "RBC Bearings Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ROP",
    "name": "Roper Technologies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ROSE",
    "name": "Rosehill Resources Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ROSEU",
    "name": "Rosehill Resources Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ROSEW",
    "name": "Rosehill Resources Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ROST",
    "name": "Ross Stores, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ROX",
    "name": "Castle Brands, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ROYT",
    "name": "Pacific Coast Oil Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RP",
    "name": "RealPage, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RPAI",
    "name": "Retail Properties of America, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RPD",
    "name": "Rapid7, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RPIBC",
    "name": "Managed Portfolio Series",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RPM",
    "name": "RPM International Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RPT",
    "name": "RPT Realty",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RPT^D",
    "name": "RPT Realty",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RQI",
    "name": "Cohen & Steers Quality Income Realty Fund Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RRC",
    "name": "Range Resources Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RRD",
    "name": "R.R. Donnelley & Sons Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RRD",
    "name": "R.R. Donnelley & Sons Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RRGB",
    "name": "Red Robin Gourmet Burgers, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RRR",
    "name": "Red Rock Resorts, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RRTS",
    "name": "Roadrunner Transportation Systems, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RS",
    "name": "Reliance Steel & Aluminum Co.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RSG",
    "name": "Republic Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RSLS",
    "name": "ReShape Lifesciences Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RST",
    "name": "Rosetta Stone",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RSYS",
    "name": "RadiSys Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RTEC",
    "name": "Rudolph Technologies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RTIX",
    "name": "RTI Surgical, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RTN",
    "name": "Raytheon Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RTRX",
    "name": "Retrophin, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RTTR",
    "name": "Ritter Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RTW",
    "name": "RTW Retailwinds, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RUBI",
    "name": "The Rubicon Project, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RUBY",
    "name": "Rubius Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RUN",
    "name": "Sunrun Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RUSHA",
    "name": "Rush Enterprises, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RUSHB",
    "name": "Rush Enterprises, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RUTH",
    "name": "Ruth&#39;s Hospitality Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RVEN",
    "name": "Reven Housing REIT, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RVI",
    "name": "Retail Value Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RVLT",
    "name": "Revolution Lighting Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RVNC",
    "name": "Revance Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RVP",
    "name": "Retractable Technologies, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "RVSB",
    "name": "Riverview Bancorp Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RVT",
    "name": "Royce Value Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RWGE",
    "name": "Regalwood Global Energy Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RWGE.U",
    "name": "Regalwood Global Energy Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RWGE.WS",
    "name": "Regalwood Global Energy Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RWLK",
    "name": "ReWalk Robotics Ltd",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RWT",
    "name": "Redwood Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RXN",
    "name": "Rexnord Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RXN^A",
    "name": "Rexnord Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RY",
    "name": "Royal Bank Of Canada",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RYAAY",
    "name": "Ryanair Holdings plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RYAM",
    "name": "Rayonier Advanced Materials Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RYAM^A",
    "name": "Rayonier Advanced Materials Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RYB",
    "name": "RYB Education, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RYI",
    "name": "Ryerson Holding Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RYN",
    "name": "Rayonier Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RY^T",
    "name": "Royal Bank Of Canada",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RYTM",
    "name": "Rhythm Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "RZA",
    "name": "Reinsurance Group of America, Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "RZB",
    "name": "Reinsurance Group of America, Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "S",
    "name": "Sprint Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SA",
    "name": "Seabridge Gold, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SAB",
    "name": "Saratoga Investment Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SABR",
    "name": "Sabre Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SACH",
    "name": "Sachem Capital Corp.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SAEX",
    "name": "SAExploration Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SAF",
    "name": "Saratoga Investment Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SAFE",
    "name": "Safety, Income & Growth Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SAFM",
    "name": "Sanderson Farms, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SAFT",
    "name": "Safety Insurance Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SAGE",
    "name": "Sage Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SAH",
    "name": "Sonic Automotive, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SAIA",
    "name": "Saia, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SAIC",
    "name": "SCIENCE APPLICATIONS INTERNATIONAL CORPORATION",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SAIL",
    "name": "SailPoint Technologies Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SAL",
    "name": "Salisbury Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SALM",
    "name": "Salem Media Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SALT",
    "name": "Scorpio Bulkers Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SAM",
    "name": "Boston Beer Company, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SAMG",
    "name": "Silvercrest Asset Management Group Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SAN",
    "name": "Banco Santander, S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SAN^B",
    "name": "Banco Santander, S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SAND",
    "name": "Sandstorm Gold Ltd",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SANM",
    "name": "Sanmina Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SANW",
    "name": "S&W Seed Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SAP",
    "name": "SAP SE",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SAR",
    "name": "Saratoga Investment Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SASR",
    "name": "Sandy Spring Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SATS",
    "name": "EchoStar Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SAUC",
    "name": "Diversified Restaurant Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SAVE",
    "name": "Spirit Airlines, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SAVE",
    "name": "Spirit Airlines, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SB",
    "name": "Safe Bulkers, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SBAC",
    "name": "SBA Communications Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SBBC",
    "name": "Scorpio Tankers Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SBBP",
    "name": "Strongbridge Biopharma plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SBBX",
    "name": "SB One Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SB^C",
    "name": "Safe Bulkers, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SBCF",
    "name": "Seacoast Banking Corporation of Florida",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SB^D",
    "name": "Safe Bulkers, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SBFG",
    "name": "SB Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SBFGP",
    "name": "SB Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SBGI",
    "name": "Sinclair Broadcast Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SBGL",
    "name": "Sibanye Gold Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SBH",
    "name": "Sally Beauty Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SBI",
    "name": "Western Asset Intermediate Muni Fund Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SBLK",
    "name": "Star Bulk Carriers Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SBLKZ",
    "name": "Star Bulk Carriers Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SBNA",
    "name": "Scorpio Tankers Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SBNY",
    "name": "Signature Bank",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SBNYW",
    "name": "Signature Bank",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SBOT",
    "name": "Stellar Biotechnologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SBOW",
    "name": "SilverBow Resorces, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SBPH",
    "name": "Spring Bank Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SBR",
    "name": "Sabine Royalty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SBRA",
    "name": "Sabra Health Care REIT, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SBS",
    "name": "Companhia de saneamento Basico Do Estado De Sao Paulo - Sabesp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SBSI",
    "name": "Southside Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SBT",
    "name": "Sterling Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SBUX",
    "name": "Starbucks Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SC",
    "name": "Santander Consumer USA Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SCA",
    "name": "Stellus Capital Investment Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SCAC",
    "name": "Saban Capital Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SCACU",
    "name": "Saban Capital Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SCACW",
    "name": "Saban Capital Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SCCO",
    "name": "Southern Copper Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SCD",
    "name": "LMP Capital and Income Fund Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SCE^B",
    "name": "Southern California Edison Company",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SCE^C",
    "name": "Southern California Edison Company",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SCE^D",
    "name": "Southern California Edison Company",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SCE^E",
    "name": "Southern California Edison Company",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SCE^G",
    "name": "Southern California Edison Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SCE^H",
    "name": "Southern California Edison Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SCE^J",
    "name": "Southern California Edison Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SCE^K",
    "name": "Southern California Edison Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SCE^L",
    "name": "Southern California Edison Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SCG",
    "name": "Scana Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SCHL",
    "name": "Scholastic Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SCHN",
    "name": "Schnitzer Steel Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SCHW",
    "name": "The Charles Schwab Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SCHW^C",
    "name": "The Charles Schwab Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SCHW^D",
    "name": "The Charles Schwab Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SCI",
    "name": "Service Corporation International",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SCKT",
    "name": "Socket Mobile, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SCL",
    "name": "Stepan Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SCM",
    "name": "Stellus Capital Investment Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SCON",
    "name": "Superconductor Technologies Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SCOR",
    "name": "comScore, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SCPH",
    "name": "scPharmaceuticals Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SCS",
    "name": "Steelcase Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SCSC",
    "name": "ScanSource, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SCVL",
    "name": "Shoe Carnival, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SCWX",
    "name": "SecureWorks Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SCX",
    "name": "L.S. Starrett Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SCYX",
    "name": "SCYNEXIS, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SCZ",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SD",
    "name": "SandRidge Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SDG",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SDI",
    "name": "Standard Diversified Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SDLP",
    "name": "Seadrill Partners LLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SDPI",
    "name": "Superior Drilling Products, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SDR",
    "name": "SandRidge Mississippian Trust II",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SDRL",
    "name": "Seadrill Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SDT",
    "name": "SandRidge Mississippian Trust I",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SDVY",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SE",
    "name": "Sea Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SEAC",
    "name": "SeaChange International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SEAS",
    "name": "SeaWorld Entertainment, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SEB",
    "name": "Seaboard Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SECO",
    "name": "Secoo Holding Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SEDG",
    "name": "SolarEdge Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SEE",
    "name": "Sealed Air Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SEED",
    "name": "Origin Agritech Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SEIC",
    "name": "SEI Investments Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SEII",
    "name": "Sharing Economy International Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SELB",
    "name": "Selecta Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SELF",
    "name": "Global Self Storage, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SEM",
    "name": "Select Medical Holdings Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SEMG",
    "name": "Semgroup Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SEND",
    "name": "SendGrid, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SENEA",
    "name": "Seneca Foods Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SENEB",
    "name": "Seneca Foods Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SENS",
    "name": "Senseonics Holdings, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SEP",
    "name": "Spectra Energy Partners, LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SERV",
    "name": "ServiceMaster Global Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SES",
    "name": "Synthesis Energy Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SESN",
    "name": "Sesen Bio, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SF",
    "name": "Stifel Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SF^A",
    "name": "Stifel Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SFB",
    "name": "Stifel Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SFBC",
    "name": "Sound Financial Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SFBS",
    "name": "ServisFirst Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SFE",
    "name": "Safeguard Scientifics, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SFET",
    "name": "Safe-T Group Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SFIX",
    "name": "Stitch Fix, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SFL",
    "name": "Ship Finance International Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SFLY",
    "name": "Shutterfly, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SFM",
    "name": "Sprouts Farmers Market, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SFNC",
    "name": "Simmons First National Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SFS",
    "name": "Smart",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SFST",
    "name": "Southern First Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SFUN",
    "name": "Fang Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SG",
    "name": "Sirius International Insurance Group, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SGA",
    "name": "Saga Communications, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SGB",
    "name": "Southwest Georgia Financial Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SGBX",
    "name": "SG Blocks, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SGC",
    "name": "Superior Group of Companies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SGEN",
    "name": "Seattle Genetics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SGH",
    "name": "SMART Global Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SGLB",
    "name": "Sigma Labs, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SGLBW",
    "name": "Sigma Labs, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SGMA",
    "name": "SigmaTron International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SGMO",
    "name": "Sangamo Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SGMS",
    "name": "Scientific Games Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SGOC",
    "name": "SGOCO Group, Ltd",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SGRP",
    "name": "SPAR Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SGRY",
    "name": "Surgery Partners, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SGU",
    "name": "Star Group, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SGYP",
    "name": "Synergy Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SGZA",
    "name": "Selective Insurance Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SHAK",
    "name": "Shake Shack, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SHBI",
    "name": "Shore Bancshares Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SHEN",
    "name": "Shenandoah Telecommunications Co",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SHG",
    "name": "Shinhan Financial Group Co Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SHI",
    "name": "SINOPEC Shangai Petrochemical Company, Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SHIP",
    "name": "Seanergy Maritime Holdings Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SHIPW",
    "name": "Seanergy Maritime Holdings Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SHLO",
    "name": "Shiloh Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SHLX",
    "name": "Shell Midstream Partners, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SHO",
    "name": "Sunstone Hotel Investors, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SHO^E",
    "name": "Sunstone Hotel Investors, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SHO^F",
    "name": "Sunstone Hotel Investors, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SHOO",
    "name": "Steven Madden, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SHOP",
    "name": "Shopify Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SHOS",
    "name": "Sears Hometown and Outlet Stores, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SHPG",
    "name": "Shire plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SHSP",
    "name": "SharpSpring, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SHV",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SHW",
    "name": "Sherwin-Williams Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SHY",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SIBN",
    "name": "SI-BONE, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SIC",
    "name": "Select Interior Concepts, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SID",
    "name": "National Steel Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SIEB",
    "name": "Siebert Financial Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SIEN",
    "name": "Sientra, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SIF",
    "name": "SIFCO Industries, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SIFI",
    "name": "SI Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SIFY",
    "name": "Sify Technologies Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SIG",
    "name": "Signet Jewelers Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SIGA",
    "name": "SIGA Technologies Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SIGI",
    "name": "Selective Insurance Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SILC",
    "name": "Silicom Ltd",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SILV",
    "name": "SilverCrest Metals Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SIM",
    "name": "Grupo Simec, S.A. de C.V.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SIMO",
    "name": "Silicon Motion Technology Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SINA",
    "name": "Sina Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SINO",
    "name": "Sino-Global Shipping America, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SINT",
    "name": "SiNtx Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SIR",
    "name": "Select Income REIT",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SIRI",
    "name": "Sirius XM Holdings Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SITC",
    "name": "SITE Centers Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SITC^A",
    "name": "SITE Centers Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SITC^J",
    "name": "SITE Centers Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SITC^K",
    "name": "SITE Centers Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SITE",
    "name": "SiteOne Landscape Supply, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SITO",
    "name": "SITO Mobile, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SIVB",
    "name": "SVB Financial Group",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SIX",
    "name": "Six Flags Entertainment Corporation New",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SJI",
    "name": "South Jersey Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SJIU",
    "name": "South Jersey Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SJM",
    "name": "J.M. Smucker Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SJR",
    "name": "Shaw Communications Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SJT",
    "name": "San Juan Basin Royalty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SJW",
    "name": "SJW Group",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SKIS",
    "name": "Peak Resorts, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SKM",
    "name": "SK Telecom Co., Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SKOR",
    "name": "FlexShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SKT",
    "name": "Tanger Factory Outlet Centers, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SKX",
    "name": "Skechers U.S.A., Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SKY",
    "name": "Skyline Champion Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SKYS",
    "name": "Sky Solar Holdings, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SKYW",
    "name": "SkyWest, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SKYY",
    "name": "First Trust Exchange-Traded Fund II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SLAB",
    "name": "Silicon Laboratories, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SLB",
    "name": "Schlumberger N.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SLCA",
    "name": "U.S. Silica Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SLCT",
    "name": "Select Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SLDB",
    "name": "Solid Biosciences Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SLF",
    "name": "Sun Life Financial Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SLG",
    "name": "SL Green Realty Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SLG^I",
    "name": "SL Green Realty Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SLGL",
    "name": "Sol-Gel Technologies Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SLGN",
    "name": "Silgan Holdings Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SLIM",
    "name": "Janus Detroit Street Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SLM",
    "name": "SLM Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SLMBP",
    "name": "SLM Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SLNO",
    "name": "Soleno Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SLNOW",
    "name": "Soleno Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SLP",
    "name": "Simulations Plus, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SLQD",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SLRC",
    "name": "Solar Capital Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SLS",
    "name": "SELLAS Life Sciences Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SLTB",
    "name": "Scorpio Bulkers Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SLVO",
    "name": "Credit Suisse AG",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SM",
    "name": "SM Energy Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SMAR",
    "name": "Smartsheet Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SMBC",
    "name": "Southern Missouri Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SMBK",
    "name": "SmartFinancial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SMCP",
    "name": "ETF Series Solutions",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SMED",
    "name": "Sharps Compliance Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SMFG",
    "name": "Sumitomo Mitsui Financial Group Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SMG",
    "name": "Scotts Miracle-Gro Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SMHI",
    "name": "SEACOR Marine Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SMI",
    "name": "Semiconductor  Manufacturing International Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SMIT",
    "name": "Schmitt Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SMLP",
    "name": "Summit Midstream Partners, LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SMM",
    "name": "Salient Midstream & MLP Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SMMF",
    "name": "Summit Financial Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SMMT",
    "name": "Summit Therapeutics plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SMP",
    "name": "Standard Motor Products, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SMPL",
    "name": "The Simply Good Foods Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SMRT",
    "name": "Stein Mart, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SMSH",
    "name": "Smaaash Entertainment Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SMSHW",
    "name": "Smaaash Entertainment Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SMSI",
    "name": "Smith Micro Software, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SMTA",
    "name": "Spirit MTA REIT",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SMTC",
    "name": "Semtech Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SMTS",
    "name": "Sierra Metals Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SMTX",
    "name": "SMTC Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SN",
    "name": "Sanchez Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SNA",
    "name": "Snap-On Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SNAP",
    "name": "Snap Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SNBR",
    "name": "Sleep Number Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNCR",
    "name": "Synchronoss Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SND",
    "name": "Smart Sand, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNDE",
    "name": "Sundance Energy Australia Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNDR",
    "name": "Schneider National, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SNDX",
    "name": "Syndax Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNE",
    "name": "Sony Corp Ord",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SNES",
    "name": "SenesTech, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNFCA",
    "name": "Security National Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNGX",
    "name": "Soligenix, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNGXW",
    "name": "Soligenix, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNH",
    "name": "Senior Housing Properties Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNHNI",
    "name": "Senior Housing Properties Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNHNL",
    "name": "Senior Housing Properties Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNHY",
    "name": "Sun Hydraulics Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNLN",
    "name": "Highland Funds I",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNMP",
    "name": "Sanchez Midstream Partners LP",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SNN",
    "name": "Smith & Nephew SNATS, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SNNA",
    "name": "Sienna Biopharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNOA",
    "name": "Sonoma Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNOAW",
    "name": "Sonoma Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNP",
    "name": "China Petroleum & Chemical Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SNPS",
    "name": "Synopsys, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNR",
    "name": "New Senior Investment Group Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SNSR",
    "name": "Global X Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNSS",
    "name": "Sunesis Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SNV",
    "name": "Synovus Financial Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SNV^D",
    "name": "Synovus Financial Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SNX",
    "name": "Synnex Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SNY",
    "name": "Sanofi",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SO",
    "name": "Southern Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SOCL",
    "name": "Global X Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SODA",
    "name": "SodaStream International Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SOFO",
    "name": "Sonic Foundry, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SOGO",
    "name": "Sogou Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SOHO",
    "name": "Sotherly Hotels Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SOHOB",
    "name": "Sotherly Hotels Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SOHOK",
    "name": "Sotherly Hotels LP",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SOHOO",
    "name": "Sotherly Hotels Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SOHU",
    "name": "Sohu.com Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SOI",
    "name": "Solaris Oilfield Infrastructure, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SOJA",
    "name": "Southern Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SOJB",
    "name": "Southern Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SOJC",
    "name": "Southern Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SOL",
    "name": "Renesola Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SOLO",
    "name": "Electrameccanica Vehicles Corp. Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SOLOW",
    "name": "Electrameccanica Vehicles Corp. Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SON",
    "name": "Sonoco Products Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SONA",
    "name": "Southern National Bancorp of Virginia, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SONC",
    "name": "Sonic Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SONO",
    "name": "Sonos, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SOR",
    "name": "Source Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SORL",
    "name": "SORL Auto Parts, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SOXX",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SP",
    "name": "SP Plus Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPA",
    "name": "Sparton Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SPAQ",
    "name": "Spartan Energy Acquisition Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SPAQ.U",
    "name": "Spartan Energy Acquisition Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SPAQ.WS",
    "name": "Spartan Energy Acquisition Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SPAR",
    "name": "Spartan Motors, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPB",
    "name": "Spectrum Brands Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SPCB",
    "name": "SuperCom, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPE",
    "name": "Special Opportunities Fund Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SPE^B",
    "name": "Special Opportunities Fund Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SPEX",
    "name": "Spherix Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPG",
    "name": "Simon Property Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SPGI",
    "name": "S&P Global Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SPG^J",
    "name": "Simon Property Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SPH",
    "name": "Suburban Propane Partners, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SPHS",
    "name": "Sophiris Bio, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPI",
    "name": "SPI Energy Co., Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPKE",
    "name": "Spark Energy, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPKEP",
    "name": "Spark Energy, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPLK",
    "name": "Splunk Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPLP",
    "name": "Steel Partners Holdings LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SPLP^A",
    "name": "Steel Partners Holdings LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SPN",
    "name": "Superior Energy Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SPNE",
    "name": "SeaSpine Holdings Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPNS",
    "name": "Sapiens International Corporation N.V.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPOK",
    "name": "Spok Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPOT",
    "name": "Spotify Technology S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SPPI",
    "name": "Spectrum Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPR",
    "name": "Spirit Aerosystems Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SPRO",
    "name": "Spero Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPRT",
    "name": "support.com, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPSC",
    "name": "SPS Commerce, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPTN",
    "name": "SpartanNash Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPWH",
    "name": "Sportsman&#39;s Warehouse Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPWR",
    "name": "SunPower Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SPXC",
    "name": "SPX Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SPXX",
    "name": "Nuveen S&P 500 Dynamic Overwrite Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SQ",
    "name": "Square, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SQBG",
    "name": "Sequential Brands Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SQLV",
    "name": "Legg Mason ETF Investment Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SQM",
    "name": "Sociedad Quimica y Minera S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SQNS",
    "name": "Sequans Communications S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SQQQ",
    "name": "ProShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SR",
    "name": "Spire Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SRAX",
    "name": "Social Reality, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SRC",
    "name": "Spirit Realty Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SRC^A",
    "name": "Spirit Realty Capital, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SRCE",
    "name": "1st Source Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SRCI",
    "name": "SRC Energy Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SRCL",
    "name": "Stericycle, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SRDX",
    "name": "Surmodics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SRE",
    "name": "Sempra Energy",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SRE^A",
    "name": "Sempra Energy",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SRE^B",
    "name": "Sempra Energy",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SRET",
    "name": "Global X Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SREV",
    "name": "ServiceSource International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SRF",
    "name": "Cushing Energy Income Fund (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SRG",
    "name": "Seritage Growth Properties",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SRG^A",
    "name": "Seritage Growth Properties",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SRI",
    "name": "Stoneridge, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SRLP",
    "name": "Sprague Resources LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SRNE",
    "name": "Sorrento Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SRPT",
    "name": "Sarepta Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SRRA",
    "name": "Sierra Oncology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SRRK",
    "name": "Scholar Rock Holding Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SRT",
    "name": "StarTek, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SRTS",
    "name": "Sensus Healthcare, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SRTSW",
    "name": "Sensus Healthcare, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SRV",
    "name": "Cushing MLP & Infrastructure Total Return Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SSB",
    "name": "South State Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SSBI",
    "name": "Summit State Bank",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SSD",
    "name": "Simpson Manufacturing Company, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SSFN",
    "name": "Stewardship Financial Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SSI",
    "name": "Stage Stores, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SSKN",
    "name": "Strata Skin Sciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SSL",
    "name": "Sasol Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SSLJ",
    "name": "SSLJ.com Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SSNC",
    "name": "SS&C Technologies Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SSNT",
    "name": "SilverSun Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SSP",
    "name": "E.W. Scripps Company (The)",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SSRM",
    "name": "SSR Mining Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SSTI",
    "name": "ShotSpotter, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SSTK",
    "name": "Shutterstock, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SSW",
    "name": "Seaspan Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SSWA",
    "name": "Seaspan Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SSW^D",
    "name": "Seaspan Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SSW^E",
    "name": "Seaspan Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SSW^G",
    "name": "Seaspan Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SSW^H",
    "name": "Seaspan Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SSW^I",
    "name": "Seaspan Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SSWN",
    "name": "Seaspan Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SSY",
    "name": "SunLink Health Systems, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SSYS",
    "name": "Stratasys, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ST",
    "name": "Sensata Technologies Holding plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STAA",
    "name": "STAAR Surgical Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STAF",
    "name": "Staffing 360 Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STAG",
    "name": "Stag Industrial, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STAG^C",
    "name": "Stag Industrial, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STAR",
    "name": "iStar Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STAR^D",
    "name": "iStar Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STAR^G",
    "name": "iStar Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STAR^I",
    "name": "iStar Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STAY",
    "name": "Extended Stay America, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STBA",
    "name": "S&T Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STBZ",
    "name": "State Bank Financial Corporation.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STC",
    "name": "Stewart Information Services Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STCN",
    "name": "Steel Connect, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STE",
    "name": "STERIS plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STFC",
    "name": "State Auto Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STG",
    "name": "Sunlands Online Education Group",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STI",
    "name": "SunTrust Banks, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STI^A",
    "name": "SunTrust Banks, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STIM",
    "name": "Neuronetics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STI.WS.A",
    "name": "SunTrust Banks, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STK",
    "name": "Columbia Seligman Premium Technology Growth Fund, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STKL",
    "name": "SunOpta, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STKS",
    "name": "The ONE Group Hospitality, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STL",
    "name": "Sterling Bancorp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STL^A",
    "name": "Sterling Bancorp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STLD",
    "name": "Steel Dynamics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STLR",
    "name": "Stellar Acquisition III Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STLRU",
    "name": "Stellar Acquisition III Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STLRW",
    "name": "Stellar Acquisition III Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STM",
    "name": "STMicroelectronics N.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STML",
    "name": "Stemline Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STMP",
    "name": "Stamps.com Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STN",
    "name": "Stantec Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STND",
    "name": "Standard AVB Financial Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STNE",
    "name": "StoneCo Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STNG",
    "name": "Scorpio Tankers Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STNL",
    "name": "Sentinel Energy Services Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STNLU",
    "name": "Sentinel Energy Services Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STNLW",
    "name": "Sentinel Energy Services Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STON",
    "name": "StoneMor Partners L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STOR",
    "name": "STORE Capital Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STPP",
    "name": "Barclays PLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STRA",
    "name": "Strategic Education, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STRL",
    "name": "Sterling Construction Company Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STRM",
    "name": "Streamline Health Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STRO",
    "name": "Sutro Biopharma, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STRS",
    "name": "Stratus Properties Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STRT",
    "name": "Strattec Security Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STT",
    "name": "State Street Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STT^C",
    "name": "State Street Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STT^D",
    "name": "State Street Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STT^E",
    "name": "State Street Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STT^G",
    "name": "State Street Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STWD",
    "name": "STARWOOD PROPERTY TRUST, INC.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STX",
    "name": "Seagate Technology PLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STXB",
    "name": "Spirit of Texas Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "STZ",
    "name": "Constellation Brands Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "STZ.B",
    "name": "Constellation Brands Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SU",
    "name": "Suncor Energy  Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SUI",
    "name": "Sun Communities, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SUM",
    "name": "Summit Materials, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SUMR",
    "name": "Summer Infant, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SUN",
    "name": "Sunoco LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SUNS",
    "name": "Solar Senior Capital Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SUNW",
    "name": "Sunworks, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SUP",
    "name": "Superior Industries International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SUPN",
    "name": "Supernus Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SUPV",
    "name": "Grupo Supervielle S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SURF",
    "name": "Surface Oncology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SUSB",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SUSC",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SVA",
    "name": "Sinovac Biotech, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SVBI",
    "name": "Severn Bancorp Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SVM",
    "name": "Silvercorp Metals Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SVMK",
    "name": "SVMK Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SVRA",
    "name": "Savara, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SVT",
    "name": "Servotronics, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SVVC",
    "name": "Firsthand Technology Value Fund, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SWCH",
    "name": "Switch, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SWI",
    "name": "SolarWinds Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SWIR",
    "name": "Sierra Wireless, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SWJ",
    "name": "Stanley Black & Decker, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SWK",
    "name": "Stanley Black & Decker, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SWKS",
    "name": "Skyworks Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SWM",
    "name": "Schweitzer-Mauduit International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SWN",
    "name": "Southwestern Energy Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SWP",
    "name": "Stanley Black & Decker, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SWX",
    "name": "Southwest Gas Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SWZ",
    "name": "Swiss Helvetia Fund, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SXC",
    "name": "SunCoke Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SXCP",
    "name": "SunCoke Energy Partners, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SXE",
    "name": "Southcross Energy Partners, L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SXI",
    "name": "Standex International Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SXT",
    "name": "Sensient Technologies Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SYBT",
    "name": "Stock Yards Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SYBX",
    "name": "Synlogic, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SYF",
    "name": "Synchrony Financial",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SYK",
    "name": "Stryker Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SYKE",
    "name": "Sykes Enterprises, Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SYMC",
    "name": "Symantec Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SYN",
    "name": "Synthetic Biologics, Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "SYNA",
    "name": "Synaptics Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SYNC",
    "name": "Synacor, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SYNH",
    "name": "Syneos Health, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SYNL",
    "name": "Synalloy Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SYPR",
    "name": "Sypris Solutions, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SYRS",
    "name": "Syros Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "SYX",
    "name": "Systemax Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SYY",
    "name": "Sysco Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "SZC",
    "name": "Cushing Renaissance Fund (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "T",
    "name": "AT&T Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TA",
    "name": "TravelCenters of America LLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TAC",
    "name": "TransAlta Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TACO",
    "name": "Del Taco Restaurants, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TACOW",
    "name": "Del Taco Restaurants, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TACT",
    "name": "TransAct Technologies Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TAHO",
    "name": "Tahoe Resources, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TAIT",
    "name": "Taitron Components Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TAL",
    "name": "TAL Education Group",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TALO",
    "name": "Talos Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TALO.WS",
    "name": "Talos Energy, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "TANH",
    "name": "Tantech Holdings Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TANNI",
    "name": "TravelCenters of America LLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TANNL",
    "name": "TravelCenters of America LLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TANNZ",
    "name": "TravelCenters of America LLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TAOP",
    "name": "Taoping Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TAP",
    "name": "Molson Coors Brewing  Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TAP.A",
    "name": "Molson Coors Brewing  Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TAPR",
    "name": "Barclays PLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TARO",
    "name": "Taro Pharmaceutical Industries Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TAST",
    "name": "Carrols Restaurant Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TAT",
    "name": "Transatlantic Petroleum Ltd",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "TATT",
    "name": "TAT Technologies Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TAYD",
    "name": "Taylor Devices, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TBB",
    "name": "AT&T Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TBBK",
    "name": "The Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TBC",
    "name": "AT&T Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TBI",
    "name": "TrueBlue, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TBIO",
    "name": "Translate Bio, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TBK",
    "name": "Triumph Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TBLTU",
    "name": "ToughBuilt Industries, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TBNK",
    "name": "Territorial Bancorp Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TBPH",
    "name": "Theravance Biopharma, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TBRG",
    "name": "Thunder Bridge Acquisition, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TBRGU",
    "name": "Thunder Bridge Acquisition, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TBRGW",
    "name": "Thunder Bridge Acquisition, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TC",
    "name": "TuanChe Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TCBI",
    "name": "Texas Capital Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TCBIL",
    "name": "Texas Capital Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TCBIP",
    "name": "Texas Capital Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TCBIW",
    "name": "Texas Capital Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TCBK",
    "name": "TriCo Bancshares",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TCCO",
    "name": "Technical Communications Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TCDA",
    "name": "Tricida, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TCF",
    "name": "TCF Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TCFC",
    "name": "The Community Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TCF^D",
    "name": "TCF Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TCGP",
    "name": "The Carlyle Group L.P.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TCI",
    "name": "Transcontinental Realty Investors, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TCMD",
    "name": "Tactile Systems Technology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TCO",
    "name": "Taubman Centers, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TCO^J",
    "name": "Taubman Centers, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TCO^K",
    "name": "Taubman Centers, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TCON",
    "name": "TRACON Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TCP",
    "name": "TC PipeLines, LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TCPC",
    "name": "BlackRock TCP Capital Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TCRD",
    "name": "THL Credit, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TCRW",
    "name": "THL Credit, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TCRZ",
    "name": "THL Credit, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TCS",
    "name": "Container Store (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TCX",
    "name": "Tucows Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TD",
    "name": "Toronto Dominion Bank (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TDA",
    "name": "Telephone and Data Systems, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TDAC",
    "name": "Trident Acquisitions Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TDACU",
    "name": "Trident Acquisitions Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TDACW",
    "name": "Trident Acquisitions Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TDC",
    "name": "Teradata Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TDE",
    "name": "Telephone and Data Systems, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TDF",
    "name": "Templeton Dragon Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TDG",
    "name": "Transdigm Group Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TDI",
    "name": "Telephone and Data Systems, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TDIV",
    "name": "First Trust Exchange-Traded Fund VI",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TDJ",
    "name": "Telephone and Data Systems, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TDOC",
    "name": "Teladoc Health, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TDS",
    "name": "Telephone and Data Systems, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TDW",
    "name": "Tidewater Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TDW.WS",
    "name": "Tidewater Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "TDW.WS.A",
    "name": "Tidewater Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TDW.WS.B",
    "name": "Tidewater Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TDY",
    "name": "Teledyne Technologies Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TEAM",
    "name": "Atlassian Corporation Plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TECD",
    "name": "Tech Data Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TECH",
    "name": "Bio-Techne Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TECK",
    "name": "Teck Resources Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TEDU",
    "name": "Tarena International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TEF",
    "name": "Telefonica SA",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TEI",
    "name": "Templeton Emerging Markets Income Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TEL",
    "name": "TE Connectivity Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TELL",
    "name": "Tellurian Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TEN",
    "name": "Tenneco Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TENB",
    "name": "Tenable Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TENX",
    "name": "Tenax Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TEO",
    "name": "Telecom Argentina Stet - France Telecom S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TER",
    "name": "Teradyne, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TERP",
    "name": "TerraForm Power, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TESS",
    "name": "TESSCO Technologies Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TEUM",
    "name": "Pareteum Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TEVA",
    "name": "Teva Pharmaceutical Industries Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TEX",
    "name": "Terex Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TFSL",
    "name": "TFS Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TFX",
    "name": "Teleflex Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TG",
    "name": "Tredegar Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TGA",
    "name": "TransGlobe Energy Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TGB",
    "name": "Taseko Mines Limited",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "TGC",
    "name": "Tengasco, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "TGE",
    "name": "Tallgrass Energy, LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TGEN",
    "name": "Tecogen Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TGH",
    "name": "Textainer Group Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TGI",
    "name": "Triumph Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TGLS",
    "name": "Tecnoglass Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TGNA",
    "name": "TEGNA Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TGP",
    "name": "Teekay LNG Partners L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TGP^A",
    "name": "Teekay LNG Partners L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TGP^B",
    "name": "Teekay LNG Partners L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TGS",
    "name": "Transportadora De Gas Sa Ord B",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TGT",
    "name": "Target Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TGTX",
    "name": "TG Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "THC",
    "name": "Tenet Healthcare Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "THFF",
    "name": "First Financial Corporation Indiana",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "THG",
    "name": "The Hanover Insurance Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "THGA",
    "name": "The Hanover Insurance Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "THM",
    "name": "International Tower Hill Mines Ltd",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "THO",
    "name": "Thor Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "THQ",
    "name": "Tekla Healthcare Opportunies Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "THR",
    "name": "Thermon Group Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "THRM",
    "name": "Gentherm Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "THS",
    "name": "Treehouse Foods, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "THST",
    "name": "Truett-Hurst, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "THW",
    "name": "Tekla World Healthcare Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TI",
    "name": "Telecom Italia S.P.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TI.A",
    "name": "Telecom Italia S.P.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TIBR",
    "name": "Tiberius Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TIBRU",
    "name": "Tiberius Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TIBRW",
    "name": "Tiberius Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TIER",
    "name": "TIER REIT, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TIF",
    "name": "Tiffany & Co.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TIK",
    "name": "Tel-Instrument Electronics Corp.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "TILE",
    "name": "Interface, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TIPT",
    "name": "Tiptree Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TIS",
    "name": "Orchids Paper Products Company",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "TISA",
    "name": "Top Image Systems, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TISI",
    "name": "Team, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TITN",
    "name": "Titan Machinery Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TIVO",
    "name": "TiVo Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TJX",
    "name": "TJX Companies, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TK",
    "name": "Teekay Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TKAT",
    "name": "Takung Art Co., Ltd.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "TKC",
    "name": "Turkcell Iletisim Hizmetleri AS",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TKKS",
    "name": "TKK Symphony Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TKKSR",
    "name": "TKK Symphony Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TKKSU",
    "name": "TKK Symphony Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TKKSW",
    "name": "TKK Symphony Acquisition Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TKR",
    "name": "Timken Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TLC",
    "name": "Taiwan Liposome Company, Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TLF",
    "name": "Tandy Leather Factory, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TLGT",
    "name": "Teligent, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TLI",
    "name": "Western Asset Corporate Loan Fund Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TLK",
    "name": "PT Telekomunikasi Indonesia, Tbk",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TLND",
    "name": "Talend S.A.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TLP",
    "name": "TransMontaigne Partners L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TLRA",
    "name": "Telaria, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TLRD",
    "name": "Tailored Brands, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TLRY",
    "name": "Tilray, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TLSA",
    "name": "Tiziana Life Sciences plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TLT",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TLYS",
    "name": "Tilly&#39;s, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TM",
    "name": "Toyota Motor Corp Ltd Ord",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TMCX",
    "name": "Trinity Merger Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TMCXU",
    "name": "Trinity Merger Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TMCXW",
    "name": "Trinity Merger Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TMDI",
    "name": "Titan Medical Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TMHC",
    "name": "Taylor Morrison Home Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TMK",
    "name": "Torchmark Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TMK^C",
    "name": "Torchmark Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TMO",
    "name": "Thermo Fisher Scientific Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TMP",
    "name": "Tompkins Financial Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "TMQ",
    "name": "Trilogy Metals Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "TMSR",
    "name": "TMSR Holding Company Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TMST",
    "name": "TimkenSteel Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TMUS",
    "name": "T-Mobile US, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TNAV",
    "name": "Telenav, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TNC",
    "name": "Tennant Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TNDM",
    "name": "Tandem Diabetes Care, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TNET",
    "name": "TriNet Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TNK",
    "name": "Teekay Tankers Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TNP",
    "name": "Tsakos Energy Navigation Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TNP^B",
    "name": "Tsakos Energy Navigation Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TNP^C",
    "name": "Tsakos Energy Navigation Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TNP^D",
    "name": "Tsakos Energy Navigation Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TNP^E",
    "name": "Tsakos Energy Navigation Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TNP^F",
    "name": "Tsakos Energy Navigation Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TNXP",
    "name": "Tonix Pharmaceuticals Holding Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TOCA",
    "name": "Tocagen Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TOL",
    "name": "Toll Brothers, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TOO",
    "name": "Teekay Offshore Partners L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TOO^A",
    "name": "Teekay Offshore Partners L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TOO^B",
    "name": "Teekay Offshore Partners L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TOO^E",
    "name": "Teekay Offshore Partners L.P.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TOPS",
    "name": "TOP Ships Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TORC",
    "name": "resTORbio, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TOT",
    "name": "Total S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TOTA",
    "name": "Tottenham Acquisition I Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TOTAR",
    "name": "Tottenham Acquisition I Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TOTAU",
    "name": "Tottenham Acquisition I Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TOTAW",
    "name": "Tottenham Acquisition I Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TOUR",
    "name": "Tuniu Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TOWN",
    "name": "Towne Bank",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TOWR",
    "name": "Tower International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TPB",
    "name": "Turning Point Brands, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TPC",
    "name": "Tutor Perini Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TPCO",
    "name": "Tribune Publishing Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TPGH",
    "name": "TPG Pace Holdings Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TPGH.U",
    "name": "TPG Pace Holdings Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TPGH.WS",
    "name": "TPG Pace Holdings Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TPH",
    "name": "TRI Pointe Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TPHS",
    "name": "Trinity Place Holdings Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "TPIC",
    "name": "TPI Composites, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TPL",
    "name": "Texas Pacific Land Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TPNL",
    "name": "3PEA International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TPR",
    "name": "Tapestry, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TPRE",
    "name": "Third Point Reinsurance Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TPVG",
    "name": "TriplePoint Venture Growth BDC Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TPVY",
    "name": "TriplePoint Venture Growth BDC Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TPX",
    "name": "Tempur Sealy International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TPZ",
    "name": "Tortoise Power and Energy Infrastructure Fund, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TQQQ",
    "name": "ProShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TR",
    "name": "Tootsie Roll Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TRC",
    "name": "Tejon Ranch Co",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TRCB",
    "name": "Two River Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TRCH",
    "name": "Torchlight Energy Resources, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TRCO",
    "name": "Tribune Media Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TREC",
    "name": "Trecora Resources",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TREE",
    "name": "LendingTree, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TREX",
    "name": "Trex Company, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TRGP",
    "name": "Targa Resources, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TRHC",
    "name": "Tabula Rasa HealthCare, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TRI",
    "name": "Thomson Reuters Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TRIB",
    "name": "Trinity Biotech plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TRIL",
    "name": "Trillium Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TRIP",
    "name": "TripAdvisor, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TRK",
    "name": "Speedway Motorsports, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TRMB",
    "name": "Trimble Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TRMD",
    "name": "TORM plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TRMK",
    "name": "Trustmark Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TRMT",
    "name": "Tremont Mortgage Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TRN",
    "name": "Trinity Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TRNO",
    "name": "Terreno Realty Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TRNS",
    "name": "Transcat, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TROV",
    "name": "TrovaGene, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TROW",
    "name": "T. Rowe Price Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TROX",
    "name": "Tronox Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TRP",
    "name": "TransCanada Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TRPX",
    "name": "Therapix Biosciences Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TRQ",
    "name": "Turquoise Hill Resources Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TRS",
    "name": "TriMas Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TRST",
    "name": "TrustCo Bank Corp NY",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TRT",
    "name": "Trio-Tech International",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "TRTN",
    "name": "Triton International Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TRTX",
    "name": "TPG RE Finance Trust, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TRU",
    "name": "TransUnion",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TRUE",
    "name": "TrueCar, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TRUP",
    "name": "Trupanion, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TRV",
    "name": "The Travelers Companies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TRVG",
    "name": "trivago N.V.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TRVN",
    "name": "Trevena, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TRX",
    "name": "Tanzanian Royalty Exploration Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "TRXC",
    "name": "TransEnterix, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "TS",
    "name": "Tenaris S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TSBK",
    "name": "Timberland Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TSC",
    "name": "TriState Capital Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TSCAP",
    "name": "TriState Capital Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TSCO",
    "name": "Tractor Supply Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TSE",
    "name": "Trinseo S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TSEM",
    "name": "Tower Semiconductor Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TSG",
    "name": "The Stars Group Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TSI",
    "name": "TCW Strategic Income Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TSLA",
    "name": "Tesla, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TSLF",
    "name": "THL Credit Senior Loan Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TSLX",
    "name": "TPG Specialty Lending, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TSM",
    "name": "Taiwan Semiconductor Manufacturing Company Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TSN",
    "name": "Tyson Foods, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TSQ",
    "name": "Townsquare Media, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TSRI",
    "name": "TSR, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TSRO",
    "name": "TESARO, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TSS",
    "name": "Total System Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TST",
    "name": "TheStreet, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TSU",
    "name": "TIM Participacoes S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TTC",
    "name": "Toro Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TTD",
    "name": "The Trade Desk, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TTEC",
    "name": "TTEC Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TTEK",
    "name": "Tetra Tech, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TTGT",
    "name": "TechTarget, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TTI",
    "name": "Tetra Technologies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TTM",
    "name": "Tata Motors Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TTMI",
    "name": "TTM Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TTNP",
    "name": "Titan Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TTOO",
    "name": "T2 Biosystems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TTP",
    "name": "Tortoise Pipeline & Energy Fund, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TTPH",
    "name": "Tetraphase Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TTS",
    "name": "Tile Shop Hldgs, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TTTN",
    "name": "TigerShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TTWO",
    "name": "Take-Two Interactive Software, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TU",
    "name": "TELUS Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TUES",
    "name": "Tuesday Morning Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TUP",
    "name": "Tupperware Brands Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TUR",
    "name": "iShares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TURN",
    "name": "180 Degree Capital Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TUSA",
    "name": "First Trust Exchange-Traded Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TUSK",
    "name": "Mammoth Energy Services, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TV",
    "name": "Grupo Televisa S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TVC",
    "name": "Tennessee Valley Authority",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TVE",
    "name": "Tennessee Valley Authority",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TVIX",
    "name": "Credit Suisse AG",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TVPT",
    "name": "Travelport Worldwide Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TVTY",
    "name": "Tivity Health, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TWI",
    "name": "Titan International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TWIN",
    "name": "Twin Disc, Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TWLO",
    "name": "Twilio Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TWLV",
    "name": "Twelve Seas Investment Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TWLVR",
    "name": "Twelve Seas Investment Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TWLVU",
    "name": "Twelve Seas Investment Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TWLVW",
    "name": "Twelve Seas Investment Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TWMC",
    "name": "Trans World Entertainment Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TWN",
    "name": "Taiwan Fund, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TWNK",
    "name": "Hostess Brands, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TWNKW",
    "name": "Hostess Brands, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TWO",
    "name": "Two Harbors Investments Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TWO^A",
    "name": "Two Harbors Investments Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TWO^B",
    "name": "Two Harbors Investments Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TWO^C",
    "name": "Two Harbors Investments Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TWO^D",
    "name": "Two Harbors Investments Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TWO^E",
    "name": "Two Harbors Investments Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TWOU",
    "name": "2U, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TWST",
    "name": "Twist Bioscience Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TWTR",
    "name": "Twitter, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TX",
    "name": "Ternium S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TXMD",
    "name": "TherapeuticsMD, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TXN",
    "name": "Texas Instruments Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TXRH",
    "name": "Texas Roadhouse, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TXT",
    "name": "Textron Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TY",
    "name": "Tri Continental Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TY^",
    "name": "Tri Continental Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TYG",
    "name": "Tortoise Energy Infrastructure Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TYHT",
    "name": "Shineco, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TYL",
    "name": "Tyler Technologies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "TYME",
    "name": "Tyme Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TYPE",
    "name": "Monotype Imaging Holdings Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TZAC",
    "name": "Tenzing Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TZACU",
    "name": "Tenzing Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TZACW",
    "name": "Tenzing Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "TZOO",
    "name": "Travelzoo",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UA",
    "name": "Under Armour, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UAA",
    "name": "Under Armour, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UAE",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UAL",
    "name": "United Continental Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UAMY",
    "name": "United States Antimony Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "UAN",
    "name": "CVR Partners, LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UAVS",
    "name": "AgEagle Aerial Systems, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "UBA",
    "name": "Urstadt Biddle Properties Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UBCP",
    "name": "United Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UBFO",
    "name": "United Security Bancshares",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UBIO",
    "name": "ProShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UBNK",
    "name": "United Financial Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UBNT",
    "name": "Ubiquiti Networks, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UBOH",
    "name": "United Bancshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UBP",
    "name": "Urstadt Biddle Properties Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UBP^G",
    "name": "Urstadt Biddle Properties Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UBP^H",
    "name": "Urstadt Biddle Properties Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UBS",
    "name": "UBS AG",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UBSH",
    "name": "Union Bankshares Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UBSI",
    "name": "United Bankshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UBX",
    "name": "Unity Biotechnology, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UCBI",
    "name": "United Community Banks, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UCFC",
    "name": "United Community Financial Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UCTT",
    "name": "Ultra Clean Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UDBI",
    "name": "Legg Mason ETF Investment Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UDR",
    "name": "UDR, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UE",
    "name": "Urban Edge Properties",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UEC",
    "name": "Uranium Energy Corp.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "UEIC",
    "name": "Universal Electronics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UEPS",
    "name": "Net 1 UEPS Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UFAB",
    "name": "Unique Fabricating, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "UFCS",
    "name": "United Fire Group, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UFI",
    "name": "Unifi, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UFPI",
    "name": "Universal Forest Products, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UFPT",
    "name": "UFP Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UFS",
    "name": "Domtar Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UG",
    "name": "United-Guardian, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UGI",
    "name": "UGI Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UGLD",
    "name": "Credit Suisse AG",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UGP",
    "name": "Ultrapar Participacoes S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UHAL",
    "name": "Amerco",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UHS",
    "name": "Universal Health Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UHT",
    "name": "Universal Health Realty Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UIHC",
    "name": "United Insurance Holdings Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UIS",
    "name": "Unisys Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UL",
    "name": "Unilever PLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ULBI",
    "name": "Ultralife Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ULH",
    "name": "Universal Logistics Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ULTA",
    "name": "Ulta Beauty, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ULTI",
    "name": "The Ultimate Software Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UMBF",
    "name": "UMB Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UMC",
    "name": "United Microelectronics Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UMH",
    "name": "UMH Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UMH^B",
    "name": "UMH Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UMH^C",
    "name": "UMH Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UMH^D",
    "name": "UMH Properties, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UMPQ",
    "name": "Umpqua Holdings Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UMRX",
    "name": "Unum Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UN",
    "name": "Unilever NV",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UNAM",
    "name": "Unico American Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UNB",
    "name": "Union Bankshares, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UNF",
    "name": "Unifirst Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UNFI",
    "name": "United Natural Foods, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UNH",
    "name": "UnitedHealth Group Incorporated",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UNIT",
    "name": "Uniti Group Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UNM",
    "name": "Unum Group",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UNMA",
    "name": "Unum Group",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UNP",
    "name": "Union Pacific Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UNT",
    "name": "Unit Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UNTY",
    "name": "Unity Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UNVR",
    "name": "Univar Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UONE",
    "name": "Urban One, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UONEK",
    "name": "Urban One, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UPL",
    "name": "Ultra Petroleum Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UPLD",
    "name": "Upland Software, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UPS",
    "name": "United Parcel Service, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UPWK",
    "name": "Upwork Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UQM",
    "name": "UQM Technologies Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "URBN",
    "name": "Urban Outfitters, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "URG",
    "name": "Ur Energy Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "URGN",
    "name": "UroGen Pharma Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "URI",
    "name": "United Rentals, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UROV",
    "name": "Urovant Sciences Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "USA",
    "name": "Liberty All-Star Equity Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "USAC",
    "name": "USA Compression Partners, LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "USAK",
    "name": "USA Truck, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "USAP",
    "name": "Universal Stainless & Alloy Products, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "USAS",
    "name": "Americas Silver Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "USAT",
    "name": "USA Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "USATP",
    "name": "USA Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "USAU",
    "name": "U.S. Gold Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "USB",
    "name": "U.S. Bancorp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "USB^A",
    "name": "U.S. Bancorp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "USB^H",
    "name": "U.S. Bancorp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "USB^M",
    "name": "U.S. Bancorp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "USB^O",
    "name": "U.S. Bancorp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "USB^P",
    "name": "U.S. Bancorp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "USCR",
    "name": "U S Concrete, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "USDP",
    "name": "USD Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "USEG",
    "name": "U.S. Energy Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "USFD",
    "name": "US Foods Holding Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "USG",
    "name": "USG Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "USIG",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "USLB",
    "name": "Invesco Exchange-Traded Fund Trust II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "USLM",
    "name": "United States Lime & Minerals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "USLV",
    "name": "Credit Suisse AG",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "USM",
    "name": "United States Cellular Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "USMC",
    "name": "Principal Exchange-Traded Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "USNA",
    "name": "USANA Health Sciences, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "USOI",
    "name": "Credit Suisse AG",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "USPH",
    "name": "U.S. Physical Therapy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "USWS",
    "name": "U.S. Well Services, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "USWSW",
    "name": "U.S. Well Services, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "USX",
    "name": "U.S. Xpress Enterprises, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UTF",
    "name": "Cohen & Steers Infrastructure Fund, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UTG",
    "name": "Reaves Utility Income Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "UTHR",
    "name": "United Therapeutics Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UTI",
    "name": "Universal Technical Institute Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UTL",
    "name": "UNITIL Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UTMD",
    "name": "Utah Medical Products, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UTSI",
    "name": "UTStarcom Holdings Corp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UTX",
    "name": "United Technologies Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UUU",
    "name": "Universal Security Instruments, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "UUUU",
    "name": "Energy Fuels Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "UUUU.WS",
    "name": "Energy Fuels Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "UVE",
    "name": "UNIVERSAL INSURANCE HOLDINGS INC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UVSP",
    "name": "Univest Corporation of Pennsylvania",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UVV",
    "name": "Universal Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UWN",
    "name": "Nevada Gold & Casinos, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "UXIN",
    "name": "Uxin Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "UZA",
    "name": "United States Cellular Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UZB",
    "name": "United States Cellular Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "UZC",
    "name": "United States Cellular Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "V",
    "name": "Visa Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VAC",
    "name": "Marriot Vacations Worldwide Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VALE",
    "name": "VALE S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VALU",
    "name": "Value Line, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VALX",
    "name": "ETF Series Solutions",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VAM",
    "name": "The Vivaldi Opportunities Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VAPO",
    "name": "Vapotherm, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VAR",
    "name": "Varian Medical Systems, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VBF",
    "name": "Invesco Bond Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VBFC",
    "name": "Village Bank and Trust Financial Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VBIV",
    "name": "VBI Vaccines, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VBLT",
    "name": "Vascular Biogenics Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VBND",
    "name": "ETF Series Solutions Trust Vident Core U.S. Bond Strategy Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VBTX",
    "name": "Veritex Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VC",
    "name": "Visteon Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VCEL",
    "name": "Vericel Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VCF",
    "name": "Delaware Investments Colorado Municipal Income Fund, Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "VCIT",
    "name": "Vanguard Scottsdale Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VCLT",
    "name": "Vanguard Scottsdale Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VCNX",
    "name": "Vaccinex, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VCRA",
    "name": "Vocera Communications, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VCSH",
    "name": "Vanguard Scottsdale Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VCTR",
    "name": "Victory Capital Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VCV",
    "name": "Invesco California Value Municipal Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VCYT",
    "name": "Veracyte, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VEAC",
    "name": "Vantage Energy Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VEACU",
    "name": "Vantage Energy Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VEACW",
    "name": "Vantage Energy Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VEC",
    "name": "Vectrus, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VECO",
    "name": "Veeco Instruments Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VEDL",
    "name": "Vedanta  Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VEEV",
    "name": "Veeva Systems Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VEON",
    "name": "VEON Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VER",
    "name": "VEREIT Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VER^F",
    "name": "VEREIT Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VERI",
    "name": "Veritone, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VERU",
    "name": "Veru Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VET",
    "name": "Vermilion Energy Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VETS",
    "name": "Pacer Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VFC",
    "name": "V.F. Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VFL",
    "name": "Delaware Investments Florida Insured Municipal Income Fund",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "VG",
    "name": "Vonage Holdings Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VGI",
    "name": "Virtus Global Multi-Sector Income Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VGIT",
    "name": "Vanguard Scottsdale Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VGLT",
    "name": "Vanguard Scottsdale Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VGM",
    "name": "Invesco Trust for Investment Grade Municipals",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VGR",
    "name": "Vector Group Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VGSH",
    "name": "Vanguard Scottsdale Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VGZ",
    "name": "Vista Gold Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "VHC",
    "name": "VirnetX Holding Corp",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "VHI",
    "name": "Valhi, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VIA",
    "name": "Viacom Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VIAB",
    "name": "Viacom Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VIAV",
    "name": "Viavi Solutions Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VICI",
    "name": "VICI Properties Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VICL",
    "name": "Vical Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VICR",
    "name": "Vicor Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VIDI",
    "name": "ETF Series Solutions Trust Vident International Equity Fund",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VIGI",
    "name": "Vanguard Whitehall Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VIIX",
    "name": "Credit Suisse AG",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VIOT",
    "name": "Viomi Technology Co., Ltd",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VIPS",
    "name": "Vipshop Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VIRC",
    "name": "Virco Manufacturing Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VIRT",
    "name": "Virtu Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VISI",
    "name": "Volt Information Sciences, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "VIV",
    "name": "Telefonica Brasil S.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VIVE",
    "name": "Viveve Medical, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VIVO",
    "name": "Meridian Bioscience Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VJET",
    "name": "voxeljet AG",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VKI",
    "name": "Invesco Advantage Municipal Income Trust II",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "VKQ",
    "name": "Invesco Municipal Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VKTX",
    "name": "Viking Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VKTXW",
    "name": "Viking Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VLGEA",
    "name": "Village Super Market, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VLO",
    "name": "Valero Energy Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VLP",
    "name": "Valero Energy Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VLRS",
    "name": "Controladora Vuela Compania de Aviacion, S.A.B. de C.V.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VLRX",
    "name": "Valeritas Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VLT",
    "name": "Invesco High Income Trust II",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VLY",
    "name": "Valley National Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VLYPO",
    "name": "Valley National Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VLYPP",
    "name": "Valley National Bancorp",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VMBS",
    "name": "Vanguard Scottsdale Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VMC",
    "name": "Vulcan Materials Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VMI",
    "name": "Valmont Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VMM",
    "name": "Delaware Investments Minnesota Municipal Income Fund II, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "VMO",
    "name": "Invesco Municipal Opportunity Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VMW",
    "name": "Vmware, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VNCE",
    "name": "Vince Holding Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VNDA",
    "name": "Vanda Pharmaceuticals Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VNE",
    "name": "Veoneer, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VNET",
    "name": "21Vianet Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VNO",
    "name": "Vornado Realty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VNO^K",
    "name": "Vornado Realty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VNO^L",
    "name": "Vornado Realty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VNOM",
    "name": "Viper Energy Partners LP",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VNO^M",
    "name": "Vornado Realty Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VNQI",
    "name": "Vanguard International Equity Index Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VNRX",
    "name": "VolitionRX Limited",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "VNTR",
    "name": "Venator Materials PLC",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VOC",
    "name": "VOC Energy Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VOD",
    "name": "Vodafone Group Plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VONE",
    "name": "Vanguard Scottsdale Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VONG",
    "name": "Vanguard Scottsdale Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VONV",
    "name": "Vanguard Scottsdale Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VOXX",
    "name": "VOXX International Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VOYA",
    "name": "Voya Financial, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VPG",
    "name": "Vishay Precision Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VPV",
    "name": "Invesco Pennsylvania Value Municipal Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VRA",
    "name": "Vera Bradley, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VRAY",
    "name": "ViewRay, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VRCA",
    "name": "Verrica Pharmaceuticals Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VREX",
    "name": "Varex Imaging Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VRIG",
    "name": "Invesco Actively Managed Exchange-Traded Fund Trus",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VRML",
    "name": "Vermillion, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VRNA",
    "name": "Verona Pharma plc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VRNS",
    "name": "Varonis Systems, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VRNT",
    "name": "Verint Systems Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VRRM",
    "name": "Verra Mobility Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VRRMW",
    "name": "Verra Mobility Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VRS",
    "name": "Verso Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VRSK",
    "name": "Verisk Analytics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VRSN",
    "name": "VeriSign, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VRTS",
    "name": "Virtus Investment Partners, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VRTSP",
    "name": "Virtus Investment Partners, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VRTU",
    "name": "Virtusa Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VRTV",
    "name": "Veritiv Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VRTX",
    "name": "Vertex Pharmaceuticals Incorporated",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VSAT",
    "name": "ViaSat, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VSDA",
    "name": "Victory Portfolios II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VSEC",
    "name": "VSE Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VSH",
    "name": "Vishay Intertechnology, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VSI",
    "name": "Vitamin Shoppe, Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VSLR",
    "name": "Vivint Solar, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VSM",
    "name": "Versum Materials, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VSMV",
    "name": "Victory Portfolios II",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VST",
    "name": "Vistra Energy Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VSTM",
    "name": "Verastem, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VSTO",
    "name": "Vista Outdoor Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VST.WS.A",
    "name": "Vistra Energy Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VTA",
    "name": "Invesco Credit Opportunities Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VTC",
    "name": "Vanguard Scottsdale Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VTGN",
    "name": "VistaGen Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VTHR",
    "name": "Vanguard Scottsdale Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VTIP",
    "name": "Vanguard Malvern Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VTIQ",
    "name": "VectoIQ Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VTIQU",
    "name": "VectoIQ Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VTIQW",
    "name": "VectoIQ Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VTL",
    "name": "Vital Therapies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VTN",
    "name": "Invesco Trust  for Investment Grade New York Municipal",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VTNR",
    "name": "Vertex Energy, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VTR",
    "name": "Ventas, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VTRB",
    "name": "Ventas Realty, Limited Partnership // Ventas Capital Corporati",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VTSI",
    "name": "VirTra, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VTVT",
    "name": "vTv Therapeutics Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VTWG",
    "name": "Vanguard Scottsdale Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VTWO",
    "name": "Vanguard Scottsdale Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VTWV",
    "name": "Vanguard Scottsdale Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VUSE",
    "name": "ETF Series Solutions Trust Vident Core US Equity ETF",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VUZI",
    "name": "Vuzix Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VVC",
    "name": "Vectren Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VVI",
    "name": "Viad Corp",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VVPR",
    "name": "VivoPower International PLC",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VVR",
    "name": "Invesco Senior Income Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VVUS",
    "name": "VIVUS, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VVV",
    "name": "Valvoline Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VWOB",
    "name": "Vanguard Whitehall Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VXRT",
    "name": "Vaxart, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VXUS",
    "name": "Vanguard STAR Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VYGR",
    "name": "Voyager Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VYMI",
    "name": "Vanguard Whitehall Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "VZ",
    "name": "Verizon Communications Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "VZA",
    "name": "Verizon Communications Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "W",
    "name": "Wayfair Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WAAS",
    "name": "AquaVenture Holdings Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WAB",
    "name": "Westinghouse Air Brake Technologies Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WABC",
    "name": "Westamerica Bancorporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WAFD",
    "name": "Washington Federal, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WAGE",
    "name": "WageWorks, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WAIR",
    "name": "Wesco Aircraft Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WAL",
    "name": "Western Alliance Bancorporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WALA",
    "name": "Western Alliance Bancorporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WASH",
    "name": "Washington Trust Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WAT",
    "name": "Waters Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WATT",
    "name": "Energous Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WB",
    "name": "Weibo Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WBA",
    "name": "Walgreens Boots Alliance, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WBAI",
    "name": "500.com Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WBC",
    "name": "Wabco Holdings Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WBK",
    "name": "Westpac Banking Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WBND",
    "name": "Legg Mason ETF Investment Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WBS",
    "name": "Webster Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WBS^F",
    "name": "Webster Financial Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WBT",
    "name": "Welbilt, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WCC",
    "name": "WESCO International, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WCFB",
    "name": "WCF Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WCG",
    "name": "WellCare Health Plans, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WCN",
    "name": "Waste Connections, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WD",
    "name": "Walker & Dunlop, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WDAY",
    "name": "Workday, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WDC",
    "name": "Western Digital Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WDFC",
    "name": "WD-40 Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WDR",
    "name": "Waddell & Reed Financial, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WEA",
    "name": "Western Asset Bond Fund",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WEBK",
    "name": "Wellesley Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WEC",
    "name": "WEC Energy Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WEI",
    "name": "Weidai Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WELL",
    "name": "Welltower Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WELL^I",
    "name": "Welltower Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WEN",
    "name": "Wendy&#39;s Company (The)",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WERN",
    "name": "Werner Enterprises, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WES",
    "name": "Western Gas Partners, LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WETF",
    "name": "WisdomTree Investments, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WEX",
    "name": "WEX Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WEYS",
    "name": "Weyco Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WF",
    "name": "Woori Bank",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WFC",
    "name": "Wells Fargo & Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WFC^L",
    "name": "Wells Fargo & Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WFC^N",
    "name": "Wells Fargo & Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WFC^O",
    "name": "Wells Fargo & Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WFC^P",
    "name": "Wells Fargo & Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WFC^Q",
    "name": "Wells Fargo & Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WFC^R",
    "name": "Wells Fargo & Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WFC^T",
    "name": "Wells Fargo & Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WFC^V",
    "name": "Wells Fargo & Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WFC^W",
    "name": "Wells Fargo & Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WFC^X",
    "name": "Wells Fargo & Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WFC^Y",
    "name": "Wells Fargo & Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WFE^A",
    "name": "Wells Fargo & Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WFT",
    "name": "Weatherford International plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WGO",
    "name": "Winnebago Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WGP",
    "name": "Western Gas Equity Partners, LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WH",
    "name": "Wyndham Hotels & Resorts, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WHD",
    "name": "Cactus, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WHF",
    "name": "WhiteHorse Finance, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WHFBZ",
    "name": "WhiteHorse Finance, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WHG",
    "name": "Westwood Holdings Group Inc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WHLM",
    "name": "Wilhelmina International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WHLR",
    "name": "Wheeler Real Estate Investment Trust, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WHLRD",
    "name": "Wheeler Real Estate Investment Trust, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WHLRP",
    "name": "Wheeler Real Estate Investment Trust, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WHLRW",
    "name": "Wheeler Real Estate Investment Trust, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WHR",
    "name": "Whirlpool Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WIA",
    "name": "Western Asset/Claymore U.S. Treasury Inflation Prot Secs Fd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WIFI",
    "name": "Boingo Wireless, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WILC",
    "name": "G. Willi-Food International,  Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WIN",
    "name": "Windstream Holdings, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WINA",
    "name": "Winmark Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WING",
    "name": "Wingstop Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WINS",
    "name": "Wins Finance Holdings Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WIRE",
    "name": "Encore Wire Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WISA",
    "name": "Summit Wireless Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WIT",
    "name": "Wipro Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WIW",
    "name": "Western Asset/Claymore U.S Treasury Inflation Prot Secs Fd 2",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WIX",
    "name": "Wix.com Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WK",
    "name": "Workiva Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WKHS",
    "name": "Workhorse Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WLDN",
    "name": "Willdan Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WLFC",
    "name": "Willis Lease Finance Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WLH",
    "name": "Lyon William Homes",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WLK",
    "name": "Westlake Chemical Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WLKP",
    "name": "Westlake Chemical Partners LP",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WLL",
    "name": "Whiting Petroleum Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WLTW",
    "name": "Willis Towers Watson Public Limited Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WM",
    "name": "Waste Management, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WMB",
    "name": "Williams Companies, Inc. (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WMC",
    "name": "Western Asset Mortgage Capital Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WMGI",
    "name": "Wright Medical Group N.V.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WMGIZ",
    "name": "Wright Medical Group N.V.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WMK",
    "name": "Weis Markets, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WMS",
    "name": "Advanced Drainage Systems, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WMT",
    "name": "Walmart Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WNC",
    "name": "Wabash National Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WNEB",
    "name": "Western New England Bancorp, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WNS",
    "name": "WNS (Holdings) Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WOOD",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WOR",
    "name": "Worthington Industries, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WOW",
    "name": "WideOpenWest, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WP",
    "name": "Worldpay, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WPC",
    "name": "W.P. Carey Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WPG",
    "name": "Washington Prime Group Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WPG^H",
    "name": "Washington Prime Group Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WPG^I",
    "name": "Washington Prime Group Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WPM",
    "name": "Wheaton Precious Metals Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WPP",
    "name": "WPP plc",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WPRT",
    "name": "Westport Fuel Systems Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WPX",
    "name": "WPX Energy, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WRB",
    "name": "W.R. Berkley Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WRB^B",
    "name": "W.R. Berkley Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WRB^C",
    "name": "W.R. Berkley Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WRB^D",
    "name": "W.R. Berkley Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WRB^E",
    "name": "W.R. Berkley Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WRD",
    "name": "WildHorse Resource Development Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WRE",
    "name": "Washington Real Estate Investment Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WRI",
    "name": "Weingarten Realty Investors",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WRK",
    "name": "Westrock Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WRLD",
    "name": "World Acceptance Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WRLS",
    "name": "Pensare Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WRLSR",
    "name": "Pensare Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WRLSU",
    "name": "Pensare Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WRLSW",
    "name": "Pensare Acquisition Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WRN",
    "name": "Western Copper and Gold Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "WSBC",
    "name": "WesBanco, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WSBF",
    "name": "Waterstone Financial, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WSC",
    "name": "WillScot Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WSFS",
    "name": "WSFS Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WSM",
    "name": "Williams-Sonoma, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WSO",
    "name": "Watsco, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WSO.B",
    "name": "Watsco, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WSR",
    "name": "Whitestone REIT",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WST",
    "name": "West Pharmaceutical Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WSTG",
    "name": "Wayside Technology Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WSTL",
    "name": "Westell Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WTBA",
    "name": "West Bancorporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WTFC",
    "name": "Wintrust Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WTFCM",
    "name": "Wintrust Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WTFCW",
    "name": "Wintrust Financial Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WTI",
    "name": "W&T Offshore, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WTM",
    "name": "White Mountains Insurance Group, Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WTR",
    "name": "Aqua America, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WTRH",
    "name": "Waitr Holdings Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WTRHW",
    "name": "Waitr Holdings Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WTS",
    "name": "Watts Water Technologies, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WTT",
    "name": "Wireless Telecom Group,  Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "WTTR",
    "name": "Select Energy Services, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WTW",
    "name": "Weight Watchers International Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WU",
    "name": "Western Union Company (The)",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WUBA",
    "name": "58.com Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WVE",
    "name": "WAVE Life Sciences Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WVFC",
    "name": "WVS Financial Corp.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WVVI",
    "name": "Willamette Valley Vineyards, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WVVIP",
    "name": "Willamette Valley Vineyards, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WWD",
    "name": "Woodward, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WWE",
    "name": "World Wrestling Entertainment, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WWR",
    "name": "Westwater Resources, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WWW",
    "name": "Wolverine World Wide, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WY",
    "name": "Weyerhaeuser Company",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WYND",
    "name": "Wyndham Destinations, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "WYNN",
    "name": "Wynn Resorts, Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "WYY",
    "name": "WidePoint Corporation",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "X",
    "name": "United States Steel Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "XAN",
    "name": "Exantas Capital Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "XAN^C",
    "name": "Exantas Capital Corp.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "XBIO",
    "name": "Xenetic Biosciences, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XBIT",
    "name": "XBiotech Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XEC",
    "name": "Cimarex Energy Co",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "XEL",
    "name": "Xcel Energy Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XELA",
    "name": "Exela Technologies, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XELB",
    "name": "Xcel Brands, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XENE",
    "name": "Xenon Pharmaceuticals Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XENT",
    "name": "Intersect ENT, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XERS",
    "name": "Xeris Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XFLT",
    "name": "XAI Octagon Floating Rate & Alternative Income Term Trust",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "XGTI",
    "name": "XG Technology, Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XHR",
    "name": "Xenia Hotels & Resorts, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "XIN",
    "name": "Xinyuan Real Estate Co Ltd",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "XLNX",
    "name": "Xilinx, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XLRN",
    "name": "Acceleron Pharma Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XNCR",
    "name": "Xencor, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XNET",
    "name": "Xunlei Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XOG",
    "name": "Extraction Oil & Gas, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XOM",
    "name": "Exxon Mobil Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "XOMA",
    "name": "XOMA Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XON",
    "name": "Intrexon Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XONE",
    "name": "The ExOne Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XOXO",
    "name": "XO Group, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "XPER",
    "name": "Xperi Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XPL",
    "name": "Solitario Zinc Corp.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "XPO",
    "name": "XPO Logistics, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "XRAY",
    "name": "DENTSPLY SIRONA Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XRF",
    "name": "China Rapid Finance Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "XRX",
    "name": "Xerox Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "XSPA",
    "name": "XpresSpa Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XT",
    "name": "iShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XTLB",
    "name": "XTL Biopharmaceuticals Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "XTNT",
    "name": "Xtant Medical Holdings, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "XXII",
    "name": "22nd Century Group, Inc",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "XYF",
    "name": "X Financial",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "XYL",
    "name": "Xylem Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "Y",
    "name": "Alleghany Corporation",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "YECO",
    "name": "Yulong Eco-Materials Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "YELP",
    "name": "Yelp Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "YETI",
    "name": "YETI Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "YEXT",
    "name": "Yext, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "YGYI",
    "name": "Youngevity International, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "YI",
    "name": "111, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "YIN",
    "name": "Yintech Investment Holdings Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "YLCO",
    "name": "Global X Funds",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "YLDE",
    "name": "Legg Mason ETF Investment Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "YMAB",
    "name": "Y-mAbs Therapeutics, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "YNDX",
    "name": "Yandex N.V.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "YOGA",
    "name": "YogaWorks, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "YORW",
    "name": "The York Water Company",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "YPF",
    "name": "YPF Sociedad Anonima",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "YRCW",
    "name": "YRC Worldwide, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "YRD",
    "name": "Yirendai Ltd.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "YRIV",
    "name": "Yangtze River Port and Logistics Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "YTEN",
    "name": "Yield10 Bioscience, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "YTRA",
    "name": "Yatra Online, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "YUM",
    "name": "Yum! Brands, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "YUMA",
    "name": "Yuma Energy, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "YUMC",
    "name": "Yum China Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "YVR",
    "name": "Liquid Media Group Ltd.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "YY",
    "name": "YY Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "Z",
    "name": "Zillow Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZAGG",
    "name": "ZAGG Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZAYO",
    "name": "Zayo Group Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ZB^A",
    "name": "Zions Bancorporation N.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ZB^G",
    "name": "Zions Bancorporation N.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ZBH",
    "name": "Zimmer Biomet Holdings, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ZB^H",
    "name": "Zions Bancorporation N.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ZBIO",
    "name": "ProShares Trust",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZBK",
    "name": "Zions Bancorporation N.A.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ZBRA",
    "name": "Zebra Technologies Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZDGE",
    "name": "Zedge, Inc.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ZEAL",
    "name": "Zealand Pharma A/S",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZEN",
    "name": "Zendesk, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ZEUS",
    "name": "Olympic Steel, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZF",
    "name": "Virtus Total Return Fund Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ZFGN",
    "name": "Zafgen, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZG",
    "name": "Zillow Group, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZGNX",
    "name": "Zogenix, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZION",
    "name": "Zions Bancorporation N.A.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZIONW",
    "name": "Zions Bancorporation N.A.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZIOP",
    "name": "ZIOPHARM Oncology Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZIV",
    "name": "Credit Suisse AG",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZIXI",
    "name": "Zix Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZKIN",
    "name": "ZK International Group Co., Ltd",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZLAB",
    "name": "Zai Lab Limited",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZN",
    "name": "Zion Oil & Gas Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZNGA",
    "name": "Zynga Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZNH",
    "name": "China Southern Airlines Company Limited",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ZNWAA",
    "name": "Zion Oil & Gas Inc",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZOM",
    "name": "Zomedica Pharmaceuticals Corp.",
    "is_etf": null,
    "exchange": "AMEX"
  },
  {
    "abbr": "ZS",
    "name": "Zscaler, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZSAN",
    "name": "Zosano Pharma Corporation",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZTEST",
    "name": "BATS BZX Exchange",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZTO",
    "name": "ZTO Express (Cayman) Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ZTR",
    "name": "Virtus Global Dividend & Income Fund Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ZTS",
    "name": "Zoetis Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ZUMZ",
    "name": "Zumiez Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  },
  {
    "abbr": "ZUO",
    "name": "Zuora, Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ZYME",
    "name": "Zymeworks Inc.",
    "is_etf": null,
    "exchange": "NYSE"
  },
  {
    "abbr": "ZYNE",
    "name": "Zynerba Pharmaceuticals, Inc.",
    "is_etf": null,
    "exchange": "NASDAQ"
  }
]
}).apply(this, arguments);

},{}],3:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("examples/async-data/app.js", module);
(function(){
'use strict';

var _index = require('/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/react-autocomplete/node_modules/redbox-react/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _index3 = require('/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/react-autocomplete/node_modules/react-transform-catch-errors/lib/index.js');

var _index4 = _interopRequireDefault(_index3);

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index5 = require('/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/react-autocomplete/node_modules/react-transform-hmr/lib/index.js');

var _index6 = _interopRequireDefault(_index5);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _index7 = require('../../lib/index');

var _index8 = _interopRequireDefault(_index7);

var _utils = require('../../lib/utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  App: {
    displayName: 'App'
  }
};

var _UsersGordonRubinDocumentsStevensFe595WsMidtermReactAutocompleteNode_modulesReactTransformHmrLibIndexJs2 = (0, _index6.default)({
  filename: '/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/react-autocomplete/examples/async-data/app.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

var _UsersGordonRubinDocumentsStevensFe595WsMidtermReactAutocompleteNode_modulesReactTransformCatchErrorsLibIndexJs2 = (0, _index4.default)({
  filename: '/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/react-autocomplete/examples/async-data/app.js',
  components: _components,
  locals: [],
  imports: [_react3.default, _index2.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _UsersGordonRubinDocumentsStevensFe595WsMidtermReactAutocompleteNode_modulesReactTransformHmrLibIndexJs2(_UsersGordonRubinDocumentsStevensFe595WsMidtermReactAutocompleteNode_modulesReactTransformCatchErrorsLibIndexJs2(Component, id), id);
  };
}

var App = _wrapComponent('App')(function (_React$Component) {
  _inherits(App, _React$Component);

  function App() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, App);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = App.__proto__ || Object.getPrototypeOf(App)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      value: '',
      unitedStates: (0, _utils.getStates)()
    }, _this.requestTimer = null, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(App, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react3.default.createElement(
        'div',
        null,
        _react3.default.createElement(
          'h1',
          null,
          'Stock Look-up'
        ),
        _react3.default.createElement(
          'p',
          null,
          'This is a simple front-end that provides suggestions based on the typed search input. Suggested    securities are listings from common US exchanges (NYSE, NASDAQ, AMEX).'
        ),
        _react3.default.createElement(
          'label',
          { htmlFor: 'states-autocomplete' },
          'Enter a ticker:'
        ),
        _react3.default.createElement(_index8.default, {
          inputProps: { id: 'states-autocomplete' },
          wrapperStyle: { position: 'relative', display: 'inline-block' },
          value: this.state.value,
          items: this.state.unitedStates,
          getItemValue: function getItemValue(item) {
            return item.name;
          },
          onSelect: function onSelect(value, item) {
            // set the menu to only the selected item
            _this2.setState({ value: value, unitedStates: [item] });
            // or you could reset it to a default list again
            // this.setState({ unitedStates: getStates() })
          },
          onChange: function onChange(event, value) {
            console.log("on change event!");
            _this2.setState({ value: value });
            clearTimeout(_this2.requestTimer);
            _this2.requestTimer = (0, _utils.fakeRequest)(value, function (items) {
              _this2.setState({ unitedStates: items });
            });
          },
          renderMenu: function renderMenu(children) {
            return _react3.default.createElement(
              'div',
              { className: 'menu' },
              children
            );
          },
          renderItem: function renderItem(item, isHighlighted) {
            return _react3.default.createElement(
              'div',
              {
                className: 'item ' + (isHighlighted ? 'item-highlighted' : ''),
                key: item.abbr + item.name + item.exchange
              },
              '' + item.abbr + '  ' + item.name + '  ' + item.exchange
            );
          }
        })
      );
    }
  }]);

  return App;
}(_react3.default.Component));

_reactDom2.default.render(_react3.default.createElement(App, null), document.getElementById('container'));

if (module.hot) {
  module.hot.accept();
}

}).apply(this, arguments);

},{"../../lib/index":5,"../../lib/utils":6,"/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/react-autocomplete/node_modules/react-transform-catch-errors/lib/index.js":376,"/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/react-autocomplete/node_modules/react-transform-hmr/lib/index.js":377,"/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/react-autocomplete/node_modules/redbox-react/lib/index.js":404,"react":403,"react-dom":243}],4:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("lib/Autocomplete.js", module);
(function(){
(function (global){
'use strict';

var _index = require('/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/react-autocomplete/node_modules/redbox-react/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _index3 = require('/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/react-autocomplete/node_modules/react-transform-catch-errors/lib/index.js');

var _index4 = _interopRequireDefault(_index3);

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index5 = require('/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/react-autocomplete/node_modules/react-transform-hmr/lib/index.js');

var _index6 = _interopRequireDefault(_index5);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  Autocomplete: {
    displayName: 'Autocomplete'
  }
};

var _UsersGordonRubinDocumentsStevensFe595WsMidtermReactAutocompleteNode_modulesReactTransformHmrLibIndexJs2 = (0, _index6.default)({
  filename: '/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/react-autocomplete/lib/Autocomplete.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

var _UsersGordonRubinDocumentsStevensFe595WsMidtermReactAutocompleteNode_modulesReactTransformCatchErrorsLibIndexJs2 = (0, _index4.default)({
  filename: '/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/react-autocomplete/lib/Autocomplete.js',
  components: _components,
  locals: [],
  imports: [_react3.default, _index2.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _UsersGordonRubinDocumentsStevensFe595WsMidtermReactAutocompleteNode_modulesReactTransformHmrLibIndexJs2(_UsersGordonRubinDocumentsStevensFe595WsMidtermReactAutocompleteNode_modulesReactTransformCatchErrorsLibIndexJs2(Component, id), id);
  };
}

var React = require('react');
var PropTypes = require('prop-types');

var _require = require('react-dom'),
    findDOMNode = _require.findDOMNode;

var scrollIntoView = require('dom-scroll-into-view');

var IMPERATIVE_API = ['blur', 'checkValidity', 'click', 'focus', 'select', 'setCustomValidity', 'setSelectionRange', 'setRangeText'];

function getScrollOffset() {
  return {
    x: window.pageXOffset !== undefined ? window.pageXOffset : (document.documentElement || document.body.parentNode || document.body).scrollLeft,
    y: window.pageYOffset !== undefined ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop
  };
}

var Autocomplete = _wrapComponent('Autocomplete')((_temp = _class = function (_React$Component) {
  _inherits(Autocomplete, _React$Component);

  function Autocomplete(props) {
    _classCallCheck(this, Autocomplete);

    var _this = _possibleConstructorReturn(this, (Autocomplete.__proto__ || Object.getPrototypeOf(Autocomplete)).call(this, props));

    _this.state = {
      isOpen: false,
      highlightedIndex: null
    };
    _this._debugStates = [];
    _this.ensureHighlightedIndex = _this.ensureHighlightedIndex.bind(_this);
    _this.exposeAPI = _this.exposeAPI.bind(_this);
    _this.handleInputFocus = _this.handleInputFocus.bind(_this);
    _this.handleInputBlur = _this.handleInputBlur.bind(_this);
    _this.handleChange = _this.handleChange.bind(_this);
    _this.handleKeyDown = _this.handleKeyDown.bind(_this);
    _this.handleInputClick = _this.handleInputClick.bind(_this);
    _this.maybeAutoCompleteText = _this.maybeAutoCompleteText.bind(_this);
    return _this;
  }

  _createClass(Autocomplete, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      // this.refs is frozen, so we need to assign a new object to it
      this.refs = {};
      this._ignoreBlur = false;
      this._ignoreFocus = false;
      this._scrollOffset = null;
      this._scrollTimer = null;
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this._scrollTimer);
      this._scrollTimer = null;
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.state.highlightedIndex !== null) {
        this.setState(this.ensureHighlightedIndex);
      }
      if (nextProps.autoHighlight && (this.props.value !== nextProps.value || this.state.highlightedIndex === null)) {
        this.setState(this.maybeAutoCompleteText);
      }
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.isOpen()) {
        this.setMenuPositions();
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps, prevState) {
      if (this.state.isOpen && !prevState.isOpen || 'open' in this.props && this.props.open && !prevProps.open) this.setMenuPositions();

      this.maybeScrollItemIntoView();
      if (prevState.isOpen !== this.state.isOpen) {
        this.props.onMenuVisibilityChange(this.state.isOpen);
      }
    }
  }, {
    key: 'exposeAPI',
    value: function exposeAPI(el) {
      var _this2 = this;

      this.refs.input = el;
      IMPERATIVE_API.forEach(function (ev) {
        return _this2[ev] = el && el[ev] && el[ev].bind(el);
      });
    }
  }, {
    key: 'maybeScrollItemIntoView',
    value: function maybeScrollItemIntoView() {
      if (this.isOpen() && this.state.highlightedIndex !== null) {
        var itemNode = this.refs['item-' + this.state.highlightedIndex];
        var menuNode = this.refs.menu;
        scrollIntoView(findDOMNode(itemNode), findDOMNode(menuNode), { onlyScrollIfNeeded: true });
      }
    }
  }, {
    key: 'handleKeyDown',
    value: function handleKeyDown(event) {
      if (Autocomplete.keyDownHandlers[event.key]) Autocomplete.keyDownHandlers[event.key].call(this, event);else if (!this.isOpen()) {
        this.setState({
          isOpen: true
        });
      }
    }
  }, {
    key: 'handleChange',
    value: function handleChange(event) {
      this.props.onChange(event, event.target.value);
    }
  }, {
    key: 'getFilteredItems',
    value: function getFilteredItems(props) {
      var items = props.items;

      if (props.shouldItemRender) {
        items = items.filter(function (item) {
          return props.shouldItemRender(item, props.value);
        });
      }

      if (props.sortItems) {
        items.sort(function (a, b) {
          return props.sortItems(a, b, props.value);
        });
      }

      return items;
    }
  }, {
    key: 'maybeAutoCompleteText',
    value: function maybeAutoCompleteText(state, props) {
      var highlightedIndex = state.highlightedIndex;
      var value = props.value,
          getItemValue = props.getItemValue;

      var index = highlightedIndex === null ? 0 : highlightedIndex;
      var items = this.getFilteredItems(props);
      for (var i = 0; i < items.length; i++) {
        if (props.isItemSelectable(items[index])) break;
        index = (index + 1) % items.length;
      }
      var matchedItem = items[index] && props.isItemSelectable(items[index]) ? items[index] : null;
      if (value !== '' && matchedItem) {
        var itemValue = getItemValue(matchedItem);
        var itemValueDoesMatch = itemValue.toLowerCase().indexOf(value.toLowerCase()) === 0;
        if (itemValueDoesMatch) {
          return { highlightedIndex: index };
        }
      }
      return { highlightedIndex: null };
    }
  }, {
    key: 'ensureHighlightedIndex',
    value: function ensureHighlightedIndex(state, props) {
      if (state.highlightedIndex >= this.getFilteredItems(props).length) {
        return { highlightedIndex: null };
      }
    }
  }, {
    key: 'setMenuPositions',
    value: function setMenuPositions() {
      var node = this.refs.input;
      var rect = node.getBoundingClientRect();
      var computedStyle = global.window.getComputedStyle(node);
      var marginBottom = parseInt(computedStyle.marginBottom, 10) || 0;
      var marginLeft = parseInt(computedStyle.marginLeft, 10) || 0;
      var marginRight = parseInt(computedStyle.marginRight, 10) || 0;
      this.setState({
        menuTop: rect.bottom + marginBottom,
        menuLeft: rect.left + marginLeft,
        menuWidth: rect.width + marginLeft + marginRight
      });
    }
  }, {
    key: 'highlightItemFromMouse',
    value: function highlightItemFromMouse(index) {
      this.setState({ highlightedIndex: index });
    }
  }, {
    key: 'selectItemFromMouse',
    value: function selectItemFromMouse(item) {
      var _this3 = this;

      var value = this.props.getItemValue(item);
      // The menu will de-render before a mouseLeave event
      // happens. Clear the flag to release control over focus
      this.setIgnoreBlur(false);
      this.setState({
        isOpen: false,
        highlightedIndex: null
      }, function () {
        _this3.props.onSelect(value, item);
      });
    }
  }, {
    key: 'setIgnoreBlur',
    value: function setIgnoreBlur(ignore) {
      this._ignoreBlur = ignore;
    }
  }, {
    key: 'renderMenu',
    value: function renderMenu() {
      var _this4 = this;

      var items = this.getFilteredItems(this.props).map(function (item, index) {
        var element = _this4.props.renderItem(item, _this4.state.highlightedIndex === index, { cursor: 'default' });
        return React.cloneElement(element, {
          onMouseEnter: _this4.props.isItemSelectable(item) ? function () {
            return _this4.highlightItemFromMouse(index);
          } : null,
          onClick: _this4.props.isItemSelectable(item) ? function () {
            return _this4.selectItemFromMouse(item);
          } : null,
          ref: function ref(e) {
            return _this4.refs['item-' + index] = e;
          }
        });
      });
      var style = {
        left: this.state.menuLeft,
        top: this.state.menuTop,
        minWidth: this.state.menuWidth
      };
      var menu = this.props.renderMenu(items, this.props.value, style);
      return React.cloneElement(menu, {
        ref: function ref(e) {
          return _this4.refs.menu = e;
        },
        // Ignore blur to prevent menu from de-rendering before we can process click
        onTouchStart: function onTouchStart() {
          return _this4.setIgnoreBlur(true);
        },
        onMouseEnter: function onMouseEnter() {
          return _this4.setIgnoreBlur(true);
        },
        onMouseLeave: function onMouseLeave() {
          return _this4.setIgnoreBlur(false);
        }
      });
    }
  }, {
    key: 'handleInputBlur',
    value: function handleInputBlur(event) {
      var _this5 = this;

      if (this._ignoreBlur) {
        this._ignoreFocus = true;
        this._scrollOffset = getScrollOffset();
        this.refs.input.focus();
        return;
      }
      var setStateCallback = void 0;
      var highlightedIndex = this.state.highlightedIndex;

      if (this.props.selectOnBlur && highlightedIndex !== null) {
        var items = this.getFilteredItems(this.props);
        var item = items[highlightedIndex];
        var value = this.props.getItemValue(item);
        setStateCallback = function setStateCallback() {
          return _this5.props.onSelect(value, item);
        };
      }
      this.setState({
        isOpen: false,
        highlightedIndex: null
      }, setStateCallback);
      var onBlur = this.props.inputProps.onBlur;

      if (onBlur) {
        onBlur(event);
      }
    }
  }, {
    key: 'handleInputFocus',
    value: function handleInputFocus(event) {
      var _this6 = this;

      if (this._ignoreFocus) {
        this._ignoreFocus = false;
        var _scrollOffset = this._scrollOffset,
            x = _scrollOffset.x,
            y = _scrollOffset.y;

        this._scrollOffset = null;
        // Focus will cause the browser to scroll the <input> into view.
        // This can cause the mouse coords to change, which in turn
        // could cause a new highlight to happen, cancelling the click
        // event (when selecting with the mouse)
        window.scrollTo(x, y);
        // Some browsers wait until all focus event handlers have been
        // processed before scrolling the <input> into view, so let's
        // scroll again on the next tick to ensure we're back to where
        // the user was before focus was lost. We could do the deferred
        // scroll only, but that causes a jarring split second jump in
        // some browsers that scroll before the focus event handlers
        // are triggered.
        clearTimeout(this._scrollTimer);
        this._scrollTimer = setTimeout(function () {
          _this6._scrollTimer = null;
          window.scrollTo(x, y);
        }, 0);
        return;
      }
      this.setState({ isOpen: true });
      var onFocus = this.props.inputProps.onFocus;

      if (onFocus) {
        onFocus(event);
      }
    }
  }, {
    key: 'isInputFocused',
    value: function isInputFocused() {
      var el = this.refs.input;
      return el.ownerDocument && el === el.ownerDocument.activeElement;
    }
  }, {
    key: 'handleInputClick',
    value: function handleInputClick() {
      // Input will not be focused if it's disabled
      if (this.isInputFocused() && !this.isOpen()) this.setState({ isOpen: true });
    }
  }, {
    key: 'composeEventHandlers',
    value: function composeEventHandlers(internal, external) {
      return external ? function (e) {
        internal(e);external(e);
      } : internal;
    }
  }, {
    key: 'isOpen',
    value: function isOpen() {
      return 'open' in this.props ? this.props.open : this.state.isOpen;
    }
  }, {
    key: 'render',
    value: function render() {
      if (this.props.debug) {
        // you don't like it, you love it
        this._debugStates.push({
          id: this._debugStates.length,
          state: this.state
        });
      }

      var inputProps = this.props.inputProps;

      var open = this.isOpen();
      return React.createElement(
        'div',
        _extends({ style: _extends({}, this.props.wrapperStyle) }, this.props.wrapperProps),
        this.props.renderInput(_extends({}, inputProps, {
          role: 'combobox',
          'aria-autocomplete': 'list',
          'aria-expanded': open,
          autoComplete: 'off',
          ref: this.exposeAPI,
          onFocus: this.handleInputFocus,
          onBlur: this.handleInputBlur,
          onChange: this.handleChange,
          onKeyDown: this.composeEventHandlers(this.handleKeyDown, inputProps.onKeyDown),
          onClick: this.composeEventHandlers(this.handleInputClick, inputProps.onClick),
          value: this.props.value
        })),
        open && this.renderMenu(),
        this.props.debug && React.createElement(
          'pre',
          { style: { marginLeft: 300 } },
          JSON.stringify(this._debugStates.slice(Math.max(0, this._debugStates.length - 5), this._debugStates.length), null, 2)
        )
      );
    }
  }]);

  return Autocomplete;
}(React.Component), _class.propTypes = {
  /**
   * The items to display in the dropdown menu
   */
  items: PropTypes.array.isRequired,
  /**
   * The value to display in the input field
   */
  value: PropTypes.any,
  /**
   * Arguments: `event: Event, value: String`
   *
   * Invoked every time the user changes the input's value.
   */
  onChange: PropTypes.func,
  /**
   * Arguments: `value: String, item: Any`
   *
   * Invoked when the user selects an item from the dropdown menu.
   */
  onSelect: PropTypes.func,
  /**
   * Arguments: `item: Any, value: String`
   *
   * Invoked for each entry in `items` and its return value is used to
   * determine whether or not it should be displayed in the dropdown menu.
   * By default all items are always rendered.
   */
  shouldItemRender: PropTypes.func,
  /**
   * Arguments: `item: Any`
   *
   * Invoked when attempting to select an item. The return value is used to
   * determine whether the item should be selectable or not.
   * By default all items are selectable.
   */
  isItemSelectable: PropTypes.func,
  /**
   * Arguments: `itemA: Any, itemB: Any, value: String`
   *
   * The function which is used to sort `items` before display.
   */
  sortItems: PropTypes.func,
  /**
   * Arguments: `item: Any`
   *
   * Used to read the display value from each entry in `items`.
   */
  getItemValue: PropTypes.func.isRequired,
  /**
   * Arguments: `item: Any, isHighlighted: Boolean, styles: Object`
   *
   * Invoked for each entry in `items` that also passes `shouldItemRender` to
   * generate the render tree for each item in the dropdown menu. `styles` is
   * an optional set of styles that can be applied to improve the look/feel
   * of the items in the dropdown menu.
   */
  renderItem: PropTypes.func.isRequired,
  /**
   * Arguments: `items: Array<Any>, value: String, styles: Object`
   *
   * Invoked to generate the render tree for the dropdown menu. Ensure the
   * returned tree includes every entry in `items` or else the highlight order
   * and keyboard navigation logic will break. `styles` will contain
   * { top, left, minWidth } which are the coordinates of the top-left corner
   * and the width of the dropdown menu.
   */
  renderMenu: PropTypes.func,
  /**
   * Styles that are applied to the dropdown menu in the default `renderMenu`
   * implementation. If you override `renderMenu` and you want to use
   * `menuStyle` you must manually apply them (`this.props.menuStyle`).
   */
  menuStyle: PropTypes.object,
  /**
   * Arguments: `props: Object`
   *
   * Invoked to generate the input element. The `props` argument is the result
   * of merging `props.inputProps` with a selection of props that are required
   * both for functionality and accessibility. At the very least you need to
   * apply `props.ref` and all `props.on<event>` event handlers. Failing to do
   * this will cause `Autocomplete` to behave unexpectedly.
   */
  renderInput: PropTypes.func,
  /**
   * Props passed to `props.renderInput`. By default these props will be
   * applied to the `<input />` element rendered by `Autocomplete`, unless you
   * have specified a custom value for `props.renderInput`. Any properties
   * supported by `HTMLInputElement` can be specified, apart from the
   * following which are set by `Autocomplete`: value, autoComplete, role,
   * aria-autocomplete. `inputProps` is commonly used for (but not limited to)
   * placeholder, event handlers (onFocus, onBlur, etc.), autoFocus, etc..
   */
  inputProps: PropTypes.object,
  /**
   * Props that are applied to the element which wraps the `<input />` and
   * dropdown menu elements rendered by `Autocomplete`.
   */
  wrapperProps: PropTypes.object,
  /**
   * This is a shorthand for `wrapperProps={{ style: <your styles> }}`.
   * Note that `wrapperStyle` is applied before `wrapperProps`, so the latter
   * will win if it contains a `style` entry.
   */
  wrapperStyle: PropTypes.object,
  /**
   * Whether or not to automatically highlight the top match in the dropdown
   * menu.
   */
  autoHighlight: PropTypes.bool,
  /**
   * Whether or not to automatically select the highlighted item when the
   * `<input>` loses focus.
   */
  selectOnBlur: PropTypes.bool,
  /**
   * Arguments: `isOpen: Boolean`
   *
   * Invoked every time the dropdown menu's visibility changes (i.e. every
   * time it is displayed/hidden).
   */
  onMenuVisibilityChange: PropTypes.func,
  /**
   * Used to override the internal logic which displays/hides the dropdown
   * menu. This is useful if you want to force a certain state based on your
   * UX/business logic. Use it together with `onMenuVisibilityChange` for
   * fine-grained control over the dropdown menu dynamics.
   */
  open: PropTypes.bool,
  debug: PropTypes.bool
}, _class.defaultProps = {
  value: '',
  wrapperProps: {},
  wrapperStyle: {
    display: 'inline-block'
  },
  inputProps: {},
  renderInput: function renderInput(props) {
    return React.createElement('input', props);
  },
  onChange: function onChange() {},
  onSelect: function onSelect() {},
  isItemSelectable: function isItemSelectable() {
    return true;
  },
  renderMenu: function renderMenu(items, value, style) {
    return React.createElement('div', { style: _extends({}, style, this.menuStyle), children: items });
  },

  menuStyle: {
    borderRadius: '3px',
    boxShadow: '0 2px 12px rgba(0, 0, 0, 0.1)',
    background: 'rgba(255, 255, 255, 0.9)',
    padding: '2px 0',
    fontSize: '90%',
    position: 'fixed',
    overflow: 'auto',
    maxHeight: '50%' // TODO: don't cheat, let it flow to the bottom
  },
  autoHighlight: true,
  selectOnBlur: false,
  onMenuVisibilityChange: function onMenuVisibilityChange() {}
}, _class.keyDownHandlers = {
  ArrowDown: function ArrowDown(event) {
    event.preventDefault();
    var items = this.getFilteredItems(this.props);
    if (!items.length) return;
    var highlightedIndex = this.state.highlightedIndex;

    var index = highlightedIndex === null ? -1 : highlightedIndex;
    for (var i = 0; i < items.length; i++) {
      var p = (index + i + 1) % items.length;
      if (this.props.isItemSelectable(items[p])) {
        index = p;
        break;
      }
    }
    if (index > -1 && index !== highlightedIndex) {
      this.setState({
        highlightedIndex: index,
        isOpen: true
      });
    }
  },
  ArrowUp: function ArrowUp(event) {
    event.preventDefault();
    var items = this.getFilteredItems(this.props);
    if (!items.length) return;
    var highlightedIndex = this.state.highlightedIndex;

    var index = highlightedIndex === null ? items.length : highlightedIndex;
    for (var i = 0; i < items.length; i++) {
      var p = (index - (1 + i) + items.length) % items.length;
      if (this.props.isItemSelectable(items[p])) {
        index = p;
        break;
      }
    }
    if (index !== items.length) {
      this.setState({
        highlightedIndex: index,
        isOpen: true
      });
    }
  },
  Enter: function Enter(event) {
    var _this7 = this;

    // Key code 229 is used for selecting items from character selectors (Pinyin, Kana, etc)
    if (event.keyCode !== 13) return;
    // In case the user is currently hovering over the menu
    this.setIgnoreBlur(false);
    if (!this.isOpen()) {
      // menu is closed so there is no selection to accept -> do nothing
      return;
    } else if (this.state.highlightedIndex == null) {
      // input has focus but no menu item is selected + enter is hit -> close the menu, highlight whatever's in input
      this.setState({
        isOpen: false
      }, function () {
        _this7.refs.input.select();
      });
    } else {
      // text entered + menu item has been highlighted + enter is hit -> update value to that of selected menu item, close the menu
      event.preventDefault();
      var item = this.getFilteredItems(this.props)[this.state.highlightedIndex];
      var value = this.props.getItemValue(item);
      this.setState({
        isOpen: false,
        highlightedIndex: null
      }, function () {
        //this.refs.input.focus() // TODO: file issue
        _this7.refs.input.setSelectionRange(value.length, value.length);
        _this7.props.onSelect(value, item);
      });
    }
  },
  Escape: function Escape() {
    // In case the user is currently hovering over the menu
    this.setIgnoreBlur(false);
    this.setState({
      highlightedIndex: null,
      isOpen: false
    });
  },
  Tab: function Tab() {
    // In case the user is currently hovering over the menu
    this.setIgnoreBlur(false);
  }
}, _temp));

module.exports = Autocomplete;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
}).apply(this, arguments);

},{"/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/react-autocomplete/node_modules/react-transform-catch-errors/lib/index.js":376,"/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/react-autocomplete/node_modules/react-transform-hmr/lib/index.js":377,"/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/react-autocomplete/node_modules/redbox-react/lib/index.js":404,"dom-scroll-into-view":21,"prop-types":240,"react":403,"react-dom":243}],5:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("lib/index.js", module);
(function(){
'use strict';

module.exports = require('./Autocomplete');

}).apply(this, arguments);

},{"./Autocomplete":4}],6:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("lib/utils.js", module);
(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.matchStateToTerm = matchStateToTerm;
exports.matchStateToTermWithHeaders = matchStateToTermWithHeaders;
exports.sortStates = sortStates;
exports.fakeRequest = fakeRequest;
exports.fakeCategorizedRequest = fakeCategorizedRequest;
exports.getStates = getStates;
exports.getStates2 = getStates2;
exports.getCategorizedStates = getCategorizedStates;

var _csvjson = require('/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/Harshil595/csvjson.json');

var _csvjson2 = _interopRequireDefault(_csvjson);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function matchStateToTerm(state, value) {
  return state.name.toLowerCase().indexOf(value.toLowerCase()) !== -1 || state.abbr.toLowerCase().indexOf(value.toLowerCase()) !== -1;
}

function matchStateToTermWithHeaders(state, value) {
  return state.header || state.name.toLowerCase().indexOf(value.toLowerCase()) !== -1 || state.abbr.toLowerCase().indexOf(value.toLowerCase()) !== -1;
}

/**
 * An example of how to implement a relevancy-based sorting method. States are
 * sorted based on the location of the match - For example, a search for "or"
 * will return "Oregon" before "North Carolina" even though "North Carolina"
 * would normally sort above Oregon. Strings where the match is in the same
 * location (or there is no match) will be sorted alphabetically - For example,
 * a search for "or" would return "North Carolina" above "North Dakota".
 */
function sortStates(a, b, value) {
  var aLower = a.name.toLowerCase();
  var bLower = b.name.toLowerCase();
  var valueLower = value.toLowerCase();
  var queryPosA = aLower.indexOf(valueLower);
  var queryPosB = bLower.indexOf(valueLower);
  if (queryPosA !== queryPosB) {
    return queryPosA - queryPosB;
  }
  return aLower < bLower ? -1 : 1;
}

function fakeRequest(value, cb) {
  console.log("inside fake request");
  //fetch('http://d.yimg.com/autoc.finance.yahoo.com/autoc?query=yhoo&region=1&lang=en&callback=YAHOO.Finance.SymbolSuggest.ssCallback')
  //	fetch('http://d.yimg.com/autoc.finance.yahoo.com/autoc?query=yhoo&region=1&lang=en&callback=YAHOO.Finance.SymbolSuggest.ssCallback', {
  // crossDomain:true,
  //	  method: 'GET',
  //	  mode: 'no-cors',
  //	  headers: {'Content-Type':'application/json', 'Access-Control-Allow-Origin': 'http://[::]:8080'},
  //	})
  //	.then(response => response.json())
  //	.then(jsondata => console.log(jsondata))
  //	.then(response => console.log(response))
  console.log(getStates());
  return setTimeout(cb, 500, value ? getStates().filter(function (state) {
    return matchStateToTerm(state, value);
  }) : getStates());
}

function fakeCategorizedRequest(value, cb) {
  setTimeout(cb, 500, value ? getCategorizedStates().filter(function (state) {
    return matchStateToTermWithHeaders(state, value);
  }) : getCategorizedStates());
}

function getStates() {
  return _csvjson2.default;
}

function getStates2() {
  return [{ abbr: 'AL', name: 'Alabama' }, { abbr: 'AK', name: 'Alaska' }, { abbr: 'AZ', name: 'Arizona' }, { abbr: 'AR', name: 'Arkansas' }, { abbr: 'CA', name: 'California' }, { abbr: 'CO', name: 'Colorado' }, { abbr: 'CT', name: 'Connecticut' }, { abbr: 'DE', name: 'Delaware' }, { abbr: 'FL', name: 'Florida' }, { abbr: 'GA', name: 'Georgia' }, { abbr: 'HI', name: 'Hawaii' }, { abbr: 'ID', name: 'Idaho' }, { abbr: 'IL', name: 'Illinois' }, { abbr: 'IN', name: 'Indiana' }, { abbr: 'IA', name: 'Iowa' }, { abbr: 'KS', name: 'Kansas' }, { abbr: 'KY', name: 'Kentucky' }, { abbr: 'LA', name: 'Louisiana' }, { abbr: 'ME', name: 'Maine' }, { abbr: 'MD', name: 'Maryland' }, { abbr: 'MA', name: 'Massachusetts' }, { abbr: 'MI', name: 'Michigan' }, { abbr: 'MN', name: 'Minnesota' }, { abbr: 'MS', name: 'Mississippi' }, { abbr: 'MO', name: 'Missouri' }, { abbr: 'MT', name: 'Montana' }, { abbr: 'NE', name: 'Nebraska' }, { abbr: 'NV', name: 'Nevada' }, { abbr: 'NH', name: 'New Hampshire' }, { abbr: 'NJ', name: 'New Jersey' }, { abbr: 'NM', name: 'New Mexico' }, { abbr: 'NY', name: 'New York' }, { abbr: 'NC', name: 'North Carolina' }, { abbr: 'ND', name: 'North Dakota' }, { abbr: 'OH', name: 'Ohio' }, { abbr: 'OK', name: 'Oklahoma' }, { abbr: 'OR', name: 'Oregon' }, { abbr: 'PA', name: 'Pennsylvania' }, { abbr: 'RI', name: 'Rhode Island' }, { abbr: 'SC', name: 'South Carolina' }, { abbr: 'SD', name: 'South Dakota' }, { abbr: 'TN', name: 'Tennessee' }, { abbr: 'TX', name: 'Texas' }, { abbr: 'UT', name: 'Utah' }, { abbr: 'VT', name: 'Vermont' }, { abbr: 'VA', name: 'Virginia' }, { abbr: 'WA', name: 'Washington' }, { abbr: 'WV', name: 'West Virginia' }, { abbr: 'WI', name: 'Wisconsin' }, { abbr: 'WY', name: 'Wyoming' }];
}

function getCategorizedStates() {
  return [{ header: 'West' }, { abbr: 'AZ', name: 'Arizona' }, { abbr: 'CA', name: 'California' }, { abbr: 'CO', name: 'Colorado' }, { abbr: 'ID', name: 'Idaho' }, { abbr: 'MT', name: 'Montana' }, { abbr: 'NV', name: 'Nevada' }, { abbr: 'NM', name: 'New Mexico' }, { abbr: 'OK', name: 'Oklahoma' }, { abbr: 'OR', name: 'Oregon' }, { abbr: 'TX', name: 'Texas' }, { abbr: 'UT', name: 'Utah' }, { abbr: 'WA', name: 'Washington' }, { abbr: 'WY', name: 'Wyoming' }, { header: 'Southeast' }, { abbr: 'AL', name: 'Alabama' }, { abbr: 'AR', name: 'Arkansas' }, { abbr: 'FL', name: 'Florida' }, { abbr: 'GA', name: 'Georgia' }, { abbr: 'KY', name: 'Kentucky' }, { abbr: 'LA', name: 'Louisiana' }, { abbr: 'MS', name: 'Mississippi' }, { abbr: 'NC', name: 'North Carolina' }, { abbr: 'SC', name: 'South Carolina' }, { abbr: 'TN', name: 'Tennessee' }, { abbr: 'VA', name: 'Virginia' }, { abbr: 'WV', name: 'West Virginia' }, { header: 'Midwest' }, { abbr: 'IL', name: 'Illinois' }, { abbr: 'IN', name: 'Indiana' }, { abbr: 'IA', name: 'Iowa' }, { abbr: 'KS', name: 'Kansas' }, { abbr: 'MI', name: 'Michigan' }, { abbr: 'MN', name: 'Minnesota' }, { abbr: 'MO', name: 'Missouri' }, { abbr: 'NE', name: 'Nebraska' }, { abbr: 'OH', name: 'Ohio' }, { abbr: 'ND', name: 'North Dakota' }, { abbr: 'SD', name: 'South Dakota' }, { abbr: 'WI', name: 'Wisconsin' }, { header: 'Northeast' }, { abbr: 'CT', name: 'Connecticut' }, { abbr: 'DE', name: 'Delaware' }, { abbr: 'ME', name: 'Maine' }, { abbr: 'MD', name: 'Maryland' }, { abbr: 'MA', name: 'Massachusetts' }, { abbr: 'NH', name: 'New Hampshire' }, { abbr: 'NJ', name: 'New Jersey' }, { abbr: 'NY', name: 'New York' }, { abbr: 'PA', name: 'Pennsylvania' }, { abbr: 'RI', name: 'Rhode Island' }, { abbr: 'VT', name: 'Vermont' }, { header: 'Pacific' }, { abbr: 'AK', name: 'Alaska' }, { abbr: 'HI', name: 'Hawaii' }];
}

}).apply(this, arguments);

},{"/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/Harshil595/csvjson.json":1}],7:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/after/index.js", module);
(function(){
module.exports = after

function after(count, callback, err_cb) {
    var bail = false
    err_cb = err_cb || noop
    proxy.count = count

    return (count === 0) ? callback() : proxy

    function proxy(err, result) {
        if (proxy.count <= 0) {
            throw new Error('after called too many times')
        }
        --proxy.count

        // after first error, rest are passed to err_cb
        if (err) {
            bail = true
            callback(err)
            // future error callbacks will go to error handler
            callback = err_cb
        } else if (proxy.count === 0 && !bail) {
            callback(null, result)
        }
    }
}

function noop() {}

}).apply(this, arguments);

},{}],8:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/arraybuffer.slice/index.js", module);
(function(){
/**
 * An abstraction for slicing an arraybuffer even when
 * ArrayBuffer.prototype.slice is not supported
 *
 * @api public
 */

module.exports = function(arraybuffer, start, end) {
  var bytes = arraybuffer.byteLength;
  start = start || 0;
  end = end || bytes;

  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }

  if (start < 0) { start += bytes; }
  if (end < 0) { end += bytes; }
  if (end > bytes) { end = bytes; }

  if (start >= bytes || start >= end || bytes === 0) {
    return new ArrayBuffer(0);
  }

  var abv = new Uint8Array(arraybuffer);
  var result = new Uint8Array(end - start);
  for (var i = start, ii = 0; i < end; i++, ii++) {
    result[ii] = abv[i];
  }
  return result.buffer;
};

}).apply(this, arguments);

},{}],9:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/backo2/index.js", module);
(function(){

/**
 * Expose `Backoff`.
 */

module.exports = Backoff;

/**
 * Initialize backoff timer with `opts`.
 *
 * - `min` initial timeout in milliseconds [100]
 * - `max` max timeout [10000]
 * - `jitter` [0]
 * - `factor` [2]
 *
 * @param {Object} opts
 * @api public
 */

function Backoff(opts) {
  opts = opts || {};
  this.ms = opts.min || 100;
  this.max = opts.max || 10000;
  this.factor = opts.factor || 2;
  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;
  this.attempts = 0;
}

/**
 * Return the backoff duration.
 *
 * @return {Number}
 * @api public
 */

Backoff.prototype.duration = function(){
  var ms = this.ms * Math.pow(this.factor, this.attempts++);
  if (this.jitter) {
    var rand =  Math.random();
    var deviation = Math.floor(rand * this.jitter * ms);
    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;
  }
  return Math.min(ms, this.max) | 0;
};

/**
 * Reset the number of attempts.
 *
 * @api public
 */

Backoff.prototype.reset = function(){
  this.attempts = 0;
};

/**
 * Set the minimum duration
 *
 * @api public
 */

Backoff.prototype.setMin = function(min){
  this.ms = min;
};

/**
 * Set the maximum duration
 *
 * @api public
 */

Backoff.prototype.setMax = function(max){
  this.max = max;
};

/**
 * Set the jitter
 *
 * @api public
 */

Backoff.prototype.setJitter = function(jitter){
  this.jitter = jitter;
};


}).apply(this, arguments);

},{}],10:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/base64-arraybuffer/lib/base64-arraybuffer.js", module);
(function(){
/*
 * base64-arraybuffer
 * https://github.com/niklasvh/base64-arraybuffer
 *
 * Copyright (c) 2012 Niklas von Hertzen
 * Licensed under the MIT license.
 */
(function(){
  "use strict";

  var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

  // Use a lookup table to find the index.
  var lookup = new Uint8Array(256);
  for (var i = 0; i < chars.length; i++) {
    lookup[chars.charCodeAt(i)] = i;
  }

  exports.encode = function(arraybuffer) {
    var bytes = new Uint8Array(arraybuffer),
    i, len = bytes.length, base64 = "";

    for (i = 0; i < len; i+=3) {
      base64 += chars[bytes[i] >> 2];
      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];
      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];
      base64 += chars[bytes[i + 2] & 63];
    }

    if ((len % 3) === 2) {
      base64 = base64.substring(0, base64.length - 1) + "=";
    } else if (len % 3 === 1) {
      base64 = base64.substring(0, base64.length - 2) + "==";
    }

    return base64;
  };

  exports.decode =  function(base64) {
    var bufferLength = base64.length * 0.75,
    len = base64.length, i, p = 0,
    encoded1, encoded2, encoded3, encoded4;

    if (base64[base64.length - 1] === "=") {
      bufferLength--;
      if (base64[base64.length - 2] === "=") {
        bufferLength--;
      }
    }

    var arraybuffer = new ArrayBuffer(bufferLength),
    bytes = new Uint8Array(arraybuffer);

    for (i = 0; i < len; i+=4) {
      encoded1 = lookup[base64.charCodeAt(i)];
      encoded2 = lookup[base64.charCodeAt(i+1)];
      encoded3 = lookup[base64.charCodeAt(i+2)];
      encoded4 = lookup[base64.charCodeAt(i+3)];

      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);
      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);
      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);
    }

    return arraybuffer;
  };
})();

}).apply(this, arguments);

},{}],11:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/base64-js/index.js", module);
(function(){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  for (var i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

}).apply(this, arguments);

},{}],12:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/blob/index.js", module);
(function(){
/**
 * Create a blob builder even when vendor prefixes exist
 */

var BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :
  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :
  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :
  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : 
  false;

/**
 * Check if Blob constructor is supported
 */

var blobSupported = (function() {
  try {
    var a = new Blob(['hi']);
    return a.size === 2;
  } catch(e) {
    return false;
  }
})();

/**
 * Check if Blob constructor supports ArrayBufferViews
 * Fails in Safari 6, so we need to map to ArrayBuffers there.
 */

var blobSupportsArrayBufferView = blobSupported && (function() {
  try {
    var b = new Blob([new Uint8Array([1,2])]);
    return b.size === 2;
  } catch(e) {
    return false;
  }
})();

/**
 * Check if BlobBuilder is supported
 */

var blobBuilderSupported = BlobBuilder
  && BlobBuilder.prototype.append
  && BlobBuilder.prototype.getBlob;

/**
 * Helper function that maps ArrayBufferViews to ArrayBuffers
 * Used by BlobBuilder constructor and old browsers that didn't
 * support it in the Blob constructor.
 */

function mapArrayBufferViews(ary) {
  return ary.map(function(chunk) {
    if (chunk.buffer instanceof ArrayBuffer) {
      var buf = chunk.buffer;

      // if this is a subarray, make a copy so we only
      // include the subarray region from the underlying buffer
      if (chunk.byteLength !== buf.byteLength) {
        var copy = new Uint8Array(chunk.byteLength);
        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));
        buf = copy.buffer;
      }

      return buf;
    }

    return chunk;
  });
}

function BlobBuilderConstructor(ary, options) {
  options = options || {};

  var bb = new BlobBuilder();
  mapArrayBufferViews(ary).forEach(function(part) {
    bb.append(part);
  });

  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();
};

function BlobConstructor(ary, options) {
  return new Blob(mapArrayBufferViews(ary), options || {});
};

if (typeof Blob !== 'undefined') {
  BlobBuilderConstructor.prototype = Blob.prototype;
  BlobConstructor.prototype = Blob.prototype;
}

module.exports = (function() {
  if (blobSupported) {
    return blobSupportsArrayBufferView ? Blob : BlobConstructor;
  } else if (blobBuilderSupported) {
    return BlobBuilderConstructor;
  } else {
    return undefined;
  }
})();

}).apply(this, arguments);

},{}],13:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/browser-resolve/empty.js", module);
(function(){

}).apply(this, arguments);

},{}],14:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/browserify-hmr/inc/index.js", module);
(function(){
(function (global){
'use strict';

var has = require('../lib/has');
var StrSet = require('../lib/str-set');
var forEach = require('lodash/forEach');
var some = require('lodash/some');
var map = require('lodash/map');
var filter = require('lodash/filter');
var zipObject = require('lodash/zipObject');
var forOwn = require('lodash/forOwn');
var mapValues = require('lodash/mapValues');
var assign = require('lodash/assign');

function emitError(err) {
  setTimeout(function() {
    throw err;
  }, 0);
}

function makeModuleIndexesToNames(moduleMeta) {
  var moduleIndexesToNames = {};
  forOwn(moduleMeta, function(value, name) {
    moduleIndexesToNames[value.index] = name;
  });
  return moduleIndexesToNames;
}

var console = global.console ? global.console : {
  error: function(){}, log: function() {}
};

function main(
  moduleDefs, cachedModules, moduleMeta, updateUrl,
  updateMode, supportModes, ignoreUnaccepted, updateCacheBust, bundleKey,
  socketio,
  bundle__filename, bundle__dirname
) {
  var moduleIndexesToNames = makeModuleIndexesToNames(moduleMeta);

  var socket;
  var name, i, len;

  if (!global._hmr[bundleKey].setStatus) {
    var runtimeModuleInfo = {};
    var createInfoEntry = function(name) {
      runtimeModuleInfo[name] = {
        index: moduleMeta[name].index,
        hash: moduleMeta[name].hash,
        parents: new StrSet(moduleMeta[name].parents),
        module: null,
        disposeData: null,
        accepters: new StrSet(),
        accepting: new StrSet(),
        decliners: new StrSet(),
        declining: new StrSet(),
        selfAcceptCbs: [], // may contain null. nonzero length means module is self-accepting
        disposeHandlers: []
      };
    };
    for (name in moduleMeta) {
      if (has(moduleMeta, name)) {
        createInfoEntry(name);
      }
    }

    // loaders take a callback(err, data). They may give null for data if they
    // know there hasn't been an update.
    var fileReloaders = {
      fs: function(cb) {
        var fs;
        try {
          fs = require('f'+'s');
        } catch(e) {
          cb(e);
          return;
        }
        fs.readFile(localHmr.updateUrl || bundle__filename, 'utf8', cb);
      },
      ajax: function(cb) {
        var xhr;
        try {
          xhr = new XMLHttpRequest();
        } catch(e) {
          cb(e);
          return;
        }
        xhr.onreadystatechange = function() {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) {
              cb(null, xhr.responseText);
            } else {
              cb(new Error("Request had response "+xhr.status));
            }
          }
        };
        var url = localHmr.updateUrl + (updateCacheBust?'?_v='+(+new Date()):'');
        xhr.open('GET', url, true);
        xhr.send();
      }
    };

    var lastScriptData = null;

    // cb(err, expectUpdate)
    var reloadAndRunScript = function(cb) {
      if (!has(fileReloaders, localHmr.updateMode)) {
        cb(new Error("updateMode "+localHmr.updateMode+" not implemented"));
        return;
      }
      var reloader = fileReloaders[localHmr.updateMode];
      reloader(function(err, data) {
        if (err || !data || lastScriptData === data) {
          cb(err, false);
          return;
        }
        lastScriptData = data;
        localHmr.newLoad = null;
        try {
          if (bundle__filename || bundle__dirname) {
            new Function('require', '__filename', '__dirname', data)(require, bundle__filename, bundle__dirname);
          } else {
            new Function('require', data)(require);
          }
          // running the file sets _hmr.newLoad
        } catch (err2) {
          localHmr.newLoad = null;
          cb(err2);
          return;
        }
        if (!localHmr.newLoad) {
          cb(new Error("Reloaded script did not set hot module reload data"));
          return;
        }
        cb(null, true);
      });
    };

    var getOutdatedModules = function() {
      var outdated = [];
      var name;
      // add changed and deleted modules
      for (name in runtimeModuleInfo) {
        if (has(runtimeModuleInfo, name)) {
          if (
            !has(localHmr.newLoad.moduleMeta, name) ||
            runtimeModuleInfo[name].hash !== localHmr.newLoad.moduleMeta[name].hash
          ) {
            outdated.push(name);
          }
        }
      }
      // add brand new modules
      for (name in localHmr.newLoad.moduleMeta) {
        if (has(localHmr.newLoad.moduleMeta, name)) {
          if (!has(runtimeModuleInfo, name)) {
            outdated.push(name);
          }
        }
      }
      // add modules that are non-accepting/declining parents of outdated modules.
      // important: if outdated has new elements added during the loop,
      // then we iterate over them too.
      for (var i=0; i<outdated.length; i++) {
        name = outdated[i];
        if (has(runtimeModuleInfo, name)) {
          runtimeModuleInfo[name].parents.forEach(function(parentName) {
            if (
              runtimeModuleInfo[name].selfAcceptCbs.length === 0 &&
              !runtimeModuleInfo[name].accepters.has(parentName) &&
              !runtimeModuleInfo[name].decliners.has(parentName) &&
              outdated.indexOf(parentName) === -1
            ) {
              outdated.push(parentName);
            }
          });
        }
      }
      return outdated;
    };

    var moduleHotCheck = function(autoApply, cb) {
      if (typeof autoApply === 'function') {
        cb = autoApply;
        autoApply = false;
      }
      if (!cb) {
        throw new Error("module.hot.check callback parameter required");
      }
      if (localHmr.status !== 'idle') {
        cb(new Error("module.hot.check can only be called while status is idle"));
        return;
      }
      if (updateMode === 'websocket') {
        cb(new Error("module.hot.check can't be used when update mode is websocket"));
        return;
      }

      localHmr.setStatus('check');
      reloadAndRunScript(function(err, expectUpdate) {
        if (err || !expectUpdate) {
          localHmr.setStatus('idle');
          cb(err, null);
          return;
        }
        var outdatedModules = getOutdatedModules();
        if (outdatedModules.length === 0) {
          localHmr.setStatus('idle');
          cb(null, null);
        } else {
          localHmr.setStatus('ready');
          if (autoApply) {
            moduleHotApply(autoApply, cb);
          } else {
            cb(null, outdatedModules);
          }
        }
      });
    };

    var moduleHotApply = function(options, cb) {
      if (typeof options === 'function') {
        cb = options;
        options = null;
      }
      if (!cb) {
        throw new Error("module.hot.apply callback parameter required");
      }
      var ignoreUnaccepted = !!(options && options.ignoreUnaccepted);
      if (localHmr.status !== 'ready') {
        cb(new Error("module.hot.apply can only be called while status is ready"));
        return;
      }

      var outdatedModules = getOutdatedModules();
      var isValueNotInOutdatedModules = function(value) {
        return outdatedModules.indexOf(value) === -1;
      };
      var i, len;
      var acceptedUpdates = filter(outdatedModules, function(name) {
        if (has(runtimeModuleInfo, name)) {
          if (
            runtimeModuleInfo[name].decliners.some(isValueNotInOutdatedModules) ||
            (
              runtimeModuleInfo[name].accepters.size() === 0 &&
              runtimeModuleInfo[name].selfAcceptCbs.length === 0 &&
              runtimeModuleInfo[name].parents.some(isValueNotInOutdatedModules)
            )
          ) {
            return false;
          }
        }
        return true;
      });
      if (!ignoreUnaccepted && outdatedModules.length !== acceptedUpdates.length) {
        localHmr.setStatus('idle');
        cb(new Error("Some updates were declined"));
        return;
      }
      var an;
      for (i=0, len=acceptedUpdates.length; i<len; i++) {
        an = acceptedUpdates[i];
        if (has(runtimeModuleInfo, an)) {
          runtimeModuleInfo[an].disposeData = {};
          for (var j=0; j<runtimeModuleInfo[an].disposeHandlers.length; j++) {
            try {
              runtimeModuleInfo[an].disposeHandlers[j].call(null, runtimeModuleInfo[an].disposeData);
            } catch(e) {
              localHmr.setStatus('idle');
              cb(e || new Error("Unknown dispose callback error"));
              return;
            }
          }
        }
      }
      var selfAccepters = [];
      for (i=0, len=acceptedUpdates.length; i<len; i++) {
        an = acceptedUpdates[i];
        if (!has(runtimeModuleInfo, an)) {
          // new modules
          runtimeModuleInfo[an] = {
            index: an,
            hash: localHmr.newLoad.moduleMeta[an].hash,
            parents: new StrSet(localHmr.newLoad.moduleMeta[an].parents),
            module: null,
            disposeData: null,
            accepters: new StrSet(),
            accepting: new StrSet(),
            decliners: new StrSet(),
            declining: new StrSet(),
            selfAcceptCbs: [],
            disposeHandlers: []
          };
        } else if (!has(localHmr.newLoad.moduleMeta, an)) {
          // removed modules
          delete cachedModules[runtimeModuleInfo[an].index];
          delete runtimeModuleInfo[an];
          continue;
        } else {
          // updated modules
          runtimeModuleInfo[an].hash = localHmr.newLoad.moduleMeta[an].hash;
          runtimeModuleInfo[an].parents = new StrSet(localHmr.newLoad.moduleMeta[an].parents);
          runtimeModuleInfo[an].module = null;
          runtimeModuleInfo[an].accepting.forEach(function(accepted) {
            runtimeModuleInfo[accepted].accepters.del(an);
          });
          runtimeModuleInfo[an].accepting = new StrSet();
          runtimeModuleInfo[an].declining.forEach(function(accepted) {
            runtimeModuleInfo[accepted].decliners.del(an);
          });
          runtimeModuleInfo[an].declining = new StrSet();
          forEach(runtimeModuleInfo[an].selfAcceptCbs, function(cb) {
            selfAccepters.push({name: an, cb: cb});
          });
          runtimeModuleInfo[an].selfAcceptCbs = [];
          runtimeModuleInfo[an].disposeHandlers = [];
        }

        moduleDefs[runtimeModuleInfo[an].index] = [
          // module function
          localHmr.newLoad.moduleDefs[localHmr.newLoad.moduleMeta[an].index][0],
          // module deps
          mapValues(localHmr.newLoad.moduleDefs[localHmr.newLoad.moduleMeta[an].index][1], function(depIndex, depRef) {
            var depName = localHmr.newLoad.moduleIndexesToNames[depIndex];
            if (has(localHmr.runtimeModuleInfo, depName)) {
              return localHmr.runtimeModuleInfo[depName].index;
            } else {
              return depName;
            }
          })
        ];
        cachedModules[runtimeModuleInfo[an].index] = null;
      }

      // Update the accept handlers list and call the right ones
      var errCanWait = null;
      var updatedNames = new StrSet(acceptedUpdates);
      var oldUpdateHandlers = localHmr.updateHandlers;
      var relevantUpdateHandlers = [];
      var newUpdateHandlers = [];
      for (i=0, len=oldUpdateHandlers.length; i<len; i++) {
        if (!updatedNames.has(oldUpdateHandlers[i].accepter)) {
          newUpdateHandlers.push(oldUpdateHandlers[i]);
        }
        if (updatedNames.hasIntersection(oldUpdateHandlers[i].deps)) {
          relevantUpdateHandlers.push(oldUpdateHandlers[i]);
        }
      }
      localHmr.updateHandlers = newUpdateHandlers;
      for (i=0, len=relevantUpdateHandlers.length; i<len; i++) {
        try {
          relevantUpdateHandlers[i].cb.call(null, acceptedUpdates);
        } catch(e) {
          if (errCanWait) emitError(errCanWait);
          errCanWait = e;
        }
      }

      // Call the self-accepting modules
      forEach(selfAccepters, function(obj) {
        try {
          require(runtimeModuleInfo[obj.name].index);
        } catch(e) {
          if (obj.cb) {
            obj.cb.call(null, e);
          } else {
            if (errCanWait) emitError(errCanWait);
            errCanWait = e;
          }
        }
      });

      localHmr.setStatus('apply');

      localHmr.setStatus('idle');
      cb(errCanWait, acceptedUpdates);
    };

    var moduleHotSetUpdateMode = function(mode, options) {
      options = options || {};

      if (supportModes.indexOf(mode) === -1) {
        throw new Error("Mode "+mode+" not in supportModes. Please check the Browserify-HMR plugin options.");
      }
      if (mode === 'ajax' && !options.url) {
        throw new Error("url required for ajax update mode");
      }
      if (localHmr.status !== 'idle') {
        throw new Error("module.hot.setUpdateMode can only be called while status is idle");
      }

      localHmr.newLoad = null;
      localHmr.updateMode = updateMode = mode;
      localHmr.updateUrl = updateUrl = options.url;
      updateCacheBust = options.cacheBust;
      ignoreUnaccepted = has(options, 'ignoreUnaccepted') ? options.ignoreUnaccepted : true;

      if (socket) {
        socket.disconnect();
        socket = null;
      }
      if (mode === 'websocket') {
        socket = setupSocket();
      }
    };

    var setupSocket = function() {
      var url = updateUrl || 'http://localhost:3123';
      var socket = socketio(url, {'force new connection': true});
      console.log('[HMR] Attempting websocket connection to', url);

      var isAcceptingMessages = false;
      socket.on('connect', function() {
        isAcceptingMessages = false;
        var syncMsg = mapValues(runtimeModuleInfo, function(value, name) {
          return {
            hash: value.hash
          };
        });
        socket.emit('sync', syncMsg);
      });
      var isUpdating = false;
      var queuedUpdateMessages = [];
      socket.on('sync confirm', function() {
        console.log('[HMR] Websocket connection successful.');
        isAcceptingMessages = true;
        queuedUpdateMessages = [];
      });
      socket.on('disconnect', function() {
        console.log('[HMR] Websocket connection lost.');
      });
      var acceptNewModules = function(msg) {
        // Make sure we don't accept new modules before we've synced ourselves.
        if (!isAcceptingMessages) return;
        if (isUpdating) {
          queuedUpdateMessages.push(msg);
          return;
        }
        // Take the message and create a localHmr.newLoad value as if the
        // bundle had been re-executed, then call moduleHotApply.
        isUpdating = true;

        // random id so we can make the normally unnamed args have random names
        var rid = String(Math.random()).replace(/[^0-9]/g, '');

        var newModuleDefs = localHmr.newLoad ? localHmr.newLoad.moduleDefs : assign({}, moduleDefs);
        var newModuleMeta = localHmr.newLoad ?
          localHmr.newLoad.moduleMeta : mapValues(runtimeModuleInfo, function(value, key) {
            return {
              index: value.index,
              hash: value.hash,
              parents: value.parents.toArray()
            };
          });
        forOwn(msg.newModuleData, function(value, key) {
          newModuleMeta[key] = {
            index: value.index,
            hash: value.hash,
            parents: value.parents
          };
        });
        forEach(msg.removedModules, function(removedName) {
          delete newModuleDefs[runtimeModuleInfo[removedName].index];
          delete newModuleMeta[removedName];
        });
        var newModuleIndexesToNames = makeModuleIndexesToNames(newModuleMeta);
        forOwn(msg.newModuleData, function(value, key) {
          // this part needs to run after newModuleMeta and
          // newModuleIndexesToNames are populated.
          var newModuleFunction = (function() {
            var fn;
            if (bundle__filename || bundle__dirname) {
              fn = new Function('require', 'module', 'exports', '_u1'+rid, '_u2'+rid, '__u3'+rid, '__u4'+rid, '__filename', '__dirname', value.source);
              return function(require, module, exports, _u1, _u2, _u3, _u4) {
                global._hmr[bundleKey].initModule(key, module);
                fn.call(this, require, module, exports, _u1, _u2, _u3, _u4, bundle__filename, bundle__dirname);
              };
            } else {
              fn = new Function('require', 'module', 'exports',  '_u1'+rid, '_u2'+rid, '__u3'+rid, '__u4'+rid, value.source);
              return function(require, module, exports, _u1, _u2, _u3, _u4) {
                global._hmr[bundleKey].initModule(key, module);
                fn.call(this, require, module, exports, _u1, _u2, _u3, _u4);
              };
            }
          })();

          newModuleDefs[newModuleMeta[key].index] = [
            // module function
            newModuleFunction,
            // module deps
            mapValues(value.deps, function(depIndex, depRef) {
              var depName = newModuleIndexesToNames[depIndex];
              if (has(newModuleMeta, depName)) {
                return newModuleMeta[depName].index;
              } else {
                return depName;
              }
            })
          ];
        });
        localHmr.newLoad = {
          moduleDefs: newModuleDefs,
          moduleMeta: newModuleMeta,
          moduleIndexesToNames: newModuleIndexesToNames
        };
        localHmr.setStatus('ready');
        var outdatedModules = getOutdatedModules();
        moduleHotApply({ignoreUnaccepted: ignoreUnaccepted}, function(err, updatedNames) {
          if (err) {
            console.error('[HMR] Error applying update', err);
          }
          if (updatedNames) {
            console.log('[HMR] Updated modules', updatedNames);
            if (outdatedModules.length !== updatedNames.length) {
              var notUpdatedNames = filter(outdatedModules, function(name) {
                return updatedNames.indexOf(name) === -1;
              });
              console.log('[HMR] Some modules were not updated', notUpdatedNames);
            }
          }
          isUpdating = false;
          var queuedMsg;
          while ((queuedMsg = queuedUpdateMessages.shift())) {
            acceptNewModules(queuedMsg);
          }
        });
      };
      socket.on('new modules', acceptNewModules);
      return socket;
    };

    var localHmr = {
      updateUrl: updateUrl,
      updateMode: updateMode,
      runtimeModuleInfo: runtimeModuleInfo,

      status: "idle",
      setStatus: function(status) {
        this.status = status;
        var statusHandlers = this.statusHandlers.slice();
        for (var i=0, len=statusHandlers.length; i<len; i++) {
          statusHandlers[i].call(null, status);
        }
      },
      statusHandlers: [],
      updateHandlers: [],

      // during a reload this is set to an object with moduleDefs,
      // moduleMeta, and moduleIndexesToNames properties
      newLoad: null,

      initModule: function(name, module) {
        // Set module.id for react-hot-loader support.
        module.id = name;

        runtimeModuleInfo[name].module = module;
        module.hot = {
          accept: function(deps, cb) {
            if (!cb && (!deps || typeof deps === 'function')) { // self
              cb = deps;
              deps = null;
              runtimeModuleInfo[name].selfAcceptCbs.push(cb);
            } else {
              if (typeof deps === 'string') {
                deps = [deps];
              }
              var depNames = new StrSet();
              for (var i=0, depsLen=deps.length; i<depsLen; i++) {
                var depIndex = moduleDefs[runtimeModuleInfo[name].index][1][deps[i]];
                if (depIndex === undefined || !has(moduleIndexesToNames, depIndex)) {
                  throw new Error("File does not use dependency: "+deps[i]);
                }
                depNames.add(moduleIndexesToNames[depIndex]);
              }
              deps = null;
              depNames.forEach(function(depName) {
                runtimeModuleInfo[depName].accepters.add(name);
                runtimeModuleInfo[name].accepting.add(depName);
              });
              if (cb) {
                localHmr.updateHandlers.push({
                  accepter: name,
                  deps: depNames,
                  cb: cb
                });
              }
            }
          },
          decline: function(deps) {
            if (!deps) { // self
              runtimeModuleInfo[name].decliners.add(name);
              runtimeModuleInfo[name].declining.add(name);
            } else {
              if (typeof deps === 'string') {
                deps = [deps];
              }
              for (var i=0, depsLen=deps.length; i<depsLen; i++) {
                var depIndex = moduleDefs[runtimeModuleInfo[name].index][1][deps[i]];
                if (depIndex === undefined || !has(moduleIndexesToNames, depIndex)) {
                  throw new Error("File does not use dependency: "+deps[i]);
                }
                var depName = moduleIndexesToNames[depIndex];
                runtimeModuleInfo[depName].decliners.add(name);
                runtimeModuleInfo[name].declining.add(depName);
              }
            }
          },
          data: runtimeModuleInfo[name].disposeData,
          dispose: function(cb) {
            return this.addDisposeHandler(cb);
          },
          addDisposeHandler: function(cb) {
            runtimeModuleInfo[name].disposeHandlers.push(cb);
          },
          removeDisposeHandler: function(cb) {
            var ix = runtimeModuleInfo[name].disposeHandlers.indexOf(cb);
            if (ix !== -1) {
              runtimeModuleInfo[name].disposeHandlers.splice(ix, 1);
            }
          },

          // Management
          check: moduleHotCheck,
          apply: moduleHotApply,
          status: function(cb) {
            if (cb) {
              return this.addStatusHandler(cb);
            }
            return localHmr.status;
          },
          addStatusHandler: function(cb) {
            localHmr.statusHandlers.push(cb);
          },
          removeStatusHandler: function(cb) {
            var ix = localHmr.statusHandlers.indexOf(cb);
            if (ix !== -1) {
              localHmr.statusHandlers.splice(ix, 1);
            }
          },
          setUpdateMode: moduleHotSetUpdateMode
        };
      }
    };
    global._hmr[bundleKey] = localHmr;

    if (updateMode === 'websocket') {
      socket = setupSocket();
    }
    return true;
  } else { // We're in a reload!
    global._hmr[bundleKey].newLoad = {
      moduleDefs: moduleDefs,
      moduleMeta: moduleMeta,
      moduleIndexesToNames: moduleIndexesToNames
    };
    return false;
  }
}

module.exports = main;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
}).apply(this, arguments);

},{"../lib/has":15,"../lib/str-set":16,"lodash/assign":195,"lodash/filter":199,"lodash/forEach":202,"lodash/forOwn":203,"lodash/map":219,"lodash/mapValues":220,"lodash/some":223,"lodash/zipObject":230}],15:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/browserify-hmr/lib/has.js", module);
(function(){
'use strict';

function has(object, propName) {
  return Object.prototype.hasOwnProperty.call(object, propName);
}
module.exports = has;

}).apply(this, arguments);

},{}],16:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/browserify-hmr/lib/str-set.js", module);
(function(){
'use strict';

var has = require('./has');

function StrSet(other) {
  this._map = {};
  this._size = 0;
  if (other) {
    for (var i=0,len=other.length; i<len; i++) {
      this.add(other[i]);
    }
  }
}
StrSet.prototype.add = function(value) {
  if (!this.has(value)) {
    this._map[value] = true;
    this._size++;
  }
};
StrSet.prototype.has = function(value) {
  return has(this._map, value);
};
StrSet.prototype.del = function(value) {
  if (this.has(value)) {
    delete this._map[value];
    this._size--;
  }
};
StrSet.prototype.size = function() {
  return this._size;
};
StrSet.prototype.forEach = function(cb) {
  for (var value in this._map) {
    if (has(this._map, value)) {
      cb(value);
    }
  }
};
StrSet.prototype.some = function(cb) {
  for (var value in this._map) {
    if (has(this._map, value)) {
      if (cb(value)) {
        return true;
      }
    }
  }
  return false;
};
StrSet.prototype.every = function(cb) {
  return !this.some(function(x) {
    return !cb(x);
  });
};
StrSet.prototype.hasIntersection = function(otherStrSet) {
  var value;
  if (this._size < otherStrSet._size) {
    return this.some(function(value) {
      return otherStrSet.has(value);
    });
  } else {
    var self = this;
    return otherStrSet.some(function(value) {
      return self.has(value);
    });
  }
};
StrSet.prototype.toArray = function() {
  var arr = [];
  this.forEach(function(value) {
    arr.push(value);
  });
  return arr;
};

module.exports = StrSet;

}).apply(this, arguments);

},{"./has":15}],17:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/component-bind/index.js", module);
(function(){
/**
 * Slice reference.
 */

var slice = [].slice;

/**
 * Bind `obj` to `fn`.
 *
 * @param {Object} obj
 * @param {Function|String} fn or string
 * @return {Function}
 * @api public
 */

module.exports = function(obj, fn){
  if ('string' == typeof fn) fn = obj[fn];
  if ('function' != typeof fn) throw new Error('bind() requires a function');
  var args = slice.call(arguments, 2);
  return function(){
    return fn.apply(obj, args.concat(slice.call(arguments)));
  }
};

}).apply(this, arguments);

},{}],18:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/component-emitter/index.js", module);
(function(){

/**
 * Expose `Emitter`.
 */

if (typeof module !== 'undefined') {
  module.exports = Emitter;
}

/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
};

/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.on =
Emitter.prototype.addEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};
  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])
    .push(fn);
  return this;
};

/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.once = function(event, fn){
  function on() {
    this.off(event, on);
    fn.apply(this, arguments);
  }

  on.fn = fn;
  this.on(event, on);
  return this;
};

/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.off =
Emitter.prototype.removeListener =
Emitter.prototype.removeAllListeners =
Emitter.prototype.removeEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};

  // all
  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }

  // specific event
  var callbacks = this._callbacks['$' + event];
  if (!callbacks) return this;

  // remove all handlers
  if (1 == arguments.length) {
    delete this._callbacks['$' + event];
    return this;
  }

  // remove specific handler
  var cb;
  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }
  return this;
};

/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */

Emitter.prototype.emit = function(event){
  this._callbacks = this._callbacks || {};
  var args = [].slice.call(arguments, 1)
    , callbacks = this._callbacks['$' + event];

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */

Emitter.prototype.listeners = function(event){
  this._callbacks = this._callbacks || {};
  return this._callbacks['$' + event] || [];
};

/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */

Emitter.prototype.hasListeners = function(event){
  return !! this.listeners(event).length;
};

}).apply(this, arguments);

},{}],19:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/component-inherit/index.js", module);
(function(){

module.exports = function(a, b){
  var fn = function(){};
  fn.prototype = b.prototype;
  a.prototype = new fn;
  a.prototype.constructor = a;
};
}).apply(this, arguments);

},{}],20:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/create-react-class/factory.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _assign = require('object-assign');

var emptyObject = require('fbjs/lib/emptyObject');
var _invariant = require('fbjs/lib/invariant');

if (process.env.NODE_ENV !== 'production') {
  var warning = require('fbjs/lib/warning');
}

var MIXINS_KEY = 'mixins';

// Helper function to allow the creation of anonymous functions which do not
// have .name set to the name of the variable being assigned to.
function identity(fn) {
  return fn;
}

var ReactPropTypeLocationNames;
if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
} else {
  ReactPropTypeLocationNames = {};
}

function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
  /**
   * Policies that describe methods in `ReactClassInterface`.
   */

  var injectedMixins = [];

  /**
   * Composite components are higher-level components that compose other composite
   * or host components.
   *
   * To create a new type of `ReactClass`, pass a specification of
   * your new class to `React.createClass`. The only requirement of your class
   * specification is that you implement a `render` method.
   *
   *   var MyComponent = React.createClass({
   *     render: function() {
   *       return <div>Hello World</div>;
   *     }
   *   });
   *
   * The class specification supports a specific protocol of methods that have
   * special meaning (e.g. `render`). See `ReactClassInterface` for
   * more the comprehensive protocol. Any other properties and methods in the
   * class specification will be available on the prototype.
   *
   * @interface ReactClassInterface
   * @internal
   */
  var ReactClassInterface = {
    /**
     * An array of Mixin objects to include when defining your component.
     *
     * @type {array}
     * @optional
     */
    mixins: 'DEFINE_MANY',

    /**
     * An object containing properties and methods that should be defined on
     * the component's constructor instead of its prototype (static methods).
     *
     * @type {object}
     * @optional
     */
    statics: 'DEFINE_MANY',

    /**
     * Definition of prop types for this component.
     *
     * @type {object}
     * @optional
     */
    propTypes: 'DEFINE_MANY',

    /**
     * Definition of context types for this component.
     *
     * @type {object}
     * @optional
     */
    contextTypes: 'DEFINE_MANY',

    /**
     * Definition of context types this component sets for its children.
     *
     * @type {object}
     * @optional
     */
    childContextTypes: 'DEFINE_MANY',

    // ==== Definition methods ====

    /**
     * Invoked when the component is mounted. Values in the mapping will be set on
     * `this.props` if that prop is not specified (i.e. using an `in` check).
     *
     * This method is invoked before `getInitialState` and therefore cannot rely
     * on `this.state` or use `this.setState`.
     *
     * @return {object}
     * @optional
     */
    getDefaultProps: 'DEFINE_MANY_MERGED',

    /**
     * Invoked once before the component is mounted. The return value will be used
     * as the initial value of `this.state`.
     *
     *   getInitialState: function() {
     *     return {
     *       isOn: false,
     *       fooBaz: new BazFoo()
     *     }
     *   }
     *
     * @return {object}
     * @optional
     */
    getInitialState: 'DEFINE_MANY_MERGED',

    /**
     * @return {object}
     * @optional
     */
    getChildContext: 'DEFINE_MANY_MERGED',

    /**
     * Uses props from `this.props` and state from `this.state` to render the
     * structure of the component.
     *
     * No guarantees are made about when or how often this method is invoked, so
     * it must not have side effects.
     *
     *   render: function() {
     *     var name = this.props.name;
     *     return <div>Hello, {name}!</div>;
     *   }
     *
     * @return {ReactComponent}
     * @required
     */
    render: 'DEFINE_ONCE',

    // ==== Delegate methods ====

    /**
     * Invoked when the component is initially created and about to be mounted.
     * This may have side effects, but any external subscriptions or data created
     * by this method must be cleaned up in `componentWillUnmount`.
     *
     * @optional
     */
    componentWillMount: 'DEFINE_MANY',

    /**
     * Invoked when the component has been mounted and has a DOM representation.
     * However, there is no guarantee that the DOM node is in the document.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been mounted (initialized and rendered) for the first time.
     *
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidMount: 'DEFINE_MANY',

    /**
     * Invoked before the component receives new props.
     *
     * Use this as an opportunity to react to a prop transition by updating the
     * state using `this.setState`. Current props are accessed via `this.props`.
     *
     *   componentWillReceiveProps: function(nextProps, nextContext) {
     *     this.setState({
     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
     *     });
     *   }
     *
     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
     * transition may cause a state change, but the opposite is not true. If you
     * need it, you are probably looking for `componentWillUpdate`.
     *
     * @param {object} nextProps
     * @optional
     */
    componentWillReceiveProps: 'DEFINE_MANY',

    /**
     * Invoked while deciding if the component should be updated as a result of
     * receiving new props, state and/or context.
     *
     * Use this as an opportunity to `return false` when you're certain that the
     * transition to the new props/state/context will not require a component
     * update.
     *
     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
     *     return !equal(nextProps, this.props) ||
     *       !equal(nextState, this.state) ||
     *       !equal(nextContext, this.context);
     *   }
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @return {boolean} True if the component should update.
     * @optional
     */
    shouldComponentUpdate: 'DEFINE_ONCE',

    /**
     * Invoked when the component is about to update due to a transition from
     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
     * and `nextContext`.
     *
     * Use this as an opportunity to perform preparation before an update occurs.
     *
     * NOTE: You **cannot** use `this.setState()` in this method.
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @param {ReactReconcileTransaction} transaction
     * @optional
     */
    componentWillUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component's DOM representation has been updated.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been updated.
     *
     * @param {object} prevProps
     * @param {?object} prevState
     * @param {?object} prevContext
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component is about to be removed from its parent and have
     * its DOM representation destroyed.
     *
     * Use this as an opportunity to deallocate any external resources.
     *
     * NOTE: There is no `componentDidUnmount` since your component will have been
     * destroyed by that point.
     *
     * @optional
     */
    componentWillUnmount: 'DEFINE_MANY',

    /**
     * Replacement for (deprecated) `componentWillMount`.
     *
     * @optional
     */
    UNSAFE_componentWillMount: 'DEFINE_MANY',

    /**
     * Replacement for (deprecated) `componentWillReceiveProps`.
     *
     * @optional
     */
    UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',

    /**
     * Replacement for (deprecated) `componentWillUpdate`.
     *
     * @optional
     */
    UNSAFE_componentWillUpdate: 'DEFINE_MANY',

    // ==== Advanced methods ====

    /**
     * Updates the component's currently mounted DOM representation.
     *
     * By default, this implements React's rendering and reconciliation algorithm.
     * Sophisticated clients may wish to override this.
     *
     * @param {ReactReconcileTransaction} transaction
     * @internal
     * @overridable
     */
    updateComponent: 'OVERRIDE_BASE'
  };

  /**
   * Similar to ReactClassInterface but for static methods.
   */
  var ReactClassStaticInterface = {
    /**
     * This method is invoked after a component is instantiated and when it
     * receives new props. Return an object to update state in response to
     * prop changes. Return null to indicate no change to state.
     *
     * If an object is returned, its keys will be merged into the existing state.
     *
     * @return {object || null}
     * @optional
     */
    getDerivedStateFromProps: 'DEFINE_MANY_MERGED'
  };

  /**
   * Mapping from class specification keys to special processing functions.
   *
   * Although these are declared like instance properties in the specification
   * when defining classes using `React.createClass`, they are actually static
   * and are accessible on the constructor instead of the prototype. Despite
   * being static, they must be defined outside of the "statics" key under
   * which all other static methods are defined.
   */
  var RESERVED_SPEC_KEYS = {
    displayName: function(Constructor, displayName) {
      Constructor.displayName = displayName;
    },
    mixins: function(Constructor, mixins) {
      if (mixins) {
        for (var i = 0; i < mixins.length; i++) {
          mixSpecIntoComponent(Constructor, mixins[i]);
        }
      }
    },
    childContextTypes: function(Constructor, childContextTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, childContextTypes, 'childContext');
      }
      Constructor.childContextTypes = _assign(
        {},
        Constructor.childContextTypes,
        childContextTypes
      );
    },
    contextTypes: function(Constructor, contextTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, contextTypes, 'context');
      }
      Constructor.contextTypes = _assign(
        {},
        Constructor.contextTypes,
        contextTypes
      );
    },
    /**
     * Special case getDefaultProps which should move into statics but requires
     * automatic merging.
     */
    getDefaultProps: function(Constructor, getDefaultProps) {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps = createMergedResultFunction(
          Constructor.getDefaultProps,
          getDefaultProps
        );
      } else {
        Constructor.getDefaultProps = getDefaultProps;
      }
    },
    propTypes: function(Constructor, propTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, propTypes, 'prop');
      }
      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
    },
    statics: function(Constructor, statics) {
      mixStaticSpecIntoComponent(Constructor, statics);
    },
    autobind: function() {}
  };

  function validateTypeDef(Constructor, typeDef, location) {
    for (var propName in typeDef) {
      if (typeDef.hasOwnProperty(propName)) {
        // use a warning instead of an _invariant so components
        // don't show up in prod but only in __DEV__
        if (process.env.NODE_ENV !== 'production') {
          warning(
            typeof typeDef[propName] === 'function',
            '%s: %s type `%s` is invalid; it must be a function, usually from ' +
              'React.PropTypes.',
            Constructor.displayName || 'ReactClass',
            ReactPropTypeLocationNames[location],
            propName
          );
        }
      }
    }
  }

  function validateMethodOverride(isAlreadyDefined, name) {
    var specPolicy = ReactClassInterface.hasOwnProperty(name)
      ? ReactClassInterface[name]
      : null;

    // Disallow overriding of base class methods unless explicitly allowed.
    if (ReactClassMixin.hasOwnProperty(name)) {
      _invariant(
        specPolicy === 'OVERRIDE_BASE',
        'ReactClassInterface: You are attempting to override ' +
          '`%s` from your class specification. Ensure that your method names ' +
          'do not overlap with React methods.',
        name
      );
    }

    // Disallow defining methods more than once unless explicitly allowed.
    if (isAlreadyDefined) {
      _invariant(
        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',
        'ReactClassInterface: You are attempting to define ' +
          '`%s` on your component more than once. This conflict may be due ' +
          'to a mixin.',
        name
      );
    }
  }

  /**
   * Mixin helper which handles policy validation and reserved
   * specification keys when building React classes.
   */
  function mixSpecIntoComponent(Constructor, spec) {
    if (!spec) {
      if (process.env.NODE_ENV !== 'production') {
        var typeofSpec = typeof spec;
        var isMixinValid = typeofSpec === 'object' && spec !== null;

        if (process.env.NODE_ENV !== 'production') {
          warning(
            isMixinValid,
            "%s: You're attempting to include a mixin that is either null " +
              'or not an object. Check the mixins included by the component, ' +
              'as well as any mixins they include themselves. ' +
              'Expected object but got %s.',
            Constructor.displayName || 'ReactClass',
            spec === null ? null : typeofSpec
          );
        }
      }

      return;
    }

    _invariant(
      typeof spec !== 'function',
      "ReactClass: You're attempting to " +
        'use a component class or function as a mixin. Instead, just use a ' +
        'regular object.'
    );
    _invariant(
      !isValidElement(spec),
      "ReactClass: You're attempting to " +
        'use a component as a mixin. Instead, just use a regular object.'
    );

    var proto = Constructor.prototype;
    var autoBindPairs = proto.__reactAutoBindPairs;

    // By handling mixins before any other properties, we ensure the same
    // chaining order is applied to methods with DEFINE_MANY policy, whether
    // mixins are listed before or after these methods in the spec.
    if (spec.hasOwnProperty(MIXINS_KEY)) {
      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
    }

    for (var name in spec) {
      if (!spec.hasOwnProperty(name)) {
        continue;
      }

      if (name === MIXINS_KEY) {
        // We have already handled mixins in a special case above.
        continue;
      }

      var property = spec[name];
      var isAlreadyDefined = proto.hasOwnProperty(name);
      validateMethodOverride(isAlreadyDefined, name);

      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
        RESERVED_SPEC_KEYS[name](Constructor, property);
      } else {
        // Setup methods on prototype:
        // The following member methods should not be automatically bound:
        // 1. Expected ReactClass methods (in the "interface").
        // 2. Overridden methods (that were mixed in).
        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
        var isFunction = typeof property === 'function';
        var shouldAutoBind =
          isFunction &&
          !isReactClassMethod &&
          !isAlreadyDefined &&
          spec.autobind !== false;

        if (shouldAutoBind) {
          autoBindPairs.push(name, property);
          proto[name] = property;
        } else {
          if (isAlreadyDefined) {
            var specPolicy = ReactClassInterface[name];

            // These cases should already be caught by validateMethodOverride.
            _invariant(
              isReactClassMethod &&
                (specPolicy === 'DEFINE_MANY_MERGED' ||
                  specPolicy === 'DEFINE_MANY'),
              'ReactClass: Unexpected spec policy %s for key %s ' +
                'when mixing in component specs.',
              specPolicy,
              name
            );

            // For methods which are defined more than once, call the existing
            // methods before calling the new property, merging if appropriate.
            if (specPolicy === 'DEFINE_MANY_MERGED') {
              proto[name] = createMergedResultFunction(proto[name], property);
            } else if (specPolicy === 'DEFINE_MANY') {
              proto[name] = createChainedFunction(proto[name], property);
            }
          } else {
            proto[name] = property;
            if (process.env.NODE_ENV !== 'production') {
              // Add verbose displayName to the function, which helps when looking
              // at profiling tools.
              if (typeof property === 'function' && spec.displayName) {
                proto[name].displayName = spec.displayName + '_' + name;
              }
            }
          }
        }
      }
    }
  }

  function mixStaticSpecIntoComponent(Constructor, statics) {
    if (!statics) {
      return;
    }

    for (var name in statics) {
      var property = statics[name];
      if (!statics.hasOwnProperty(name)) {
        continue;
      }

      var isReserved = name in RESERVED_SPEC_KEYS;
      _invariant(
        !isReserved,
        'ReactClass: You are attempting to define a reserved ' +
          'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
          'as an instance property instead; it will still be accessible on the ' +
          'constructor.',
        name
      );

      var isAlreadyDefined = name in Constructor;
      if (isAlreadyDefined) {
        var specPolicy = ReactClassStaticInterface.hasOwnProperty(name)
          ? ReactClassStaticInterface[name]
          : null;

        _invariant(
          specPolicy === 'DEFINE_MANY_MERGED',
          'ReactClass: You are attempting to define ' +
            '`%s` on your component more than once. This conflict may be ' +
            'due to a mixin.',
          name
        );

        Constructor[name] = createMergedResultFunction(Constructor[name], property);

        return;
      }

      Constructor[name] = property;
    }
  }

  /**
   * Merge two objects, but throw if both contain the same key.
   *
   * @param {object} one The first object, which is mutated.
   * @param {object} two The second object
   * @return {object} one after it has been mutated to contain everything in two.
   */
  function mergeIntoWithNoDuplicateKeys(one, two) {
    _invariant(
      one && two && typeof one === 'object' && typeof two === 'object',
      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
    );

    for (var key in two) {
      if (two.hasOwnProperty(key)) {
        _invariant(
          one[key] === undefined,
          'mergeIntoWithNoDuplicateKeys(): ' +
            'Tried to merge two objects with the same key: `%s`. This conflict ' +
            'may be due to a mixin; in particular, this may be caused by two ' +
            'getInitialState() or getDefaultProps() methods returning objects ' +
            'with clashing keys.',
          key
        );
        one[key] = two[key];
      }
    }
    return one;
  }

  /**
   * Creates a function that invokes two functions and merges their return values.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createMergedResultFunction(one, two) {
    return function mergedResult() {
      var a = one.apply(this, arguments);
      var b = two.apply(this, arguments);
      if (a == null) {
        return b;
      } else if (b == null) {
        return a;
      }
      var c = {};
      mergeIntoWithNoDuplicateKeys(c, a);
      mergeIntoWithNoDuplicateKeys(c, b);
      return c;
    };
  }

  /**
   * Creates a function that invokes two functions and ignores their return vales.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createChainedFunction(one, two) {
    return function chainedFunction() {
      one.apply(this, arguments);
      two.apply(this, arguments);
    };
  }

  /**
   * Binds a method to the component.
   *
   * @param {object} component Component whose method is going to be bound.
   * @param {function} method Method to be bound.
   * @return {function} The bound method.
   */
  function bindAutoBindMethod(component, method) {
    var boundMethod = method.bind(component);
    if (process.env.NODE_ENV !== 'production') {
      boundMethod.__reactBoundContext = component;
      boundMethod.__reactBoundMethod = method;
      boundMethod.__reactBoundArguments = null;
      var componentName = component.constructor.displayName;
      var _bind = boundMethod.bind;
      boundMethod.bind = function(newThis) {
        for (
          var _len = arguments.length,
            args = Array(_len > 1 ? _len - 1 : 0),
            _key = 1;
          _key < _len;
          _key++
        ) {
          args[_key - 1] = arguments[_key];
        }

        // User is trying to bind() an autobound method; we effectively will
        // ignore the value of "this" that the user is trying to use, so
        // let's warn.
        if (newThis !== component && newThis !== null) {
          if (process.env.NODE_ENV !== 'production') {
            warning(
              false,
              'bind(): React component methods may only be bound to the ' +
                'component instance. See %s',
              componentName
            );
          }
        } else if (!args.length) {
          if (process.env.NODE_ENV !== 'production') {
            warning(
              false,
              'bind(): You are binding a component method to the component. ' +
                'React does this for you automatically in a high-performance ' +
                'way, so you can safely remove this call. See %s',
              componentName
            );
          }
          return boundMethod;
        }
        var reboundMethod = _bind.apply(boundMethod, arguments);
        reboundMethod.__reactBoundContext = component;
        reboundMethod.__reactBoundMethod = method;
        reboundMethod.__reactBoundArguments = args;
        return reboundMethod;
      };
    }
    return boundMethod;
  }

  /**
   * Binds all auto-bound methods in a component.
   *
   * @param {object} component Component whose method is going to be bound.
   */
  function bindAutoBindMethods(component) {
    var pairs = component.__reactAutoBindPairs;
    for (var i = 0; i < pairs.length; i += 2) {
      var autoBindKey = pairs[i];
      var method = pairs[i + 1];
      component[autoBindKey] = bindAutoBindMethod(component, method);
    }
  }

  var IsMountedPreMixin = {
    componentDidMount: function() {
      this.__isMounted = true;
    }
  };

  var IsMountedPostMixin = {
    componentWillUnmount: function() {
      this.__isMounted = false;
    }
  };

  /**
   * Add more to the ReactClass base class. These are all legacy features and
   * therefore not already part of the modern ReactComponent.
   */
  var ReactClassMixin = {
    /**
     * TODO: This will be deprecated because state should always keep a consistent
     * type signature and the only use case for this, is to avoid that.
     */
    replaceState: function(newState, callback) {
      this.updater.enqueueReplaceState(this, newState, callback);
    },

    /**
     * Checks whether or not this composite component is mounted.
     * @return {boolean} True if mounted, false otherwise.
     * @protected
     * @final
     */
    isMounted: function() {
      if (process.env.NODE_ENV !== 'production') {
        warning(
          this.__didWarnIsMounted,
          '%s: isMounted is deprecated. Instead, make sure to clean up ' +
            'subscriptions and pending requests in componentWillUnmount to ' +
            'prevent memory leaks.',
          (this.constructor && this.constructor.displayName) ||
            this.name ||
            'Component'
        );
        this.__didWarnIsMounted = true;
      }
      return !!this.__isMounted;
    }
  };

  var ReactClassComponent = function() {};
  _assign(
    ReactClassComponent.prototype,
    ReactComponent.prototype,
    ReactClassMixin
  );

  /**
   * Creates a composite component class given a class specification.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  function createClass(spec) {
    // To keep our warnings more understandable, we'll use a little hack here to
    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
    // unnecessarily identify a class without displayName as 'Constructor'.
    var Constructor = identity(function(props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        warning(
          this instanceof Constructor,
          'Something is calling a React component directly. Use a factory or ' +
            'JSX instead. See: https://fb.me/react-legacyfactory'
        );
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (
          initialState === undefined &&
          this.getInitialState._isMockFunction
        ) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      _invariant(
        typeof initialState === 'object' && !Array.isArray(initialState),
        '%s.getInitialState(): must return an object or null',
        Constructor.displayName || 'ReactCompositeComponent'
      );

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
    mixSpecIntoComponent(Constructor, spec);
    mixSpecIntoComponent(Constructor, IsMountedPostMixin);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (process.env.NODE_ENV !== 'production') {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    _invariant(
      Constructor.prototype.render,
      'createClass(...): Class specification must implement a `render` method.'
    );

    if (process.env.NODE_ENV !== 'production') {
      warning(
        !Constructor.prototype.componentShouldUpdate,
        '%s has a method called ' +
          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
          'The name is phrased as a question because the function is ' +
          'expected to return a value.',
        spec.displayName || 'A component'
      );
      warning(
        !Constructor.prototype.componentWillRecieveProps,
        '%s has a method called ' +
          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
        spec.displayName || 'A component'
      );
      warning(
        !Constructor.prototype.UNSAFE_componentWillRecieveProps,
        '%s has a method called UNSAFE_componentWillRecieveProps(). ' +
          'Did you mean UNSAFE_componentWillReceiveProps()?',
        spec.displayName || 'A component'
      );
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  }

  return createClass;
}

module.exports = factory;

}).call(this,require('_process'))
}).apply(this, arguments);

},{"_process":235,"fbjs/lib/emptyObject":47,"fbjs/lib/invariant":54,"fbjs/lib/warning":61,"object-assign":232}],21:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/dom-scroll-into-view/index.js", module);
(function(){
module.exports = require('./lib/dom-scroll-into-view');

}).apply(this, arguments);

},{"./lib/dom-scroll-into-view":22}],22:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/dom-scroll-into-view/lib/dom-scroll-into-view.js", module);
(function(){
var util = require('./util');

function scrollIntoView(elem, container, config) {
  config = config || {};
  // document 归一化到 window
  if (container.nodeType === 9) {
    container = util.getWindow(container);
  }

  var allowHorizontalScroll = config.allowHorizontalScroll;
  var onlyScrollIfNeeded = config.onlyScrollIfNeeded;
  var alignWithTop = config.alignWithTop;
  var alignWithLeft = config.alignWithLeft;

  allowHorizontalScroll = allowHorizontalScroll === undefined ? true : allowHorizontalScroll;

  var isWin = util.isWindow(container);
  var elemOffset = util.offset(elem);
  var eh = util.outerHeight(elem);
  var ew = util.outerWidth(elem);
  var containerOffset, ch, cw, containerScroll,
    diffTop, diffBottom, win,
    winScroll, ww, wh;

  if (isWin) {
    win = container;
    wh = util.height(win);
    ww = util.width(win);
    winScroll = {
      left: util.scrollLeft(win),
      top: util.scrollTop(win)
    };
    // elem 相对 container 可视视窗的距离
    diffTop = {
      left: elemOffset.left - winScroll.left,
      top: elemOffset.top - winScroll.top
    };
    diffBottom = {
      left: elemOffset.left + ew - (winScroll.left + ww),
      top: elemOffset.top + eh - (winScroll.top + wh)
    };
    containerScroll = winScroll;
  } else {
    containerOffset = util.offset(container);
    ch = container.clientHeight;
    cw = container.clientWidth;
    containerScroll = {
      left: container.scrollLeft,
      top: container.scrollTop
    };
    // elem 相对 container 可视视窗的距离
    // 注意边框, offset 是边框到根节点
    diffTop = {
      left: elemOffset.left - (containerOffset.left +
      (parseFloat(util.css(container, 'borderLeftWidth')) || 0)),
      top: elemOffset.top - (containerOffset.top +
      (parseFloat(util.css(container, 'borderTopWidth')) || 0))
    };
    diffBottom = {
      left: elemOffset.left + ew -
      (containerOffset.left + cw +
      (parseFloat(util.css(container, 'borderRightWidth')) || 0)),
      top: elemOffset.top + eh -
      (containerOffset.top + ch +
      (parseFloat(util.css(container, 'borderBottomWidth')) || 0))
    };
  }

  if (diffTop.top < 0 || diffBottom.top > 0) {
    // 强制向上
    if (alignWithTop === true) {
      util.scrollTop(container, containerScroll.top + diffTop.top);
    } else if (alignWithTop === false) {
      util.scrollTop(container, containerScroll.top + diffBottom.top);
    } else {
      // 自动调整
      if (diffTop.top < 0) {
        util.scrollTop(container, containerScroll.top + diffTop.top);
      } else {
        util.scrollTop(container, containerScroll.top + diffBottom.top);
      }
    }
  } else {
    if (!onlyScrollIfNeeded) {
      alignWithTop = alignWithTop === undefined ? true : !!alignWithTop;
      if (alignWithTop) {
        util.scrollTop(container, containerScroll.top + diffTop.top);
      } else {
        util.scrollTop(container, containerScroll.top + diffBottom.top);
      }
    }
  }

  if (allowHorizontalScroll) {
    if (diffTop.left < 0 || diffBottom.left > 0) {
      // 强制向上
      if (alignWithLeft === true) {
        util.scrollLeft(container, containerScroll.left + diffTop.left);
      } else if (alignWithLeft === false) {
        util.scrollLeft(container, containerScroll.left + diffBottom.left);
      } else {
        // 自动调整
        if (diffTop.left < 0) {
          util.scrollLeft(container, containerScroll.left + diffTop.left);
        } else {
          util.scrollLeft(container, containerScroll.left + diffBottom.left);
        }
      }
    } else {
      if (!onlyScrollIfNeeded) {
        alignWithLeft = alignWithLeft === undefined ? true : !!alignWithLeft;
        if (alignWithLeft) {
          util.scrollLeft(container, containerScroll.left + diffTop.left);
        } else {
          util.scrollLeft(container, containerScroll.left + diffBottom.left);
        }
      }
    }
  }
}

module.exports = scrollIntoView;

}).apply(this, arguments);

},{"./util":23}],23:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/dom-scroll-into-view/lib/util.js", module);
(function(){
var RE_NUM = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source;

function getClientPosition(elem) {
  var box, x, y;
  var doc = elem.ownerDocument;
  var body = doc.body;
  var docElem = doc && doc.documentElement;
  // 根据 GBS 最新数据，A-Grade Browsers 都已支持 getBoundingClientRect 方法，不用再考虑传统的实现方式
  box = elem.getBoundingClientRect();

  // 注：jQuery 还考虑减去 docElem.clientLeft/clientTop
  // 但测试发现，这样反而会导致当 html 和 body 有边距/边框样式时，获取的值不正确
  // 此外，ie6 会忽略 html 的 margin 值，幸运地是没有谁会去设置 html 的 margin

  x = box.left;
  y = box.top;

  // In IE, most of the time, 2 extra pixels are added to the top and left
  // due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and
  // IE6 standards mode, this border can be overridden by setting the
  // document element's border to zero -- thus, we cannot rely on the
  // offset always being 2 pixels.

  // In quirks mode, the offset can be determined by querying the body's
  // clientLeft/clientTop, but in standards mode, it is found by querying
  // the document element's clientLeft/clientTop.  Since we already called
  // getClientBoundingRect we have already forced a reflow, so it is not
  // too expensive just to query them all.

  // ie 下应该减去窗口的边框吧，毕竟默认 absolute 都是相对窗口定位的
  // 窗口边框标准是设 documentElement ,quirks 时设置 body
  // 最好禁止在 body 和 html 上边框 ，但 ie < 9 html 默认有 2px ，减去
  // 但是非 ie 不可能设置窗口边框，body html 也不是窗口 ,ie 可以通过 html,body 设置
  // 标准 ie 下 docElem.clientTop 就是 border-top
  // ie7 html 即窗口边框改变不了。永远为 2
  // 但标准 firefox/chrome/ie9 下 docElem.clientTop 是窗口边框，即使设了 border-top 也为 0

  x -= docElem.clientLeft || body.clientLeft || 0;
  y -= docElem.clientTop || body.clientTop || 0;

  return {left: x, top: y};
}

function getScroll(w, top) {
  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];
  var method = 'scroll' + (top ? 'Top' : 'Left');
  if (typeof ret !== 'number') {
    var d = w.document;
    //ie6,7,8 standard mode
    ret = d.documentElement[method];
    if (typeof ret !== 'number') {
      //quirks mode
      ret = d.body[method];
    }
  }
  return ret;
}

function getScrollLeft(w) {
  return getScroll(w);
}

function getScrollTop(w) {
  return getScroll(w, true);
}

function getOffset(el) {
  var pos = getClientPosition(el);
  var doc = el.ownerDocument;
  var w = doc.defaultView || doc.parentWindow;
  pos.left += getScrollLeft(w);
  pos.top += getScrollTop(w);
  return pos;
}
function _getComputedStyle(elem, name, computedStyle) {
  var val = '';
  var d = elem.ownerDocument;

  // https://github.com/kissyteam/kissy/issues/61
  if ((computedStyle = (computedStyle || d.defaultView.getComputedStyle(elem, null)))) {
    val = computedStyle.getPropertyValue(name) || computedStyle[name];
  }

  return val;
}

var _RE_NUM_NO_PX = new RegExp('^(' + RE_NUM + ')(?!px)[a-z%]+$', 'i');
var RE_POS = /^(top|right|bottom|left)$/,
  CURRENT_STYLE = 'currentStyle',
  RUNTIME_STYLE = 'runtimeStyle',
  LEFT = 'left',
  PX = 'px';

function _getComputedStyleIE(elem, name) {
  // currentStyle maybe null
  // http://msdn.microsoft.com/en-us/library/ms535231.aspx
  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name];

  // 当 width/height 设置为百分比时，通过 pixelLeft 方式转换的 width/height 值
  // 一开始就处理了! CUSTOM_STYLE.height,CUSTOM_STYLE.width ,cssHook 解决@2011-08-19
  // 在 ie 下不对，需要直接用 offset 方式
  // borderWidth 等值也有问题，但考虑到 borderWidth 设为百分比的概率很小，这里就不考虑了

  // From the awesome hack by Dean Edwards
  // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291
  // If we're not dealing with a regular pixel number
  // but a number that has a weird ending, we need to convert it to pixels
  // exclude left right for relativity
  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {
    // Remember the original values
    var style = elem.style,
      left = style[LEFT],
      rsLeft = elem[RUNTIME_STYLE][LEFT];

    // prevent flashing of content
    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT];

    // Put in the new values to get a computed value out
    style[LEFT] = name === 'fontSize' ? '1em' : (ret || 0);
    ret = style.pixelLeft + PX;

    // Revert the changed values
    style[LEFT] = left;

    elem[RUNTIME_STYLE][LEFT] = rsLeft;
  }
  return ret === '' ? 'auto' : ret;
}

var getComputedStyleX;
if (typeof window !== 'undefined') {
  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;
}

// 设置 elem 相对 elem.ownerDocument 的坐标
function setOffset(elem, offset) {
  // set position first, in-case top/left are set even on static elem
  if (css(elem, 'position') === 'static') {
    elem.style.position = 'relative';
  }

  var old = getOffset(elem),
    ret = {},
    current, key;

  for (key in offset) {
    current = parseFloat(css(elem, key)) || 0;
    ret[key] = current + offset[key] - old[key];
  }
  css(elem, ret);
}

function each(arr, fn) {
  for (var i = 0; i < arr.length; i++) {
    fn(arr[i]);
  }
}

function isBorderBoxFn(elem) {
  return getComputedStyleX(elem, 'boxSizing') === 'border-box';
}

var BOX_MODELS = ['margin', 'border', 'padding'],
  CONTENT_INDEX = -1,
  PADDING_INDEX = 2,
  BORDER_INDEX = 1,
  MARGIN_INDEX = 0;

function swap(elem, options, callback) {
  var old = {},
    style = elem.style,
    name;

  // Remember the old values, and insert the new ones
  for (name in options) {
    old[name] = style[name];
    style[name] = options[name];
  }

  callback.call(elem);

  // Revert the old values
  for (name in options) {
    style[name] = old[name];
  }
}

function getPBMWidth(elem, props, which) {
  var value = 0, prop, j, i;
  for (j = 0; j < props.length; j++) {
    prop = props[j];
    if (prop) {
      for (i = 0; i < which.length; i++) {
        var cssProp;
        if (prop === 'border') {
          cssProp = prop + which[i] + 'Width';
        } else {
          cssProp = prop + which[i];
        }
        value += parseFloat(getComputedStyleX(elem, cssProp)) || 0;
      }
    }
  }
  return value;
}

/**
 * A crude way of determining if an object is a window
 * @member util
 */
function isWindow(obj) {
  // must use == for ie8
  /*jshint eqeqeq:false*/
  return obj != null && obj == obj.window;
}

var domUtils = {};

each(['Width', 'Height'], function (name) {
  domUtils['doc' + name] = function (refWin) {
    var d = refWin.document;
    return Math.max(
      //firefox chrome documentElement.scrollHeight< body.scrollHeight
      //ie standard mode : documentElement.scrollHeight> body.scrollHeight
      d.documentElement['scroll' + name],
      //quirks : documentElement.scrollHeight 最大等于可视窗口多一点？
      d.body['scroll' + name],
      domUtils['viewport' + name](d));
  };

  domUtils['viewport' + name] = function (win) {
    // pc browser includes scrollbar in window.innerWidth
    var prop = 'client' + name,
      doc = win.document,
      body = doc.body,
      documentElement = doc.documentElement,
      documentElementProp = documentElement[prop];
    // 标准模式取 documentElement
    // backcompat 取 body
    return doc.compatMode === 'CSS1Compat' && documentElementProp ||
      body && body[prop] || documentElementProp;
  };
});

/*
 得到元素的大小信息
 @param elem
 @param name
 @param {String} [extra]  'padding' : (css width) + padding
 'border' : (css width) + padding + border
 'margin' : (css width) + padding + border + margin
 */
function getWH(elem, name, extra) {
  if (isWindow(elem)) {
    return name === 'width' ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);
  } else if (elem.nodeType === 9) {
    return name === 'width' ? domUtils.docWidth(elem) : domUtils.docHeight(elem);
  }
  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'],
    borderBoxValue = name === 'width' ? elem.offsetWidth : elem.offsetHeight;
  var computedStyle = getComputedStyleX(elem);
  var isBorderBox = isBorderBoxFn(elem, computedStyle);
  var cssBoxValue = 0;
  if (borderBoxValue == null || borderBoxValue <= 0) {
    borderBoxValue = undefined;
    // Fall back to computed then un computed css if necessary
    cssBoxValue = getComputedStyleX(elem, name);
    if (cssBoxValue == null || (Number(cssBoxValue)) < 0) {
      cssBoxValue = elem.style[name] || 0;
    }
    // Normalize '', auto, and prepare for extra
    cssBoxValue = parseFloat(cssBoxValue) || 0;
  }
  if (extra === undefined) {
    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;
  }
  var borderBoxValueOrIsBorderBox = borderBoxValue !== undefined || isBorderBox;
  var val = borderBoxValue || cssBoxValue;
  if (extra === CONTENT_INDEX) {
    if (borderBoxValueOrIsBorderBox) {
      return val - getPBMWidth(elem, ['border', 'padding'],
          which, computedStyle);
    } else {
      return cssBoxValue;
    }
  } else if (borderBoxValueOrIsBorderBox) {
    return val + (extra === BORDER_INDEX ? 0 :
        (extra === PADDING_INDEX ?
          -getPBMWidth(elem, ['border'], which, computedStyle) :
          getPBMWidth(elem, ['margin'], which, computedStyle)));
  } else {
    return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra),
        which, computedStyle);
  }
}

var cssShow = {position: 'absolute', visibility: 'hidden', display: 'block'};

// fix #119 : https://github.com/kissyteam/kissy/issues/119
function getWHIgnoreDisplay(elem) {
  var val, args = arguments;
  // in case elem is window
  // elem.offsetWidth === undefined
  if (elem.offsetWidth !== 0) {
    val = getWH.apply(undefined, args);
  } else {
    swap(elem, cssShow, function () {
      val = getWH.apply(undefined, args);
    });
  }
  return val;
}

each(['width', 'height'], function (name) {
  var first = name.charAt(0).toUpperCase() + name.slice(1);
  domUtils['outer' + first] = function (el, includeMargin) {
    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);
  };
  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];

  domUtils[name] = function (elem, val) {
    if (val !== undefined) {
      if (elem) {
        var computedStyle = getComputedStyleX(elem);
        var isBorderBox = isBorderBoxFn(elem);
        if (isBorderBox) {
          val += getPBMWidth(elem, ['padding', 'border'], which, computedStyle);
        }
        return css(elem, name, val);
      }
      return;
    }
    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);
  };
});

function css(el, name, value) {
  if (typeof name === 'object') {
    for (var i in name) {
      css(el, i, name[i]);
    }
    return;
  }
  if (typeof value !== 'undefined') {
    if (typeof value === 'number') {
      value = value + 'px';
    }
    el.style[name] = value;
  } else {
    return getComputedStyleX(el, name);
  }
}

function mix(to, from) {
  for (var i in from) {
    to[i] = from[i];
  }
  return to;
}

var utils = module.exports = {
  getWindow: function (node) {
    var doc = node.ownerDocument || node;
    return doc.defaultView || doc.parentWindow;
  },
  offset: function (el, value) {
    if (typeof value !== 'undefined') {
      setOffset(el, value);
    } else {
      return getOffset(el);
    }
  },
  isWindow: isWindow,
  each: each,
  css: css,
  clone: function (obj) {
    var ret = {};
    for (var i in obj) {
      ret[i] = obj[i];
    }
    var overflow = obj.overflow;
    if (overflow) {
      for (i in obj) {
        ret.overflow[i] = obj.overflow[i];
      }
    }
    return ret;
  },
  mix: mix,
  scrollLeft: function (w, v) {
    if (isWindow(w)) {
      if (v === undefined) {
        return getScrollLeft(w);
      } else {
        window.scrollTo(v, getScrollTop(w));
      }
    } else {
      if (v === undefined) {
        return w.scrollLeft;
      } else {
        w.scrollLeft = v;
      }
    }
  },
  scrollTop: function (w, v) {
    if (isWindow(w)) {
      if (v === undefined) {
        return getScrollTop(w);
      } else {
        window.scrollTo(getScrollLeft(w), v);
      }
    } else {
      if (v === undefined) {
        return w.scrollTop;
      } else {
        w.scrollTop = v;
      }
    }
  },
  merge: function () {
    var ret = {};
    for (var i = 0; i < arguments.length; i++) {
      utils.mix(ret, arguments[i]);
    }
    return ret;
  },
  viewportWidth: 0,
  viewportHeight: 0
};

mix(utils, domUtils);

}).apply(this, arguments);

},{}],24:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/engine.io-client/lib/index.js", module);
(function(){

module.exports = require('./socket');

/**
 * Exports parser
 *
 * @api public
 *
 */
module.exports.parser = require('engine.io-parser');

}).apply(this, arguments);

},{"./socket":25,"engine.io-parser":35}],25:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/engine.io-client/lib/socket.js", module);
(function(){
/**
 * Module dependencies.
 */

var transports = require('./transports/index');
var Emitter = require('component-emitter');
var debug = require('debug')('engine.io-client:socket');
var index = require('indexof');
var parser = require('engine.io-parser');
var parseuri = require('parseuri');
var parseqs = require('parseqs');

/**
 * Module exports.
 */

module.exports = Socket;

/**
 * Socket constructor.
 *
 * @param {String|Object} uri or options
 * @param {Object} options
 * @api public
 */

function Socket (uri, opts) {
  if (!(this instanceof Socket)) return new Socket(uri, opts);

  opts = opts || {};

  if (uri && 'object' === typeof uri) {
    opts = uri;
    uri = null;
  }

  if (uri) {
    uri = parseuri(uri);
    opts.hostname = uri.host;
    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';
    opts.port = uri.port;
    if (uri.query) opts.query = uri.query;
  } else if (opts.host) {
    opts.hostname = parseuri(opts.host).host;
  }

  this.secure = null != opts.secure ? opts.secure
    : (typeof location !== 'undefined' && 'https:' === location.protocol);

  if (opts.hostname && !opts.port) {
    // if no port is specified manually, use the protocol default
    opts.port = this.secure ? '443' : '80';
  }

  this.agent = opts.agent || false;
  this.hostname = opts.hostname ||
    (typeof location !== 'undefined' ? location.hostname : 'localhost');
  this.port = opts.port || (typeof location !== 'undefined' && location.port
      ? location.port
      : (this.secure ? 443 : 80));
  this.query = opts.query || {};
  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);
  this.upgrade = false !== opts.upgrade;
  this.path = (opts.path || '/engine.io').replace(/\/$/, '') + '/';
  this.forceJSONP = !!opts.forceJSONP;
  this.jsonp = false !== opts.jsonp;
  this.forceBase64 = !!opts.forceBase64;
  this.enablesXDR = !!opts.enablesXDR;
  this.timestampParam = opts.timestampParam || 't';
  this.timestampRequests = opts.timestampRequests;
  this.transports = opts.transports || ['polling', 'websocket'];
  this.transportOptions = opts.transportOptions || {};
  this.readyState = '';
  this.writeBuffer = [];
  this.prevBufferLen = 0;
  this.policyPort = opts.policyPort || 843;
  this.rememberUpgrade = opts.rememberUpgrade || false;
  this.binaryType = null;
  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;
  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;

  if (true === this.perMessageDeflate) this.perMessageDeflate = {};
  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {
    this.perMessageDeflate.threshold = 1024;
  }

  // SSL options for Node.js client
  this.pfx = opts.pfx || null;
  this.key = opts.key || null;
  this.passphrase = opts.passphrase || null;
  this.cert = opts.cert || null;
  this.ca = opts.ca || null;
  this.ciphers = opts.ciphers || null;
  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;
  this.forceNode = !!opts.forceNode;

  // detect ReactNative environment
  this.isReactNative = (typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative');

  // other options for Node.js or ReactNative client
  if (typeof self === 'undefined' || this.isReactNative) {
    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {
      this.extraHeaders = opts.extraHeaders;
    }

    if (opts.localAddress) {
      this.localAddress = opts.localAddress;
    }
  }

  // set on handshake
  this.id = null;
  this.upgrades = null;
  this.pingInterval = null;
  this.pingTimeout = null;

  // set on heartbeat
  this.pingIntervalTimer = null;
  this.pingTimeoutTimer = null;

  this.open();
}

Socket.priorWebsocketSuccess = false;

/**
 * Mix in `Emitter`.
 */

Emitter(Socket.prototype);

/**
 * Protocol version.
 *
 * @api public
 */

Socket.protocol = parser.protocol; // this is an int

/**
 * Expose deps for legacy compatibility
 * and standalone browser access.
 */

Socket.Socket = Socket;
Socket.Transport = require('./transport');
Socket.transports = require('./transports/index');
Socket.parser = require('engine.io-parser');

/**
 * Creates transport of the given type.
 *
 * @param {String} transport name
 * @return {Transport}
 * @api private
 */

Socket.prototype.createTransport = function (name) {
  debug('creating transport "%s"', name);
  var query = clone(this.query);

  // append engine.io protocol identifier
  query.EIO = parser.protocol;

  // transport name
  query.transport = name;

  // per-transport options
  var options = this.transportOptions[name] || {};

  // session id if we already have one
  if (this.id) query.sid = this.id;

  var transport = new transports[name]({
    query: query,
    socket: this,
    agent: options.agent || this.agent,
    hostname: options.hostname || this.hostname,
    port: options.port || this.port,
    secure: options.secure || this.secure,
    path: options.path || this.path,
    forceJSONP: options.forceJSONP || this.forceJSONP,
    jsonp: options.jsonp || this.jsonp,
    forceBase64: options.forceBase64 || this.forceBase64,
    enablesXDR: options.enablesXDR || this.enablesXDR,
    timestampRequests: options.timestampRequests || this.timestampRequests,
    timestampParam: options.timestampParam || this.timestampParam,
    policyPort: options.policyPort || this.policyPort,
    pfx: options.pfx || this.pfx,
    key: options.key || this.key,
    passphrase: options.passphrase || this.passphrase,
    cert: options.cert || this.cert,
    ca: options.ca || this.ca,
    ciphers: options.ciphers || this.ciphers,
    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,
    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,
    extraHeaders: options.extraHeaders || this.extraHeaders,
    forceNode: options.forceNode || this.forceNode,
    localAddress: options.localAddress || this.localAddress,
    requestTimeout: options.requestTimeout || this.requestTimeout,
    protocols: options.protocols || void (0),
    isReactNative: this.isReactNative
  });

  return transport;
};

function clone (obj) {
  var o = {};
  for (var i in obj) {
    if (obj.hasOwnProperty(i)) {
      o[i] = obj[i];
    }
  }
  return o;
}

/**
 * Initializes transport to use and starts probe.
 *
 * @api private
 */
Socket.prototype.open = function () {
  var transport;
  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {
    transport = 'websocket';
  } else if (0 === this.transports.length) {
    // Emit error on next tick so it can be listened to
    var self = this;
    setTimeout(function () {
      self.emit('error', 'No transports available');
    }, 0);
    return;
  } else {
    transport = this.transports[0];
  }
  this.readyState = 'opening';

  // Retry with the next transport if the transport is disabled (jsonp: false)
  try {
    transport = this.createTransport(transport);
  } catch (e) {
    this.transports.shift();
    this.open();
    return;
  }

  transport.open();
  this.setTransport(transport);
};

/**
 * Sets the current transport. Disables the existing one (if any).
 *
 * @api private
 */

Socket.prototype.setTransport = function (transport) {
  debug('setting transport %s', transport.name);
  var self = this;

  if (this.transport) {
    debug('clearing existing transport %s', this.transport.name);
    this.transport.removeAllListeners();
  }

  // set up transport
  this.transport = transport;

  // set up transport listeners
  transport
  .on('drain', function () {
    self.onDrain();
  })
  .on('packet', function (packet) {
    self.onPacket(packet);
  })
  .on('error', function (e) {
    self.onError(e);
  })
  .on('close', function () {
    self.onClose('transport close');
  });
};

/**
 * Probes a transport.
 *
 * @param {String} transport name
 * @api private
 */

Socket.prototype.probe = function (name) {
  debug('probing transport "%s"', name);
  var transport = this.createTransport(name, { probe: 1 });
  var failed = false;
  var self = this;

  Socket.priorWebsocketSuccess = false;

  function onTransportOpen () {
    if (self.onlyBinaryUpgrades) {
      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;
      failed = failed || upgradeLosesBinary;
    }
    if (failed) return;

    debug('probe transport "%s" opened', name);
    transport.send([{ type: 'ping', data: 'probe' }]);
    transport.once('packet', function (msg) {
      if (failed) return;
      if ('pong' === msg.type && 'probe' === msg.data) {
        debug('probe transport "%s" pong', name);
        self.upgrading = true;
        self.emit('upgrading', transport);
        if (!transport) return;
        Socket.priorWebsocketSuccess = 'websocket' === transport.name;

        debug('pausing current transport "%s"', self.transport.name);
        self.transport.pause(function () {
          if (failed) return;
          if ('closed' === self.readyState) return;
          debug('changing transport and sending upgrade packet');

          cleanup();

          self.setTransport(transport);
          transport.send([{ type: 'upgrade' }]);
          self.emit('upgrade', transport);
          transport = null;
          self.upgrading = false;
          self.flush();
        });
      } else {
        debug('probe transport "%s" failed', name);
        var err = new Error('probe error');
        err.transport = transport.name;
        self.emit('upgradeError', err);
      }
    });
  }

  function freezeTransport () {
    if (failed) return;

    // Any callback called by transport should be ignored since now
    failed = true;

    cleanup();

    transport.close();
    transport = null;
  }

  // Handle any error that happens while probing
  function onerror (err) {
    var error = new Error('probe error: ' + err);
    error.transport = transport.name;

    freezeTransport();

    debug('probe transport "%s" failed because of error: %s', name, err);

    self.emit('upgradeError', error);
  }

  function onTransportClose () {
    onerror('transport closed');
  }

  // When the socket is closed while we're probing
  function onclose () {
    onerror('socket closed');
  }

  // When the socket is upgraded while we're probing
  function onupgrade (to) {
    if (transport && to.name !== transport.name) {
      debug('"%s" works - aborting "%s"', to.name, transport.name);
      freezeTransport();
    }
  }

  // Remove all listeners on the transport and on self
  function cleanup () {
    transport.removeListener('open', onTransportOpen);
    transport.removeListener('error', onerror);
    transport.removeListener('close', onTransportClose);
    self.removeListener('close', onclose);
    self.removeListener('upgrading', onupgrade);
  }

  transport.once('open', onTransportOpen);
  transport.once('error', onerror);
  transport.once('close', onTransportClose);

  this.once('close', onclose);
  this.once('upgrading', onupgrade);

  transport.open();
};

/**
 * Called when connection is deemed open.
 *
 * @api public
 */

Socket.prototype.onOpen = function () {
  debug('socket open');
  this.readyState = 'open';
  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;
  this.emit('open');
  this.flush();

  // we check for `readyState` in case an `open`
  // listener already closed the socket
  if ('open' === this.readyState && this.upgrade && this.transport.pause) {
    debug('starting upgrade probes');
    for (var i = 0, l = this.upgrades.length; i < l; i++) {
      this.probe(this.upgrades[i]);
    }
  }
};

/**
 * Handles a packet.
 *
 * @api private
 */

Socket.prototype.onPacket = function (packet) {
  if ('opening' === this.readyState || 'open' === this.readyState ||
      'closing' === this.readyState) {
    debug('socket receive: type "%s", data "%s"', packet.type, packet.data);

    this.emit('packet', packet);

    // Socket is live - any packet counts
    this.emit('heartbeat');

    switch (packet.type) {
      case 'open':
        this.onHandshake(JSON.parse(packet.data));
        break;

      case 'pong':
        this.setPing();
        this.emit('pong');
        break;

      case 'error':
        var err = new Error('server error');
        err.code = packet.data;
        this.onError(err);
        break;

      case 'message':
        this.emit('data', packet.data);
        this.emit('message', packet.data);
        break;
    }
  } else {
    debug('packet received with socket readyState "%s"', this.readyState);
  }
};

/**
 * Called upon handshake completion.
 *
 * @param {Object} handshake obj
 * @api private
 */

Socket.prototype.onHandshake = function (data) {
  this.emit('handshake', data);
  this.id = data.sid;
  this.transport.query.sid = data.sid;
  this.upgrades = this.filterUpgrades(data.upgrades);
  this.pingInterval = data.pingInterval;
  this.pingTimeout = data.pingTimeout;
  this.onOpen();
  // In case open handler closes socket
  if ('closed' === this.readyState) return;
  this.setPing();

  // Prolong liveness of socket on heartbeat
  this.removeListener('heartbeat', this.onHeartbeat);
  this.on('heartbeat', this.onHeartbeat);
};

/**
 * Resets ping timeout.
 *
 * @api private
 */

Socket.prototype.onHeartbeat = function (timeout) {
  clearTimeout(this.pingTimeoutTimer);
  var self = this;
  self.pingTimeoutTimer = setTimeout(function () {
    if ('closed' === self.readyState) return;
    self.onClose('ping timeout');
  }, timeout || (self.pingInterval + self.pingTimeout));
};

/**
 * Pings server every `this.pingInterval` and expects response
 * within `this.pingTimeout` or closes connection.
 *
 * @api private
 */

Socket.prototype.setPing = function () {
  var self = this;
  clearTimeout(self.pingIntervalTimer);
  self.pingIntervalTimer = setTimeout(function () {
    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);
    self.ping();
    self.onHeartbeat(self.pingTimeout);
  }, self.pingInterval);
};

/**
* Sends a ping packet.
*
* @api private
*/

Socket.prototype.ping = function () {
  var self = this;
  this.sendPacket('ping', function () {
    self.emit('ping');
  });
};

/**
 * Called on `drain` event
 *
 * @api private
 */

Socket.prototype.onDrain = function () {
  this.writeBuffer.splice(0, this.prevBufferLen);

  // setting prevBufferLen = 0 is very important
  // for example, when upgrading, upgrade packet is sent over,
  // and a nonzero prevBufferLen could cause problems on `drain`
  this.prevBufferLen = 0;

  if (0 === this.writeBuffer.length) {
    this.emit('drain');
  } else {
    this.flush();
  }
};

/**
 * Flush write buffers.
 *
 * @api private
 */

Socket.prototype.flush = function () {
  if ('closed' !== this.readyState && this.transport.writable &&
    !this.upgrading && this.writeBuffer.length) {
    debug('flushing %d packets in socket', this.writeBuffer.length);
    this.transport.send(this.writeBuffer);
    // keep track of current length of writeBuffer
    // splice writeBuffer and callbackBuffer on `drain`
    this.prevBufferLen = this.writeBuffer.length;
    this.emit('flush');
  }
};

/**
 * Sends a message.
 *
 * @param {String} message.
 * @param {Function} callback function.
 * @param {Object} options.
 * @return {Socket} for chaining.
 * @api public
 */

Socket.prototype.write =
Socket.prototype.send = function (msg, options, fn) {
  this.sendPacket('message', msg, options, fn);
  return this;
};

/**
 * Sends a packet.
 *
 * @param {String} packet type.
 * @param {String} data.
 * @param {Object} options.
 * @param {Function} callback function.
 * @api private
 */

Socket.prototype.sendPacket = function (type, data, options, fn) {
  if ('function' === typeof data) {
    fn = data;
    data = undefined;
  }

  if ('function' === typeof options) {
    fn = options;
    options = null;
  }

  if ('closing' === this.readyState || 'closed' === this.readyState) {
    return;
  }

  options = options || {};
  options.compress = false !== options.compress;

  var packet = {
    type: type,
    data: data,
    options: options
  };
  this.emit('packetCreate', packet);
  this.writeBuffer.push(packet);
  if (fn) this.once('flush', fn);
  this.flush();
};

/**
 * Closes the connection.
 *
 * @api private
 */

Socket.prototype.close = function () {
  if ('opening' === this.readyState || 'open' === this.readyState) {
    this.readyState = 'closing';

    var self = this;

    if (this.writeBuffer.length) {
      this.once('drain', function () {
        if (this.upgrading) {
          waitForUpgrade();
        } else {
          close();
        }
      });
    } else if (this.upgrading) {
      waitForUpgrade();
    } else {
      close();
    }
  }

  function close () {
    self.onClose('forced close');
    debug('socket closing - telling transport to close');
    self.transport.close();
  }

  function cleanupAndClose () {
    self.removeListener('upgrade', cleanupAndClose);
    self.removeListener('upgradeError', cleanupAndClose);
    close();
  }

  function waitForUpgrade () {
    // wait for upgrade to finish since we can't send packets while pausing a transport
    self.once('upgrade', cleanupAndClose);
    self.once('upgradeError', cleanupAndClose);
  }

  return this;
};

/**
 * Called upon transport error
 *
 * @api private
 */

Socket.prototype.onError = function (err) {
  debug('socket error %j', err);
  Socket.priorWebsocketSuccess = false;
  this.emit('error', err);
  this.onClose('transport error', err);
};

/**
 * Called upon transport close.
 *
 * @api private
 */

Socket.prototype.onClose = function (reason, desc) {
  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {
    debug('socket close with reason: "%s"', reason);
    var self = this;

    // clear timers
    clearTimeout(this.pingIntervalTimer);
    clearTimeout(this.pingTimeoutTimer);

    // stop event from firing again for transport
    this.transport.removeAllListeners('close');

    // ensure transport won't stay open
    this.transport.close();

    // ignore further transport communication
    this.transport.removeAllListeners();

    // set ready state
    this.readyState = 'closed';

    // clear session id
    this.id = null;

    // emit close event
    this.emit('close', reason, desc);

    // clean buffers after, so users can still
    // grab the buffers on `close` event
    self.writeBuffer = [];
    self.prevBufferLen = 0;
  }
};

/**
 * Filters upgrades, returning only those matching client transports.
 *
 * @param {Array} server upgrades
 * @api private
 *
 */

Socket.prototype.filterUpgrades = function (upgrades) {
  var filteredUpgrades = [];
  for (var i = 0, j = upgrades.length; i < j; i++) {
    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);
  }
  return filteredUpgrades;
};

}).apply(this, arguments);

},{"./transport":26,"./transports/index":27,"component-emitter":18,"debug":33,"engine.io-parser":35,"indexof":67,"parseqs":233,"parseuri":234}],26:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/engine.io-client/lib/transport.js", module);
(function(){
/**
 * Module dependencies.
 */

var parser = require('engine.io-parser');
var Emitter = require('component-emitter');

/**
 * Module exports.
 */

module.exports = Transport;

/**
 * Transport abstract constructor.
 *
 * @param {Object} options.
 * @api private
 */

function Transport (opts) {
  this.path = opts.path;
  this.hostname = opts.hostname;
  this.port = opts.port;
  this.secure = opts.secure;
  this.query = opts.query;
  this.timestampParam = opts.timestampParam;
  this.timestampRequests = opts.timestampRequests;
  this.readyState = '';
  this.agent = opts.agent || false;
  this.socket = opts.socket;
  this.enablesXDR = opts.enablesXDR;

  // SSL options for Node.js client
  this.pfx = opts.pfx;
  this.key = opts.key;
  this.passphrase = opts.passphrase;
  this.cert = opts.cert;
  this.ca = opts.ca;
  this.ciphers = opts.ciphers;
  this.rejectUnauthorized = opts.rejectUnauthorized;
  this.forceNode = opts.forceNode;

  // results of ReactNative environment detection
  this.isReactNative = opts.isReactNative;

  // other options for Node.js client
  this.extraHeaders = opts.extraHeaders;
  this.localAddress = opts.localAddress;
}

/**
 * Mix in `Emitter`.
 */

Emitter(Transport.prototype);

/**
 * Emits an error.
 *
 * @param {String} str
 * @return {Transport} for chaining
 * @api public
 */

Transport.prototype.onError = function (msg, desc) {
  var err = new Error(msg);
  err.type = 'TransportError';
  err.description = desc;
  this.emit('error', err);
  return this;
};

/**
 * Opens the transport.
 *
 * @api public
 */

Transport.prototype.open = function () {
  if ('closed' === this.readyState || '' === this.readyState) {
    this.readyState = 'opening';
    this.doOpen();
  }

  return this;
};

/**
 * Closes the transport.
 *
 * @api private
 */

Transport.prototype.close = function () {
  if ('opening' === this.readyState || 'open' === this.readyState) {
    this.doClose();
    this.onClose();
  }

  return this;
};

/**
 * Sends multiple packets.
 *
 * @param {Array} packets
 * @api private
 */

Transport.prototype.send = function (packets) {
  if ('open' === this.readyState) {
    this.write(packets);
  } else {
    throw new Error('Transport not open');
  }
};

/**
 * Called upon open
 *
 * @api private
 */

Transport.prototype.onOpen = function () {
  this.readyState = 'open';
  this.writable = true;
  this.emit('open');
};

/**
 * Called with data.
 *
 * @param {String} data
 * @api private
 */

Transport.prototype.onData = function (data) {
  var packet = parser.decodePacket(data, this.socket.binaryType);
  this.onPacket(packet);
};

/**
 * Called with a decoded packet.
 */

Transport.prototype.onPacket = function (packet) {
  this.emit('packet', packet);
};

/**
 * Called upon close.
 *
 * @api private
 */

Transport.prototype.onClose = function () {
  this.readyState = 'closed';
  this.emit('close');
};

}).apply(this, arguments);

},{"component-emitter":18,"engine.io-parser":35}],27:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/engine.io-client/lib/transports/index.js", module);
(function(){
/**
 * Module dependencies
 */

var XMLHttpRequest = require('xmlhttprequest-ssl');
var XHR = require('./polling-xhr');
var JSONP = require('./polling-jsonp');
var websocket = require('./websocket');

/**
 * Export transports.
 */

exports.polling = polling;
exports.websocket = websocket;

/**
 * Polling transport polymorphic constructor.
 * Decides on xhr vs jsonp based on feature detection.
 *
 * @api private
 */

function polling (opts) {
  var xhr;
  var xd = false;
  var xs = false;
  var jsonp = false !== opts.jsonp;

  if (typeof location !== 'undefined') {
    var isSSL = 'https:' === location.protocol;
    var port = location.port;

    // some user agents have empty `location.port`
    if (!port) {
      port = isSSL ? 443 : 80;
    }

    xd = opts.hostname !== location.hostname || port !== opts.port;
    xs = opts.secure !== isSSL;
  }

  opts.xdomain = xd;
  opts.xscheme = xs;
  xhr = new XMLHttpRequest(opts);

  if ('open' in xhr && !opts.forceJSONP) {
    return new XHR(opts);
  } else {
    if (!jsonp) throw new Error('JSONP disabled');
    return new JSONP(opts);
  }
}

}).apply(this, arguments);

},{"./polling-jsonp":28,"./polling-xhr":29,"./websocket":31,"xmlhttprequest-ssl":32}],28:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/engine.io-client/lib/transports/polling-jsonp.js", module);
(function(){
(function (global){
/**
 * Module requirements.
 */

var Polling = require('./polling');
var inherit = require('component-inherit');

/**
 * Module exports.
 */

module.exports = JSONPPolling;

/**
 * Cached regular expressions.
 */

var rNewline = /\n/g;
var rEscapedNewline = /\\n/g;

/**
 * Global JSONP callbacks.
 */

var callbacks;

/**
 * Noop.
 */

function empty () { }

/**
 * Until https://github.com/tc39/proposal-global is shipped.
 */
function glob () {
  return typeof self !== 'undefined' ? self
      : typeof window !== 'undefined' ? window
      : typeof global !== 'undefined' ? global : {};
}

/**
 * JSONP Polling constructor.
 *
 * @param {Object} opts.
 * @api public
 */

function JSONPPolling (opts) {
  Polling.call(this, opts);

  this.query = this.query || {};

  // define global callbacks array if not present
  // we do this here (lazily) to avoid unneeded global pollution
  if (!callbacks) {
    // we need to consider multiple engines in the same page
    var global = glob();
    callbacks = global.___eio = (global.___eio || []);
  }

  // callback identifier
  this.index = callbacks.length;

  // add callback to jsonp global
  var self = this;
  callbacks.push(function (msg) {
    self.onData(msg);
  });

  // append to query string
  this.query.j = this.index;

  // prevent spurious errors from being emitted when the window is unloaded
  if (typeof addEventListener === 'function') {
    addEventListener('beforeunload', function () {
      if (self.script) self.script.onerror = empty;
    }, false);
  }
}

/**
 * Inherits from Polling.
 */

inherit(JSONPPolling, Polling);

/*
 * JSONP only supports binary as base64 encoded strings
 */

JSONPPolling.prototype.supportsBinary = false;

/**
 * Closes the socket.
 *
 * @api private
 */

JSONPPolling.prototype.doClose = function () {
  if (this.script) {
    this.script.parentNode.removeChild(this.script);
    this.script = null;
  }

  if (this.form) {
    this.form.parentNode.removeChild(this.form);
    this.form = null;
    this.iframe = null;
  }

  Polling.prototype.doClose.call(this);
};

/**
 * Starts a poll cycle.
 *
 * @api private
 */

JSONPPolling.prototype.doPoll = function () {
  var self = this;
  var script = document.createElement('script');

  if (this.script) {
    this.script.parentNode.removeChild(this.script);
    this.script = null;
  }

  script.async = true;
  script.src = this.uri();
  script.onerror = function (e) {
    self.onError('jsonp poll error', e);
  };

  var insertAt = document.getElementsByTagName('script')[0];
  if (insertAt) {
    insertAt.parentNode.insertBefore(script, insertAt);
  } else {
    (document.head || document.body).appendChild(script);
  }
  this.script = script;

  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);

  if (isUAgecko) {
    setTimeout(function () {
      var iframe = document.createElement('iframe');
      document.body.appendChild(iframe);
      document.body.removeChild(iframe);
    }, 100);
  }
};

/**
 * Writes with a hidden iframe.
 *
 * @param {String} data to send
 * @param {Function} called upon flush.
 * @api private
 */

JSONPPolling.prototype.doWrite = function (data, fn) {
  var self = this;

  if (!this.form) {
    var form = document.createElement('form');
    var area = document.createElement('textarea');
    var id = this.iframeId = 'eio_iframe_' + this.index;
    var iframe;

    form.className = 'socketio';
    form.style.position = 'absolute';
    form.style.top = '-1000px';
    form.style.left = '-1000px';
    form.target = id;
    form.method = 'POST';
    form.setAttribute('accept-charset', 'utf-8');
    area.name = 'd';
    form.appendChild(area);
    document.body.appendChild(form);

    this.form = form;
    this.area = area;
  }

  this.form.action = this.uri();

  function complete () {
    initIframe();
    fn();
  }

  function initIframe () {
    if (self.iframe) {
      try {
        self.form.removeChild(self.iframe);
      } catch (e) {
        self.onError('jsonp polling iframe removal error', e);
      }
    }

    try {
      // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
      var html = '<iframe src="javascript:0" name="' + self.iframeId + '">';
      iframe = document.createElement(html);
    } catch (e) {
      iframe = document.createElement('iframe');
      iframe.name = self.iframeId;
      iframe.src = 'javascript:0';
    }

    iframe.id = self.iframeId;

    self.form.appendChild(iframe);
    self.iframe = iframe;
  }

  initIframe();

  // escape \n to prevent it from being converted into \r\n by some UAs
  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side
  data = data.replace(rEscapedNewline, '\\\n');
  this.area.value = data.replace(rNewline, '\\n');

  try {
    this.form.submit();
  } catch (e) {}

  if (this.iframe.attachEvent) {
    this.iframe.onreadystatechange = function () {
      if (self.iframe.readyState === 'complete') {
        complete();
      }
    };
  } else {
    this.iframe.onload = complete;
  }
};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
}).apply(this, arguments);

},{"./polling":30,"component-inherit":19}],29:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/engine.io-client/lib/transports/polling-xhr.js", module);
(function(){
/* global attachEvent */

/**
 * Module requirements.
 */

var XMLHttpRequest = require('xmlhttprequest-ssl');
var Polling = require('./polling');
var Emitter = require('component-emitter');
var inherit = require('component-inherit');
var debug = require('debug')('engine.io-client:polling-xhr');

/**
 * Module exports.
 */

module.exports = XHR;
module.exports.Request = Request;

/**
 * Empty function
 */

function empty () {}

/**
 * XHR Polling constructor.
 *
 * @param {Object} opts
 * @api public
 */

function XHR (opts) {
  Polling.call(this, opts);
  this.requestTimeout = opts.requestTimeout;
  this.extraHeaders = opts.extraHeaders;

  if (typeof location !== 'undefined') {
    var isSSL = 'https:' === location.protocol;
    var port = location.port;

    // some user agents have empty `location.port`
    if (!port) {
      port = isSSL ? 443 : 80;
    }

    this.xd = (typeof location !== 'undefined' && opts.hostname !== location.hostname) ||
      port !== opts.port;
    this.xs = opts.secure !== isSSL;
  }
}

/**
 * Inherits from Polling.
 */

inherit(XHR, Polling);

/**
 * XHR supports binary
 */

XHR.prototype.supportsBinary = true;

/**
 * Creates a request.
 *
 * @param {String} method
 * @api private
 */

XHR.prototype.request = function (opts) {
  opts = opts || {};
  opts.uri = this.uri();
  opts.xd = this.xd;
  opts.xs = this.xs;
  opts.agent = this.agent || false;
  opts.supportsBinary = this.supportsBinary;
  opts.enablesXDR = this.enablesXDR;

  // SSL options for Node.js client
  opts.pfx = this.pfx;
  opts.key = this.key;
  opts.passphrase = this.passphrase;
  opts.cert = this.cert;
  opts.ca = this.ca;
  opts.ciphers = this.ciphers;
  opts.rejectUnauthorized = this.rejectUnauthorized;
  opts.requestTimeout = this.requestTimeout;

  // other options for Node.js client
  opts.extraHeaders = this.extraHeaders;

  return new Request(opts);
};

/**
 * Sends data.
 *
 * @param {String} data to send.
 * @param {Function} called upon flush.
 * @api private
 */

XHR.prototype.doWrite = function (data, fn) {
  var isBinary = typeof data !== 'string' && data !== undefined;
  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });
  var self = this;
  req.on('success', fn);
  req.on('error', function (err) {
    self.onError('xhr post error', err);
  });
  this.sendXhr = req;
};

/**
 * Starts a poll cycle.
 *
 * @api private
 */

XHR.prototype.doPoll = function () {
  debug('xhr poll');
  var req = this.request();
  var self = this;
  req.on('data', function (data) {
    self.onData(data);
  });
  req.on('error', function (err) {
    self.onError('xhr poll error', err);
  });
  this.pollXhr = req;
};

/**
 * Request constructor
 *
 * @param {Object} options
 * @api public
 */

function Request (opts) {
  this.method = opts.method || 'GET';
  this.uri = opts.uri;
  this.xd = !!opts.xd;
  this.xs = !!opts.xs;
  this.async = false !== opts.async;
  this.data = undefined !== opts.data ? opts.data : null;
  this.agent = opts.agent;
  this.isBinary = opts.isBinary;
  this.supportsBinary = opts.supportsBinary;
  this.enablesXDR = opts.enablesXDR;
  this.requestTimeout = opts.requestTimeout;

  // SSL options for Node.js client
  this.pfx = opts.pfx;
  this.key = opts.key;
  this.passphrase = opts.passphrase;
  this.cert = opts.cert;
  this.ca = opts.ca;
  this.ciphers = opts.ciphers;
  this.rejectUnauthorized = opts.rejectUnauthorized;

  // other options for Node.js client
  this.extraHeaders = opts.extraHeaders;

  this.create();
}

/**
 * Mix in `Emitter`.
 */

Emitter(Request.prototype);

/**
 * Creates the XHR object and sends the request.
 *
 * @api private
 */

Request.prototype.create = function () {
  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };

  // SSL options for Node.js client
  opts.pfx = this.pfx;
  opts.key = this.key;
  opts.passphrase = this.passphrase;
  opts.cert = this.cert;
  opts.ca = this.ca;
  opts.ciphers = this.ciphers;
  opts.rejectUnauthorized = this.rejectUnauthorized;

  var xhr = this.xhr = new XMLHttpRequest(opts);
  var self = this;

  try {
    debug('xhr open %s: %s', this.method, this.uri);
    xhr.open(this.method, this.uri, this.async);
    try {
      if (this.extraHeaders) {
        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);
        for (var i in this.extraHeaders) {
          if (this.extraHeaders.hasOwnProperty(i)) {
            xhr.setRequestHeader(i, this.extraHeaders[i]);
          }
        }
      }
    } catch (e) {}

    if ('POST' === this.method) {
      try {
        if (this.isBinary) {
          xhr.setRequestHeader('Content-type', 'application/octet-stream');
        } else {
          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');
        }
      } catch (e) {}
    }

    try {
      xhr.setRequestHeader('Accept', '*/*');
    } catch (e) {}

    // ie6 check
    if ('withCredentials' in xhr) {
      xhr.withCredentials = true;
    }

    if (this.requestTimeout) {
      xhr.timeout = this.requestTimeout;
    }

    if (this.hasXDR()) {
      xhr.onload = function () {
        self.onLoad();
      };
      xhr.onerror = function () {
        self.onError(xhr.responseText);
      };
    } else {
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 2) {
          try {
            var contentType = xhr.getResponseHeader('Content-Type');
            if (self.supportsBinary && contentType === 'application/octet-stream') {
              xhr.responseType = 'arraybuffer';
            }
          } catch (e) {}
        }
        if (4 !== xhr.readyState) return;
        if (200 === xhr.status || 1223 === xhr.status) {
          self.onLoad();
        } else {
          // make sure the `error` event handler that's user-set
          // does not throw in the same tick and gets caught here
          setTimeout(function () {
            self.onError(xhr.status);
          }, 0);
        }
      };
    }

    debug('xhr data %s', this.data);
    xhr.send(this.data);
  } catch (e) {
    // Need to defer since .create() is called directly fhrom the constructor
    // and thus the 'error' event can only be only bound *after* this exception
    // occurs.  Therefore, also, we cannot throw here at all.
    setTimeout(function () {
      self.onError(e);
    }, 0);
    return;
  }

  if (typeof document !== 'undefined') {
    this.index = Request.requestsCount++;
    Request.requests[this.index] = this;
  }
};

/**
 * Called upon successful response.
 *
 * @api private
 */

Request.prototype.onSuccess = function () {
  this.emit('success');
  this.cleanup();
};

/**
 * Called if we have data.
 *
 * @api private
 */

Request.prototype.onData = function (data) {
  this.emit('data', data);
  this.onSuccess();
};

/**
 * Called upon error.
 *
 * @api private
 */

Request.prototype.onError = function (err) {
  this.emit('error', err);
  this.cleanup(true);
};

/**
 * Cleans up house.
 *
 * @api private
 */

Request.prototype.cleanup = function (fromError) {
  if ('undefined' === typeof this.xhr || null === this.xhr) {
    return;
  }
  // xmlhttprequest
  if (this.hasXDR()) {
    this.xhr.onload = this.xhr.onerror = empty;
  } else {
    this.xhr.onreadystatechange = empty;
  }

  if (fromError) {
    try {
      this.xhr.abort();
    } catch (e) {}
  }

  if (typeof document !== 'undefined') {
    delete Request.requests[this.index];
  }

  this.xhr = null;
};

/**
 * Called upon load.
 *
 * @api private
 */

Request.prototype.onLoad = function () {
  var data;
  try {
    var contentType;
    try {
      contentType = this.xhr.getResponseHeader('Content-Type');
    } catch (e) {}
    if (contentType === 'application/octet-stream') {
      data = this.xhr.response || this.xhr.responseText;
    } else {
      data = this.xhr.responseText;
    }
  } catch (e) {
    this.onError(e);
  }
  if (null != data) {
    this.onData(data);
  }
};

/**
 * Check if it has XDomainRequest.
 *
 * @api private
 */

Request.prototype.hasXDR = function () {
  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;
};

/**
 * Aborts the request.
 *
 * @api public
 */

Request.prototype.abort = function () {
  this.cleanup();
};

/**
 * Aborts pending requests when unloading the window. This is needed to prevent
 * memory leaks (e.g. when using IE) and to ensure that no spurious error is
 * emitted.
 */

Request.requestsCount = 0;
Request.requests = {};

if (typeof document !== 'undefined') {
  if (typeof attachEvent === 'function') {
    attachEvent('onunload', unloadHandler);
  } else if (typeof addEventListener === 'function') {
    var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';
    addEventListener(terminationEvent, unloadHandler, false);
  }
}

function unloadHandler () {
  for (var i in Request.requests) {
    if (Request.requests.hasOwnProperty(i)) {
      Request.requests[i].abort();
    }
  }
}

}).apply(this, arguments);

},{"./polling":30,"component-emitter":18,"component-inherit":19,"debug":33,"xmlhttprequest-ssl":32}],30:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/engine.io-client/lib/transports/polling.js", module);
(function(){
/**
 * Module dependencies.
 */

var Transport = require('../transport');
var parseqs = require('parseqs');
var parser = require('engine.io-parser');
var inherit = require('component-inherit');
var yeast = require('yeast');
var debug = require('debug')('engine.io-client:polling');

/**
 * Module exports.
 */

module.exports = Polling;

/**
 * Is XHR2 supported?
 */

var hasXHR2 = (function () {
  var XMLHttpRequest = require('xmlhttprequest-ssl');
  var xhr = new XMLHttpRequest({ xdomain: false });
  return null != xhr.responseType;
})();

/**
 * Polling interface.
 *
 * @param {Object} opts
 * @api private
 */

function Polling (opts) {
  var forceBase64 = (opts && opts.forceBase64);
  if (!hasXHR2 || forceBase64) {
    this.supportsBinary = false;
  }
  Transport.call(this, opts);
}

/**
 * Inherits from Transport.
 */

inherit(Polling, Transport);

/**
 * Transport name.
 */

Polling.prototype.name = 'polling';

/**
 * Opens the socket (triggers polling). We write a PING message to determine
 * when the transport is open.
 *
 * @api private
 */

Polling.prototype.doOpen = function () {
  this.poll();
};

/**
 * Pauses polling.
 *
 * @param {Function} callback upon buffers are flushed and transport is paused
 * @api private
 */

Polling.prototype.pause = function (onPause) {
  var self = this;

  this.readyState = 'pausing';

  function pause () {
    debug('paused');
    self.readyState = 'paused';
    onPause();
  }

  if (this.polling || !this.writable) {
    var total = 0;

    if (this.polling) {
      debug('we are currently polling - waiting to pause');
      total++;
      this.once('pollComplete', function () {
        debug('pre-pause polling complete');
        --total || pause();
      });
    }

    if (!this.writable) {
      debug('we are currently writing - waiting to pause');
      total++;
      this.once('drain', function () {
        debug('pre-pause writing complete');
        --total || pause();
      });
    }
  } else {
    pause();
  }
};

/**
 * Starts polling cycle.
 *
 * @api public
 */

Polling.prototype.poll = function () {
  debug('polling');
  this.polling = true;
  this.doPoll();
  this.emit('poll');
};

/**
 * Overloads onData to detect payloads.
 *
 * @api private
 */

Polling.prototype.onData = function (data) {
  var self = this;
  debug('polling got data %s', data);
  var callback = function (packet, index, total) {
    // if its the first message we consider the transport open
    if ('opening' === self.readyState) {
      self.onOpen();
    }

    // if its a close packet, we close the ongoing requests
    if ('close' === packet.type) {
      self.onClose();
      return false;
    }

    // otherwise bypass onData and handle the message
    self.onPacket(packet);
  };

  // decode payload
  parser.decodePayload(data, this.socket.binaryType, callback);

  // if an event did not trigger closing
  if ('closed' !== this.readyState) {
    // if we got data we're not polling
    this.polling = false;
    this.emit('pollComplete');

    if ('open' === this.readyState) {
      this.poll();
    } else {
      debug('ignoring poll - transport state "%s"', this.readyState);
    }
  }
};

/**
 * For polling, send a close packet.
 *
 * @api private
 */

Polling.prototype.doClose = function () {
  var self = this;

  function close () {
    debug('writing close packet');
    self.write([{ type: 'close' }]);
  }

  if ('open' === this.readyState) {
    debug('transport open - closing');
    close();
  } else {
    // in case we're trying to close while
    // handshaking is in progress (GH-164)
    debug('transport not open - deferring close');
    this.once('open', close);
  }
};

/**
 * Writes a packets payload.
 *
 * @param {Array} data packets
 * @param {Function} drain callback
 * @api private
 */

Polling.prototype.write = function (packets) {
  var self = this;
  this.writable = false;
  var callbackfn = function () {
    self.writable = true;
    self.emit('drain');
  };

  parser.encodePayload(packets, this.supportsBinary, function (data) {
    self.doWrite(data, callbackfn);
  });
};

/**
 * Generates uri for connection.
 *
 * @api private
 */

Polling.prototype.uri = function () {
  var query = this.query || {};
  var schema = this.secure ? 'https' : 'http';
  var port = '';

  // cache busting is forced
  if (false !== this.timestampRequests) {
    query[this.timestampParam] = yeast();
  }

  if (!this.supportsBinary && !query.sid) {
    query.b64 = 1;
  }

  query = parseqs.encode(query);

  // avoid port if default for schema
  if (this.port && (('https' === schema && Number(this.port) !== 443) ||
     ('http' === schema && Number(this.port) !== 80))) {
    port = ':' + this.port;
  }

  // prepend ? to query
  if (query.length) {
    query = '?' + query;
  }

  var ipv6 = this.hostname.indexOf(':') !== -1;
  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
};

}).apply(this, arguments);

},{"../transport":26,"component-inherit":19,"debug":33,"engine.io-parser":35,"parseqs":233,"xmlhttprequest-ssl":32,"yeast":424}],31:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/engine.io-client/lib/transports/websocket.js", module);
(function(){
(function (Buffer){
/**
 * Module dependencies.
 */

var Transport = require('../transport');
var parser = require('engine.io-parser');
var parseqs = require('parseqs');
var inherit = require('component-inherit');
var yeast = require('yeast');
var debug = require('debug')('engine.io-client:websocket');
var BrowserWebSocket, NodeWebSocket;
if (typeof self === 'undefined') {
  try {
    NodeWebSocket = require('ws');
  } catch (e) { }
} else {
  BrowserWebSocket = self.WebSocket || self.MozWebSocket;
}

/**
 * Get either the `WebSocket` or `MozWebSocket` globals
 * in the browser or try to resolve WebSocket-compatible
 * interface exposed by `ws` for Node-like environment.
 */

var WebSocket = BrowserWebSocket || NodeWebSocket;

/**
 * Module exports.
 */

module.exports = WS;

/**
 * WebSocket transport constructor.
 *
 * @api {Object} connection options
 * @api public
 */

function WS (opts) {
  var forceBase64 = (opts && opts.forceBase64);
  if (forceBase64) {
    this.supportsBinary = false;
  }
  this.perMessageDeflate = opts.perMessageDeflate;
  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;
  this.protocols = opts.protocols;
  if (!this.usingBrowserWebSocket) {
    WebSocket = NodeWebSocket;
  }
  Transport.call(this, opts);
}

/**
 * Inherits from Transport.
 */

inherit(WS, Transport);

/**
 * Transport name.
 *
 * @api public
 */

WS.prototype.name = 'websocket';

/*
 * WebSockets support binary
 */

WS.prototype.supportsBinary = true;

/**
 * Opens socket.
 *
 * @api private
 */

WS.prototype.doOpen = function () {
  if (!this.check()) {
    // let probe timeout
    return;
  }

  var uri = this.uri();
  var protocols = this.protocols;
  var opts = {
    agent: this.agent,
    perMessageDeflate: this.perMessageDeflate
  };

  // SSL options for Node.js client
  opts.pfx = this.pfx;
  opts.key = this.key;
  opts.passphrase = this.passphrase;
  opts.cert = this.cert;
  opts.ca = this.ca;
  opts.ciphers = this.ciphers;
  opts.rejectUnauthorized = this.rejectUnauthorized;
  if (this.extraHeaders) {
    opts.headers = this.extraHeaders;
  }
  if (this.localAddress) {
    opts.localAddress = this.localAddress;
  }

  try {
    this.ws = this.usingBrowserWebSocket && !this.isReactNative ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);
  } catch (err) {
    return this.emit('error', err);
  }

  if (this.ws.binaryType === undefined) {
    this.supportsBinary = false;
  }

  if (this.ws.supports && this.ws.supports.binary) {
    this.supportsBinary = true;
    this.ws.binaryType = 'nodebuffer';
  } else {
    this.ws.binaryType = 'arraybuffer';
  }

  this.addEventListeners();
};

/**
 * Adds event listeners to the socket
 *
 * @api private
 */

WS.prototype.addEventListeners = function () {
  var self = this;

  this.ws.onopen = function () {
    self.onOpen();
  };
  this.ws.onclose = function () {
    self.onClose();
  };
  this.ws.onmessage = function (ev) {
    self.onData(ev.data);
  };
  this.ws.onerror = function (e) {
    self.onError('websocket error', e);
  };
};

/**
 * Writes data to socket.
 *
 * @param {Array} array of packets.
 * @api private
 */

WS.prototype.write = function (packets) {
  var self = this;
  this.writable = false;

  // encodePacket efficient as it uses WS framing
  // no need for encodePayload
  var total = packets.length;
  for (var i = 0, l = total; i < l; i++) {
    (function (packet) {
      parser.encodePacket(packet, self.supportsBinary, function (data) {
        if (!self.usingBrowserWebSocket) {
          // always create a new object (GH-437)
          var opts = {};
          if (packet.options) {
            opts.compress = packet.options.compress;
          }

          if (self.perMessageDeflate) {
            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;
            if (len < self.perMessageDeflate.threshold) {
              opts.compress = false;
            }
          }
        }

        // Sometimes the websocket has already been closed but the browser didn't
        // have a chance of informing us about it yet, in that case send will
        // throw an error
        try {
          if (self.usingBrowserWebSocket) {
            // TypeError is thrown when passing the second argument on Safari
            self.ws.send(data);
          } else {
            self.ws.send(data, opts);
          }
        } catch (e) {
          debug('websocket closed before onclose event');
        }

        --total || done();
      });
    })(packets[i]);
  }

  function done () {
    self.emit('flush');

    // fake drain
    // defer to next tick to allow Socket to clear writeBuffer
    setTimeout(function () {
      self.writable = true;
      self.emit('drain');
    }, 0);
  }
};

/**
 * Called upon close
 *
 * @api private
 */

WS.prototype.onClose = function () {
  Transport.prototype.onClose.call(this);
};

/**
 * Closes socket.
 *
 * @api private
 */

WS.prototype.doClose = function () {
  if (typeof this.ws !== 'undefined') {
    this.ws.close();
  }
};

/**
 * Generates uri for connection.
 *
 * @api private
 */

WS.prototype.uri = function () {
  var query = this.query || {};
  var schema = this.secure ? 'wss' : 'ws';
  var port = '';

  // avoid port if default for schema
  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||
    ('ws' === schema && Number(this.port) !== 80))) {
    port = ':' + this.port;
  }

  // append timestamp to URI
  if (this.timestampRequests) {
    query[this.timestampParam] = yeast();
  }

  // communicate binary support capabilities
  if (!this.supportsBinary) {
    query.b64 = 1;
  }

  query = parseqs.encode(query);

  // prepend ? to query
  if (query.length) {
    query = '?' + query;
  }

  var ipv6 = this.hostname.indexOf(':') !== -1;
  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
};

/**
 * Feature detection for WebSocket.
 *
 * @return {Boolean} whether this transport is available.
 * @api public
 */

WS.prototype.check = function () {
  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);
};

}).call(this,require("buffer").Buffer)
}).apply(this, arguments);

},{"../transport":26,"buffer":423,"component-inherit":19,"debug":33,"engine.io-parser":35,"parseqs":233,"ws":13,"yeast":424}],32:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/engine.io-client/lib/xmlhttprequest.js", module);
(function(){
// browser shim for xmlhttprequest module

var hasCORS = require('has-cors');

module.exports = function (opts) {
  var xdomain = opts.xdomain;

  // scheme must be same when usign XDomainRequest
  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx
  var xscheme = opts.xscheme;

  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.
  // https://github.com/Automattic/engine.io-client/pull/217
  var enablesXDR = opts.enablesXDR;

  // XMLHttpRequest can be disabled on IE
  try {
    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {
      return new XMLHttpRequest();
    }
  } catch (e) { }

  // Use XDomainRequest for IE8 if enablesXDR is true
  // because loading bar keeps flashing when using jsonp-polling
  // https://github.com/yujiosaka/socke.io-ie8-loading-example
  try {
    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {
      return new XDomainRequest();
    }
  } catch (e) { }

  if (!xdomain) {
    try {
      return new self[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');
    } catch (e) { }
  }
};

}).apply(this, arguments);

},{"has-cors":65}],33:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/engine.io-client/node_modules/debug/src/browser.js", module);
(function(){
(function (process){
/**
 * This is the web browser implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = require('./debug');
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome
               && 'undefined' != typeof chrome.storage
                  ? chrome.storage.local
                  : localstorage();

/**
 * Colors.
 */

exports.colors = [
  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',
  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',
  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',
  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',
  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',
  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',
  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',
  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',
  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',
  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',
  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
    return true;
  }

  // Internet Explorer and Edge do not support colors.
  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  }

  // is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
    // double check webkit in userAgent just in case we are in a worker
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

exports.formatters.j = function(v) {
  try {
    return JSON.stringify(v);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};


/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '')
    + this.namespace
    + (useColors ? ' %c' : ' ')
    + args[0]
    + (useColors ? '%c ' : ' ')
    + '+' + exports.humanize(this.diff);

  if (!useColors) return;

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit')

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function(match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch(e) {}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  var r;
  try {
    r = exports.storage.debug;
  } catch(e) {}

  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = process.env.DEBUG;
  }

  return r;
}

/**
 * Enable namespaces listed in `localStorage.debug` initially.
 */

exports.enable(load());

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
  try {
    return window.localStorage;
  } catch (e) {}
}

}).call(this,require('_process'))
}).apply(this, arguments);

},{"./debug":34,"_process":235}],34:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/engine.io-client/node_modules/debug/src/debug.js", module);
(function(){

/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = require('ms');

/**
 * Active `debug` instances.
 */
exports.instances = [];

/**
 * The currently active debug mode names, and names to skip.
 */

exports.names = [];
exports.skips = [];

/**
 * Map of special "%n" handling functions, for the debug "format" argument.
 *
 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
 */

exports.formatters = {};

/**
 * Select a color.
 * @param {String} namespace
 * @return {Number}
 * @api private
 */

function selectColor(namespace) {
  var hash = 0, i;

  for (i in namespace) {
    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
    hash |= 0; // Convert to 32bit integer
  }

  return exports.colors[Math.abs(hash) % exports.colors.length];
}

/**
 * Create a debugger with the given `namespace`.
 *
 * @param {String} namespace
 * @return {Function}
 * @api public
 */

function createDebug(namespace) {

  var prevTime;

  function debug() {
    // disabled?
    if (!debug.enabled) return;

    var self = debug;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // turn the `arguments` into a proper Array
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %O
      args.unshift('%O');
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    // apply env-specific formatting (colors, etc.)
    exports.formatArgs.call(self, args);

    var logFn = debug.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }

  debug.namespace = namespace;
  debug.enabled = exports.enabled(namespace);
  debug.useColors = exports.useColors();
  debug.color = selectColor(namespace);
  debug.destroy = destroy;

  // env-specific initialization logic for debug instances
  if ('function' === typeof exports.init) {
    exports.init(debug);
  }

  exports.instances.push(debug);

  return debug;
}

function destroy () {
  var index = exports.instances.indexOf(this);
  if (index !== -1) {
    exports.instances.splice(index, 1);
    return true;
  } else {
    return false;
  }
}

/**
 * Enables a debug mode by namespaces. This can include modes
 * separated by a colon and wildcards.
 *
 * @param {String} namespaces
 * @api public
 */

function enable(namespaces) {
  exports.save(namespaces);

  exports.names = [];
  exports.skips = [];

  var i;
  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
  var len = split.length;

  for (i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }

  for (i = 0; i < exports.instances.length; i++) {
    var instance = exports.instances[i];
    instance.enabled = exports.enabled(instance.namespace);
  }
}

/**
 * Disable debug output.
 *
 * @api public
 */

function disable() {
  exports.enable('');
}

/**
 * Returns true if the given mode name is enabled, false otherwise.
 *
 * @param {String} name
 * @return {Boolean}
 * @api public
 */

function enabled(name) {
  if (name[name.length - 1] === '*') {
    return true;
  }
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
 * Coerce `val`.
 *
 * @param {Mixed} val
 * @return {Mixed}
 * @api private
 */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}

}).apply(this, arguments);

},{"ms":231}],35:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/engine.io-parser/lib/browser.js", module);
(function(){
/**
 * Module dependencies.
 */

var keys = require('./keys');
var hasBinary = require('has-binary2');
var sliceBuffer = require('arraybuffer.slice');
var after = require('after');
var utf8 = require('./utf8');

var base64encoder;
if (typeof ArrayBuffer !== 'undefined') {
  base64encoder = require('base64-arraybuffer');
}

/**
 * Check if we are running an android browser. That requires us to use
 * ArrayBuffer with polling transports...
 *
 * http://ghinda.net/jpeg-blob-ajax-android/
 */

var isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);

/**
 * Check if we are running in PhantomJS.
 * Uploading a Blob with PhantomJS does not work correctly, as reported here:
 * https://github.com/ariya/phantomjs/issues/11395
 * @type boolean
 */
var isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);

/**
 * When true, avoids using Blobs to encode payloads.
 * @type boolean
 */
var dontSendBlobs = isAndroid || isPhantomJS;

/**
 * Current protocol version.
 */

exports.protocol = 3;

/**
 * Packet types.
 */

var packets = exports.packets = {
    open:     0    // non-ws
  , close:    1    // non-ws
  , ping:     2
  , pong:     3
  , message:  4
  , upgrade:  5
  , noop:     6
};

var packetslist = keys(packets);

/**
 * Premade error packet.
 */

var err = { type: 'error', data: 'parser error' };

/**
 * Create a blob api even for blob builder when vendor prefixes exist
 */

var Blob = require('blob');

/**
 * Encodes a packet.
 *
 *     <packet type id> [ <data> ]
 *
 * Example:
 *
 *     5hello world
 *     3
 *     4
 *
 * Binary is encoded in an identical principle
 *
 * @api private
 */

exports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {
  if (typeof supportsBinary === 'function') {
    callback = supportsBinary;
    supportsBinary = false;
  }

  if (typeof utf8encode === 'function') {
    callback = utf8encode;
    utf8encode = null;
  }

  var data = (packet.data === undefined)
    ? undefined
    : packet.data.buffer || packet.data;

  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {
    return encodeArrayBuffer(packet, supportsBinary, callback);
  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {
    return encodeBlob(packet, supportsBinary, callback);
  }

  // might be an object with { base64: true, data: dataAsBase64String }
  if (data && data.base64) {
    return encodeBase64Object(packet, callback);
  }

  // Sending data as a utf-8 string
  var encoded = packets[packet.type];

  // data fragment is optional
  if (undefined !== packet.data) {
    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);
  }

  return callback('' + encoded);

};

function encodeBase64Object(packet, callback) {
  // packet data is an object { base64: true, data: dataAsBase64String }
  var message = 'b' + exports.packets[packet.type] + packet.data.data;
  return callback(message);
}

/**
 * Encode packet helpers for binary types
 */

function encodeArrayBuffer(packet, supportsBinary, callback) {
  if (!supportsBinary) {
    return exports.encodeBase64Packet(packet, callback);
  }

  var data = packet.data;
  var contentArray = new Uint8Array(data);
  var resultBuffer = new Uint8Array(1 + data.byteLength);

  resultBuffer[0] = packets[packet.type];
  for (var i = 0; i < contentArray.length; i++) {
    resultBuffer[i+1] = contentArray[i];
  }

  return callback(resultBuffer.buffer);
}

function encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {
  if (!supportsBinary) {
    return exports.encodeBase64Packet(packet, callback);
  }

  var fr = new FileReader();
  fr.onload = function() {
    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);
  };
  return fr.readAsArrayBuffer(packet.data);
}

function encodeBlob(packet, supportsBinary, callback) {
  if (!supportsBinary) {
    return exports.encodeBase64Packet(packet, callback);
  }

  if (dontSendBlobs) {
    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);
  }

  var length = new Uint8Array(1);
  length[0] = packets[packet.type];
  var blob = new Blob([length.buffer, packet.data]);

  return callback(blob);
}

/**
 * Encodes a packet with binary data in a base64 string
 *
 * @param {Object} packet, has `type` and `data`
 * @return {String} base64 encoded message
 */

exports.encodeBase64Packet = function(packet, callback) {
  var message = 'b' + exports.packets[packet.type];
  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {
    var fr = new FileReader();
    fr.onload = function() {
      var b64 = fr.result.split(',')[1];
      callback(message + b64);
    };
    return fr.readAsDataURL(packet.data);
  }

  var b64data;
  try {
    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));
  } catch (e) {
    // iPhone Safari doesn't let you apply with typed arrays
    var typed = new Uint8Array(packet.data);
    var basic = new Array(typed.length);
    for (var i = 0; i < typed.length; i++) {
      basic[i] = typed[i];
    }
    b64data = String.fromCharCode.apply(null, basic);
  }
  message += btoa(b64data);
  return callback(message);
};

/**
 * Decodes a packet. Changes format to Blob if requested.
 *
 * @return {Object} with `type` and `data` (if any)
 * @api private
 */

exports.decodePacket = function (data, binaryType, utf8decode) {
  if (data === undefined) {
    return err;
  }
  // String data
  if (typeof data === 'string') {
    if (data.charAt(0) === 'b') {
      return exports.decodeBase64Packet(data.substr(1), binaryType);
    }

    if (utf8decode) {
      data = tryDecode(data);
      if (data === false) {
        return err;
      }
    }
    var type = data.charAt(0);

    if (Number(type) != type || !packetslist[type]) {
      return err;
    }

    if (data.length > 1) {
      return { type: packetslist[type], data: data.substring(1) };
    } else {
      return { type: packetslist[type] };
    }
  }

  var asArray = new Uint8Array(data);
  var type = asArray[0];
  var rest = sliceBuffer(data, 1);
  if (Blob && binaryType === 'blob') {
    rest = new Blob([rest]);
  }
  return { type: packetslist[type], data: rest };
};

function tryDecode(data) {
  try {
    data = utf8.decode(data, { strict: false });
  } catch (e) {
    return false;
  }
  return data;
}

/**
 * Decodes a packet encoded in a base64 string
 *
 * @param {String} base64 encoded message
 * @return {Object} with `type` and `data` (if any)
 */

exports.decodeBase64Packet = function(msg, binaryType) {
  var type = packetslist[msg.charAt(0)];
  if (!base64encoder) {
    return { type: type, data: { base64: true, data: msg.substr(1) } };
  }

  var data = base64encoder.decode(msg.substr(1));

  if (binaryType === 'blob' && Blob) {
    data = new Blob([data]);
  }

  return { type: type, data: data };
};

/**
 * Encodes multiple messages (payload).
 *
 *     <length>:data
 *
 * Example:
 *
 *     11:hello world2:hi
 *
 * If any contents are binary, they will be encoded as base64 strings. Base64
 * encoded strings are marked with a b before the length specifier
 *
 * @param {Array} packets
 * @api private
 */

exports.encodePayload = function (packets, supportsBinary, callback) {
  if (typeof supportsBinary === 'function') {
    callback = supportsBinary;
    supportsBinary = null;
  }

  var isBinary = hasBinary(packets);

  if (supportsBinary && isBinary) {
    if (Blob && !dontSendBlobs) {
      return exports.encodePayloadAsBlob(packets, callback);
    }

    return exports.encodePayloadAsArrayBuffer(packets, callback);
  }

  if (!packets.length) {
    return callback('0:');
  }

  function setLengthHeader(message) {
    return message.length + ':' + message;
  }

  function encodeOne(packet, doneCallback) {
    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {
      doneCallback(null, setLengthHeader(message));
    });
  }

  map(packets, encodeOne, function(err, results) {
    return callback(results.join(''));
  });
};

/**
 * Async array map using after
 */

function map(ary, each, done) {
  var result = new Array(ary.length);
  var next = after(ary.length, done);

  var eachWithIndex = function(i, el, cb) {
    each(el, function(error, msg) {
      result[i] = msg;
      cb(error, result);
    });
  };

  for (var i = 0; i < ary.length; i++) {
    eachWithIndex(i, ary[i], next);
  }
}

/*
 * Decodes data when a payload is maybe expected. Possible binary contents are
 * decoded from their base64 representation
 *
 * @param {String} data, callback method
 * @api public
 */

exports.decodePayload = function (data, binaryType, callback) {
  if (typeof data !== 'string') {
    return exports.decodePayloadAsBinary(data, binaryType, callback);
  }

  if (typeof binaryType === 'function') {
    callback = binaryType;
    binaryType = null;
  }

  var packet;
  if (data === '') {
    // parser error - ignoring payload
    return callback(err, 0, 1);
  }

  var length = '', n, msg;

  for (var i = 0, l = data.length; i < l; i++) {
    var chr = data.charAt(i);

    if (chr !== ':') {
      length += chr;
      continue;
    }

    if (length === '' || (length != (n = Number(length)))) {
      // parser error - ignoring payload
      return callback(err, 0, 1);
    }

    msg = data.substr(i + 1, n);

    if (length != msg.length) {
      // parser error - ignoring payload
      return callback(err, 0, 1);
    }

    if (msg.length) {
      packet = exports.decodePacket(msg, binaryType, false);

      if (err.type === packet.type && err.data === packet.data) {
        // parser error in individual packet - ignoring payload
        return callback(err, 0, 1);
      }

      var ret = callback(packet, i + n, l);
      if (false === ret) return;
    }

    // advance cursor
    i += n;
    length = '';
  }

  if (length !== '') {
    // parser error - ignoring payload
    return callback(err, 0, 1);
  }

};

/**
 * Encodes multiple messages (payload) as binary.
 *
 * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number
 * 255><data>
 *
 * Example:
 * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers
 *
 * @param {Array} packets
 * @return {ArrayBuffer} encoded payload
 * @api private
 */

exports.encodePayloadAsArrayBuffer = function(packets, callback) {
  if (!packets.length) {
    return callback(new ArrayBuffer(0));
  }

  function encodeOne(packet, doneCallback) {
    exports.encodePacket(packet, true, true, function(data) {
      return doneCallback(null, data);
    });
  }

  map(packets, encodeOne, function(err, encodedPackets) {
    var totalLength = encodedPackets.reduce(function(acc, p) {
      var len;
      if (typeof p === 'string'){
        len = p.length;
      } else {
        len = p.byteLength;
      }
      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2
    }, 0);

    var resultArray = new Uint8Array(totalLength);

    var bufferIndex = 0;
    encodedPackets.forEach(function(p) {
      var isString = typeof p === 'string';
      var ab = p;
      if (isString) {
        var view = new Uint8Array(p.length);
        for (var i = 0; i < p.length; i++) {
          view[i] = p.charCodeAt(i);
        }
        ab = view.buffer;
      }

      if (isString) { // not true binary
        resultArray[bufferIndex++] = 0;
      } else { // true binary
        resultArray[bufferIndex++] = 1;
      }

      var lenStr = ab.byteLength.toString();
      for (var i = 0; i < lenStr.length; i++) {
        resultArray[bufferIndex++] = parseInt(lenStr[i]);
      }
      resultArray[bufferIndex++] = 255;

      var view = new Uint8Array(ab);
      for (var i = 0; i < view.length; i++) {
        resultArray[bufferIndex++] = view[i];
      }
    });

    return callback(resultArray.buffer);
  });
};

/**
 * Encode as Blob
 */

exports.encodePayloadAsBlob = function(packets, callback) {
  function encodeOne(packet, doneCallback) {
    exports.encodePacket(packet, true, true, function(encoded) {
      var binaryIdentifier = new Uint8Array(1);
      binaryIdentifier[0] = 1;
      if (typeof encoded === 'string') {
        var view = new Uint8Array(encoded.length);
        for (var i = 0; i < encoded.length; i++) {
          view[i] = encoded.charCodeAt(i);
        }
        encoded = view.buffer;
        binaryIdentifier[0] = 0;
      }

      var len = (encoded instanceof ArrayBuffer)
        ? encoded.byteLength
        : encoded.size;

      var lenStr = len.toString();
      var lengthAry = new Uint8Array(lenStr.length + 1);
      for (var i = 0; i < lenStr.length; i++) {
        lengthAry[i] = parseInt(lenStr[i]);
      }
      lengthAry[lenStr.length] = 255;

      if (Blob) {
        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);
        doneCallback(null, blob);
      }
    });
  }

  map(packets, encodeOne, function(err, results) {
    return callback(new Blob(results));
  });
};

/*
 * Decodes data when a payload is maybe expected. Strings are decoded by
 * interpreting each byte as a key code for entries marked to start with 0. See
 * description of encodePayloadAsBinary
 *
 * @param {ArrayBuffer} data, callback method
 * @api public
 */

exports.decodePayloadAsBinary = function (data, binaryType, callback) {
  if (typeof binaryType === 'function') {
    callback = binaryType;
    binaryType = null;
  }

  var bufferTail = data;
  var buffers = [];

  while (bufferTail.byteLength > 0) {
    var tailArray = new Uint8Array(bufferTail);
    var isString = tailArray[0] === 0;
    var msgLength = '';

    for (var i = 1; ; i++) {
      if (tailArray[i] === 255) break;

      // 310 = char length of Number.MAX_VALUE
      if (msgLength.length > 310) {
        return callback(err, 0, 1);
      }

      msgLength += tailArray[i];
    }

    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);
    msgLength = parseInt(msgLength);

    var msg = sliceBuffer(bufferTail, 0, msgLength);
    if (isString) {
      try {
        msg = String.fromCharCode.apply(null, new Uint8Array(msg));
      } catch (e) {
        // iPhone Safari doesn't let you apply to typed arrays
        var typed = new Uint8Array(msg);
        msg = '';
        for (var i = 0; i < typed.length; i++) {
          msg += String.fromCharCode(typed[i]);
        }
      }
    }

    buffers.push(msg);
    bufferTail = sliceBuffer(bufferTail, msgLength);
  }

  var total = buffers.length;
  buffers.forEach(function(buffer, i) {
    callback(exports.decodePacket(buffer, binaryType, true), i, total);
  });
};

}).apply(this, arguments);

},{"./keys":36,"./utf8":37,"after":7,"arraybuffer.slice":8,"base64-arraybuffer":10,"blob":12,"has-binary2":63}],36:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/engine.io-parser/lib/keys.js", module);
(function(){

/**
 * Gets the keys for an object.
 *
 * @return {Array} keys
 * @api private
 */

module.exports = Object.keys || function keys (obj){
  var arr = [];
  var has = Object.prototype.hasOwnProperty;

  for (var i in obj) {
    if (has.call(obj, i)) {
      arr.push(i);
    }
  }
  return arr;
};

}).apply(this, arguments);

},{}],37:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/engine.io-parser/lib/utf8.js", module);
(function(){
/*! https://mths.be/utf8js v2.1.2 by @mathias */

var stringFromCharCode = String.fromCharCode;

// Taken from https://mths.be/punycode
function ucs2decode(string) {
	var output = [];
	var counter = 0;
	var length = string.length;
	var value;
	var extra;
	while (counter < length) {
		value = string.charCodeAt(counter++);
		if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
			// high surrogate, and there is a next character
			extra = string.charCodeAt(counter++);
			if ((extra & 0xFC00) == 0xDC00) { // low surrogate
				output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
			} else {
				// unmatched surrogate; only append this code unit, in case the next
				// code unit is the high surrogate of a surrogate pair
				output.push(value);
				counter--;
			}
		} else {
			output.push(value);
		}
	}
	return output;
}

// Taken from https://mths.be/punycode
function ucs2encode(array) {
	var length = array.length;
	var index = -1;
	var value;
	var output = '';
	while (++index < length) {
		value = array[index];
		if (value > 0xFFFF) {
			value -= 0x10000;
			output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
			value = 0xDC00 | value & 0x3FF;
		}
		output += stringFromCharCode(value);
	}
	return output;
}

function checkScalarValue(codePoint, strict) {
	if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {
		if (strict) {
			throw Error(
				'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +
				' is not a scalar value'
			);
		}
		return false;
	}
	return true;
}
/*--------------------------------------------------------------------------*/

function createByte(codePoint, shift) {
	return stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);
}

function encodeCodePoint(codePoint, strict) {
	if ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence
		return stringFromCharCode(codePoint);
	}
	var symbol = '';
	if ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence
		symbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);
	}
	else if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence
		if (!checkScalarValue(codePoint, strict)) {
			codePoint = 0xFFFD;
		}
		symbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);
		symbol += createByte(codePoint, 6);
	}
	else if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence
		symbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);
		symbol += createByte(codePoint, 12);
		symbol += createByte(codePoint, 6);
	}
	symbol += stringFromCharCode((codePoint & 0x3F) | 0x80);
	return symbol;
}

function utf8encode(string, opts) {
	opts = opts || {};
	var strict = false !== opts.strict;

	var codePoints = ucs2decode(string);
	var length = codePoints.length;
	var index = -1;
	var codePoint;
	var byteString = '';
	while (++index < length) {
		codePoint = codePoints[index];
		byteString += encodeCodePoint(codePoint, strict);
	}
	return byteString;
}

/*--------------------------------------------------------------------------*/

function readContinuationByte() {
	if (byteIndex >= byteCount) {
		throw Error('Invalid byte index');
	}

	var continuationByte = byteArray[byteIndex] & 0xFF;
	byteIndex++;

	if ((continuationByte & 0xC0) == 0x80) {
		return continuationByte & 0x3F;
	}

	// If we end up here, it’s not a continuation byte
	throw Error('Invalid continuation byte');
}

function decodeSymbol(strict) {
	var byte1;
	var byte2;
	var byte3;
	var byte4;
	var codePoint;

	if (byteIndex > byteCount) {
		throw Error('Invalid byte index');
	}

	if (byteIndex == byteCount) {
		return false;
	}

	// Read first byte
	byte1 = byteArray[byteIndex] & 0xFF;
	byteIndex++;

	// 1-byte sequence (no continuation bytes)
	if ((byte1 & 0x80) == 0) {
		return byte1;
	}

	// 2-byte sequence
	if ((byte1 & 0xE0) == 0xC0) {
		byte2 = readContinuationByte();
		codePoint = ((byte1 & 0x1F) << 6) | byte2;
		if (codePoint >= 0x80) {
			return codePoint;
		} else {
			throw Error('Invalid continuation byte');
		}
	}

	// 3-byte sequence (may include unpaired surrogates)
	if ((byte1 & 0xF0) == 0xE0) {
		byte2 = readContinuationByte();
		byte3 = readContinuationByte();
		codePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;
		if (codePoint >= 0x0800) {
			return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;
		} else {
			throw Error('Invalid continuation byte');
		}
	}

	// 4-byte sequence
	if ((byte1 & 0xF8) == 0xF0) {
		byte2 = readContinuationByte();
		byte3 = readContinuationByte();
		byte4 = readContinuationByte();
		codePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |
			(byte3 << 0x06) | byte4;
		if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {
			return codePoint;
		}
	}

	throw Error('Invalid UTF-8 detected');
}

var byteArray;
var byteCount;
var byteIndex;
function utf8decode(byteString, opts) {
	opts = opts || {};
	var strict = false !== opts.strict;

	byteArray = ucs2decode(byteString);
	byteCount = byteArray.length;
	byteIndex = 0;
	var codePoints = [];
	var tmp;
	while ((tmp = decodeSymbol(strict)) !== false) {
		codePoints.push(tmp);
	}
	return ucs2encode(codePoints);
}

module.exports = {
	version: '2.1.2',
	encode: utf8encode,
	decode: utf8decode
};

}).apply(this, arguments);

},{}],38:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/error-stack-parser/error-stack-parser.js", module);
(function(){
(function(root, factory) {
    'use strict';
    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.

    /* istanbul ignore next */
    if (typeof define === 'function' && define.amd) {
        define('error-stack-parser', ['stackframe'], factory);
    } else if (typeof exports === 'object') {
        module.exports = factory(require('stackframe'));
    } else {
        root.ErrorStackParser = factory(root.StackFrame);
    }
}(this, function ErrorStackParser(StackFrame) {
    'use strict';

    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\S+\:\d+/;
    var CHROME_IE_STACK_REGEXP = /^\s*at .*(\S+\:\d+|\(native\))/m;
    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\[native code\])?$/;

    function _map(array, fn, thisArg) {
        if (typeof Array.prototype.map === 'function') {
            return array.map(fn, thisArg);
        } else {
            var output = new Array(array.length);
            for (var i = 0; i < array.length; i++) {
                output[i] = fn.call(thisArg, array[i]);
            }
            return output;
        }
    }

    function _filter(array, fn, thisArg) {
        if (typeof Array.prototype.filter === 'function') {
            return array.filter(fn, thisArg);
        } else {
            var output = [];
            for (var i = 0; i < array.length; i++) {
                if (fn.call(thisArg, array[i])) {
                    output.push(array[i]);
                }
            }
            return output;
        }
    }

    function _indexOf(array, target) {
        if (typeof Array.prototype.indexOf === 'function') {
            return array.indexOf(target);
        } else {
            for (var i = 0; i < array.length; i++) {
                if (array[i] === target) {
                    return i;
                }
            }
            return -1;
        }
    }

    return {
        /**
         * Given an Error object, extract the most information from it.
         *
         * @param {Error} error object
         * @return {Array} of StackFrames
         */
        parse: function ErrorStackParser$$parse(error) {
            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {
                return this.parseOpera(error);
            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {
                return this.parseV8OrIE(error);
            } else if (error.stack) {
                return this.parseFFOrSafari(error);
            } else {
                throw new Error('Cannot parse given Error object');
            }
        },

        // Separate line and column numbers from a string of the form: (URI:Line:Column)
        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {
            // Fail-fast but return locations like "(native)"
            if (urlLike.indexOf(':') === -1) {
                return [urlLike];
            }

            var regExp = /(.+?)(?:\:(\d+))?(?:\:(\d+))?$/;
            var parts = regExp.exec(urlLike.replace(/[\(\)]/g, ''));
            return [parts[1], parts[2] || undefined, parts[3] || undefined];
        },

        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {
            var filtered = _filter(error.stack.split('\n'), function(line) {
                return !!line.match(CHROME_IE_STACK_REGEXP);
            }, this);

            return _map(filtered, function(line) {
                if (line.indexOf('(eval ') > -1) {
                    // Throw away eval information until we implement stacktrace.js/stackframe#8
                    line = line.replace(/eval code/g, 'eval').replace(/(\(eval at [^\()]*)|(\)\,.*$)/g, '');
                }
                var tokens = line.replace(/^\s+/, '').replace(/\(eval code/g, '(').split(/\s+/).slice(1);
                var locationParts = this.extractLocation(tokens.pop());
                var functionName = tokens.join(' ') || undefined;
                var fileName = _indexOf(['eval', '<anonymous>'], locationParts[0]) > -1 ? undefined : locationParts[0];

                return new StackFrame(functionName, undefined, fileName, locationParts[1], locationParts[2], line);
            }, this);
        },

        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {
            var filtered = _filter(error.stack.split('\n'), function(line) {
                return !line.match(SAFARI_NATIVE_CODE_REGEXP);
            }, this);

            return _map(filtered, function(line) {
                // Throw away eval information until we implement stacktrace.js/stackframe#8
                if (line.indexOf(' > eval') > -1) {
                    line = line.replace(/ line (\d+)(?: > eval line \d+)* > eval\:\d+\:\d+/g, ':$1');
                }

                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {
                    // Safari eval frames only have function names and nothing else
                    return new StackFrame(line);
                } else {
                    var tokens = line.split('@');
                    var locationParts = this.extractLocation(tokens.pop());
                    var functionName = tokens.join('@') || undefined;
                    return new StackFrame(functionName,
                        undefined,
                        locationParts[0],
                        locationParts[1],
                        locationParts[2],
                        line);
                }
            }, this);
        },

        parseOpera: function ErrorStackParser$$parseOpera(e) {
            if (!e.stacktrace || (e.message.indexOf('\n') > -1 &&
                e.message.split('\n').length > e.stacktrace.split('\n').length)) {
                return this.parseOpera9(e);
            } else if (!e.stack) {
                return this.parseOpera10(e);
            } else {
                return this.parseOpera11(e);
            }
        },

        parseOpera9: function ErrorStackParser$$parseOpera9(e) {
            var lineRE = /Line (\d+).*script (?:in )?(\S+)/i;
            var lines = e.message.split('\n');
            var result = [];

            for (var i = 2, len = lines.length; i < len; i += 2) {
                var match = lineRE.exec(lines[i]);
                if (match) {
                    result.push(new StackFrame(undefined, undefined, match[2], match[1], undefined, lines[i]));
                }
            }

            return result;
        },

        parseOpera10: function ErrorStackParser$$parseOpera10(e) {
            var lineRE = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i;
            var lines = e.stacktrace.split('\n');
            var result = [];

            for (var i = 0, len = lines.length; i < len; i += 2) {
                var match = lineRE.exec(lines[i]);
                if (match) {
                    result.push(
                        new StackFrame(
                            match[3] || undefined,
                            undefined,
                            match[2],
                            match[1],
                            undefined,
                            lines[i]
                        )
                    );
                }
            }

            return result;
        },

        // Opera 10.65+ Error.stack very similar to FF/Safari
        parseOpera11: function ErrorStackParser$$parseOpera11(error) {
            var filtered = _filter(error.stack.split('\n'), function(line) {
                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);
            }, this);

            return _map(filtered, function(line) {
                var tokens = line.split('@');
                var locationParts = this.extractLocation(tokens.pop());
                var functionCall = (tokens.shift() || '');
                var functionName = functionCall
                        .replace(/<anonymous function(: (\w+))?>/, '$2')
                        .replace(/\([^\)]*\)/g, '') || undefined;
                var argsRaw;
                if (functionCall.match(/\(([^\)]*)\)/)) {
                    argsRaw = functionCall.replace(/^[^\(]+\(([^\)]*)\)$/, '$1');
                }
                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?
                    undefined : argsRaw.split(',');
                return new StackFrame(
                    functionName,
                    args,
                    locationParts[0],
                    locationParts[1],
                    locationParts[2],
                    line);
            }, this);
        }
    };
}));


}).apply(this, arguments);

},{"stackframe":421}],39:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/EventListener.js", module);
(function(){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var emptyFunction = require('./emptyFunction');

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function listen(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function remove() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function capture(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    } else {
      if (process.env.NODE_ENV !== 'production') {
        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
      }
      return {
        remove: emptyFunction
      };
    }
  },

  registerDefault: function registerDefault() {}
};

module.exports = EventListener;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./emptyFunction":46,"_process":235}],40:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/ExecutionEnvironment.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;
}).apply(this, arguments);

},{}],41:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/camelize.js", module);
(function(){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;
}).apply(this, arguments);

},{}],42:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/camelizeStyleName.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

'use strict';

var camelize = require('./camelize');

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;
}).apply(this, arguments);

},{"./camelize":41}],43:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/containsNode.js", module);
(function(){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

var isTextNode = require('./isTextNode');

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;
}).apply(this, arguments);

},{"./isTextNode":56}],44:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/createArrayFromMixed.js", module);
(function(){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var invariant = require('./invariant');

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFromMixed.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
  // in old versions of Safari).
  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return (
    // not null/false
    !!obj && (
    // arrays are objects, NodeLists are functions in Safari
    typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    'length' in obj &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    typeof obj.nodeType != 'number' && (
    // a real array
    Array.isArray(obj) ||
    // arguments
    'callee' in obj ||
    // HTMLCollection/NodeList
    'item' in obj)
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFromMixed = require('createArrayFromMixed');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFromMixed(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFromMixed(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFromMixed;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./invariant":54,"_process":235}],45:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/createNodesFromMarkup.js", module);
(function(){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

/*eslint-disable fb-www/unsafe-html*/

var ExecutionEnvironment = require('./ExecutionEnvironment');

var createArrayFromMixed = require('./createArrayFromMixed');
var getMarkupWrap = require('./getMarkupWrap');
var invariant = require('./invariant');

/**
 * Dummy container used to render all markup.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
    createArrayFromMixed(scripts).forEach(handleScript);
  }

  var nodes = Array.from(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ExecutionEnvironment":40,"./createArrayFromMixed":44,"./getMarkupWrap":50,"./invariant":54,"_process":235}],46:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/emptyFunction.js", module);
(function(){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
}).apply(this, arguments);

},{}],47:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/emptyObject.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"_process":235}],48:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/focusNode.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

/**
 * @param {DOMElement} node input/textarea to focus
 */

function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch (e) {}
}

module.exports = focusNode;
}).apply(this, arguments);

},{}],49:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/getActiveElement.js", module);
(function(){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 *
 * @param {?DOMDocument} doc Defaults to current document.
 * @return {?DOMElement}
 */
function getActiveElement(doc) /*?DOMElement*/{
  doc = doc || (typeof document !== 'undefined' ? document : undefined);
  if (typeof doc === 'undefined') {
    return null;
  }
  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

module.exports = getActiveElement;
}).apply(this, arguments);

},{}],50:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/getMarkupWrap.js", module);
(function(){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

/*eslint-disable fb-www/unsafe-html */

var ExecutionEnvironment = require('./ExecutionEnvironment');

var invariant = require('./invariant');

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */

var shouldWrap = {};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap
};

// Initialize the SVG elements since we know they'll always need to be wrapped
// consistently. If they are created inside a <div> they will be initialized in
// the wrong namespace (and will not display).
var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
svgElements.forEach(function (nodeName) {
  markupWrap[nodeName] = svgWrap;
  shouldWrap[nodeName] = true;
});

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}

module.exports = getMarkupWrap;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ExecutionEnvironment":40,"./invariant":54,"_process":235}],51:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/getUnboundedScrollPosition.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

'use strict';

/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */

function getUnboundedScrollPosition(scrollable) {
  if (scrollable.Window && scrollable instanceof scrollable.Window) {
    return {
      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;
}).apply(this, arguments);

},{}],52:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/hyphenate.js", module);
(function(){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;
}).apply(this, arguments);

},{}],53:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/hyphenateStyleName.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

'use strict';

var hyphenate = require('./hyphenate');

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;
}).apply(this, arguments);

},{"./hyphenate":52}],54:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/invariant.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"_process":235}],55:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/isNode.js", module);
(function(){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;
}).apply(this, arguments);

},{}],56:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/isTextNode.js", module);
(function(){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var isNode = require('./isNode');

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;
}).apply(this, arguments);

},{"./isNode":55}],57:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/memoizeStringOnly.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @typechecks static-only
 */

'use strict';

/**
 * Memoizes the return value of a function that accepts one string argument.
 */

function memoizeStringOnly(callback) {
  var cache = {};
  return function (string) {
    if (!cache.hasOwnProperty(string)) {
      cache[string] = callback.call(this, string);
    }
    return cache[string];
  };
}

module.exports = memoizeStringOnly;
}).apply(this, arguments);

},{}],58:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/performance.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

'use strict';

var ExecutionEnvironment = require('./ExecutionEnvironment');

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance = window.performance || window.msPerformance || window.webkitPerformance;
}

module.exports = performance || {};
}).apply(this, arguments);

},{"./ExecutionEnvironment":40}],59:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/performanceNow.js", module);
(function(){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var performance = require('./performance');

var performanceNow;

/**
 * Detect if we can use `window.performance.now()` and gracefully fallback to
 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
 * because of Facebook's testing infrastructure.
 */
if (performance.now) {
  performanceNow = function performanceNow() {
    return performance.now();
  };
} else {
  performanceNow = function performanceNow() {
    return Date.now();
  };
}

module.exports = performanceNow;
}).apply(this, arguments);

},{"./performance":58}],60:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/shallowEqual.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    // Added the nonzero y check to make Flow happy, but it is redundant
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;
}).apply(this, arguments);

},{}],61:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/fbjs/lib/warning.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var emptyFunction = require('./emptyFunction');

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = warning;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./emptyFunction":46,"_process":235}],62:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/global/window.js", module);
(function(){
(function (global){
var win;

if (typeof window !== "undefined") {
    win = window;
} else if (typeof global !== "undefined") {
    win = global;
} else if (typeof self !== "undefined"){
    win = self;
} else {
    win = {};
}

module.exports = win;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
}).apply(this, arguments);

},{}],63:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/has-binary2/index.js", module);
(function(){
(function (Buffer){
/* global Blob File */

/*
 * Module requirements.
 */

var isArray = require('isarray');

var toString = Object.prototype.toString;
var withNativeBlob = typeof Blob === 'function' ||
                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';
var withNativeFile = typeof File === 'function' ||
                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';

/**
 * Module exports.
 */

module.exports = hasBinary;

/**
 * Checks for binary data.
 *
 * Supports Buffer, ArrayBuffer, Blob and File.
 *
 * @param {Object} anything
 * @api public
 */

function hasBinary (obj) {
  if (!obj || typeof obj !== 'object') {
    return false;
  }

  if (isArray(obj)) {
    for (var i = 0, l = obj.length; i < l; i++) {
      if (hasBinary(obj[i])) {
        return true;
      }
    }
    return false;
  }

  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||
    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||
    (withNativeBlob && obj instanceof Blob) ||
    (withNativeFile && obj instanceof File)
  ) {
    return true;
  }

  // see: https://github.com/Automattic/has-binary/pull/4
  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {
    return hasBinary(obj.toJSON(), true);
  }

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {
      return true;
    }
  }

  return false;
}

}).call(this,require("buffer").Buffer)
}).apply(this, arguments);

},{"buffer":423,"isarray":64}],64:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/has-binary2/node_modules/isarray/index.js", module);
(function(){
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

}).apply(this, arguments);

},{}],65:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/has-cors/index.js", module);
(function(){

/**
 * Module exports.
 *
 * Logic borrowed from Modernizr:
 *
 *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js
 */

try {
  module.exports = typeof XMLHttpRequest !== 'undefined' &&
    'withCredentials' in new XMLHttpRequest();
} catch (err) {
  // if XMLHttp support is disabled in IE then it will throw
  // when trying to create
  module.exports = false;
}

}).apply(this, arguments);

},{}],66:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/ieee754/index.js", module);
(function(){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

}).apply(this, arguments);

},{}],67:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/indexof/index.js", module);
(function(){

var indexOf = [].indexOf;

module.exports = function(arr, obj){
  if (indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};
}).apply(this, arguments);

},{}],68:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_DataView.js", module);
(function(){
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;

}).apply(this, arguments);

},{"./_getNative":142,"./_root":180}],69:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_Hash.js", module);
(function(){
var hashClear = require('./_hashClear'),
    hashDelete = require('./_hashDelete'),
    hashGet = require('./_hashGet'),
    hashHas = require('./_hashHas'),
    hashSet = require('./_hashSet');

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;

}).apply(this, arguments);

},{"./_hashClear":148,"./_hashDelete":149,"./_hashGet":150,"./_hashHas":151,"./_hashSet":152}],70:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_ListCache.js", module);
(function(){
var listCacheClear = require('./_listCacheClear'),
    listCacheDelete = require('./_listCacheDelete'),
    listCacheGet = require('./_listCacheGet'),
    listCacheHas = require('./_listCacheHas'),
    listCacheSet = require('./_listCacheSet');

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;

}).apply(this, arguments);

},{"./_listCacheClear":161,"./_listCacheDelete":162,"./_listCacheGet":163,"./_listCacheHas":164,"./_listCacheSet":165}],71:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_Map.js", module);
(function(){
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;

}).apply(this, arguments);

},{"./_getNative":142,"./_root":180}],72:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_MapCache.js", module);
(function(){
var mapCacheClear = require('./_mapCacheClear'),
    mapCacheDelete = require('./_mapCacheDelete'),
    mapCacheGet = require('./_mapCacheGet'),
    mapCacheHas = require('./_mapCacheHas'),
    mapCacheSet = require('./_mapCacheSet');

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;

}).apply(this, arguments);

},{"./_mapCacheClear":166,"./_mapCacheDelete":167,"./_mapCacheGet":168,"./_mapCacheHas":169,"./_mapCacheSet":170}],73:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_Promise.js", module);
(function(){
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;

}).apply(this, arguments);

},{"./_getNative":142,"./_root":180}],74:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_Set.js", module);
(function(){
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;

}).apply(this, arguments);

},{"./_getNative":142,"./_root":180}],75:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_SetCache.js", module);
(function(){
var MapCache = require('./_MapCache'),
    setCacheAdd = require('./_setCacheAdd'),
    setCacheHas = require('./_setCacheHas');

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;

}).apply(this, arguments);

},{"./_MapCache":72,"./_setCacheAdd":181,"./_setCacheHas":182}],76:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_Stack.js", module);
(function(){
var ListCache = require('./_ListCache'),
    stackClear = require('./_stackClear'),
    stackDelete = require('./_stackDelete'),
    stackGet = require('./_stackGet'),
    stackHas = require('./_stackHas'),
    stackSet = require('./_stackSet');

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;

}).apply(this, arguments);

},{"./_ListCache":70,"./_stackClear":186,"./_stackDelete":187,"./_stackGet":188,"./_stackHas":189,"./_stackSet":190}],77:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_Symbol.js", module);
(function(){
var root = require('./_root');

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;

}).apply(this, arguments);

},{"./_root":180}],78:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_Uint8Array.js", module);
(function(){
var root = require('./_root');

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;

}).apply(this, arguments);

},{"./_root":180}],79:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_WeakMap.js", module);
(function(){
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;

}).apply(this, arguments);

},{"./_getNative":142,"./_root":180}],80:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_apply.js", module);
(function(){
/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;

}).apply(this, arguments);

},{}],81:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_arrayEach.js", module);
(function(){
/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;

}).apply(this, arguments);

},{}],82:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_arrayFilter.js", module);
(function(){
/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;

}).apply(this, arguments);

},{}],83:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_arrayIncludes.js", module);
(function(){
var baseIndexOf = require('./_baseIndexOf');

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

module.exports = arrayIncludes;

}).apply(this, arguments);

},{"./_baseIndexOf":103}],84:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_arrayIncludesWith.js", module);
(function(){
/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

module.exports = arrayIncludesWith;

}).apply(this, arguments);

},{}],85:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_arrayLikeKeys.js", module);
(function(){
var baseTimes = require('./_baseTimes'),
    isArguments = require('./isArguments'),
    isArray = require('./isArray'),
    isBuffer = require('./isBuffer'),
    isIndex = require('./_isIndex'),
    isTypedArray = require('./isTypedArray');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;

}).apply(this, arguments);

},{"./_baseTimes":121,"./_isIndex":154,"./isArguments":207,"./isArray":208,"./isBuffer":211,"./isTypedArray":217}],86:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_arrayMap.js", module);
(function(){
/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;

}).apply(this, arguments);

},{}],87:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_arrayPush.js", module);
(function(){
/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;

}).apply(this, arguments);

},{}],88:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_arraySome.js", module);
(function(){
/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;

}).apply(this, arguments);

},{}],89:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_assignValue.js", module);
(function(){
var baseAssignValue = require('./_baseAssignValue'),
    eq = require('./eq');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;

}).apply(this, arguments);

},{"./_baseAssignValue":91,"./eq":198}],90:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_assocIndexOf.js", module);
(function(){
var eq = require('./eq');

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;

}).apply(this, arguments);

},{"./eq":198}],91:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseAssignValue.js", module);
(function(){
var defineProperty = require('./_defineProperty');

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;

}).apply(this, arguments);

},{"./_defineProperty":134}],92:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseDifference.js", module);
(function(){
var SetCache = require('./_SetCache'),
    arrayIncludes = require('./_arrayIncludes'),
    arrayIncludesWith = require('./_arrayIncludesWith'),
    arrayMap = require('./_arrayMap'),
    baseUnary = require('./_baseUnary'),
    cacheHas = require('./_cacheHas');

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of methods like `_.difference` without support
 * for excluding multiple arrays or iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Array} values The values to exclude.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 */
function baseDifference(array, values, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      isCommon = true,
      length = array.length,
      result = [],
      valuesLength = values.length;

  if (!length) {
    return result;
  }
  if (iteratee) {
    values = arrayMap(values, baseUnary(iteratee));
  }
  if (comparator) {
    includes = arrayIncludesWith;
    isCommon = false;
  }
  else if (values.length >= LARGE_ARRAY_SIZE) {
    includes = cacheHas;
    isCommon = false;
    values = new SetCache(values);
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee == null ? value : iteratee(value);

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var valuesIndex = valuesLength;
      while (valuesIndex--) {
        if (values[valuesIndex] === computed) {
          continue outer;
        }
      }
      result.push(value);
    }
    else if (!includes(values, computed, comparator)) {
      result.push(value);
    }
  }
  return result;
}

module.exports = baseDifference;

}).apply(this, arguments);

},{"./_SetCache":75,"./_arrayIncludes":83,"./_arrayIncludesWith":84,"./_arrayMap":86,"./_baseUnary":123,"./_cacheHas":125}],93:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseEach.js", module);
(function(){
var baseForOwn = require('./_baseForOwn'),
    createBaseEach = require('./_createBaseEach');

/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEach = createBaseEach(baseForOwn);

module.exports = baseEach;

}).apply(this, arguments);

},{"./_baseForOwn":98,"./_createBaseEach":131}],94:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseFilter.js", module);
(function(){
var baseEach = require('./_baseEach');

/**
 * The base implementation of `_.filter` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function baseFilter(collection, predicate) {
  var result = [];
  baseEach(collection, function(value, index, collection) {
    if (predicate(value, index, collection)) {
      result.push(value);
    }
  });
  return result;
}

module.exports = baseFilter;

}).apply(this, arguments);

},{"./_baseEach":93}],95:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseFindIndex.js", module);
(function(){
/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

module.exports = baseFindIndex;

}).apply(this, arguments);

},{}],96:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseFlatten.js", module);
(function(){
var arrayPush = require('./_arrayPush'),
    isFlattenable = require('./_isFlattenable');

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

module.exports = baseFlatten;

}).apply(this, arguments);

},{"./_arrayPush":87,"./_isFlattenable":153}],97:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseFor.js", module);
(function(){
var createBaseFor = require('./_createBaseFor');

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;

}).apply(this, arguments);

},{"./_createBaseFor":132}],98:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseForOwn.js", module);
(function(){
var baseFor = require('./_baseFor'),
    keys = require('./keys');

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

module.exports = baseForOwn;

}).apply(this, arguments);

},{"./_baseFor":97,"./keys":218}],99:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseGet.js", module);
(function(){
var castPath = require('./_castPath'),
    toKey = require('./_toKey');

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

module.exports = baseGet;

}).apply(this, arguments);

},{"./_castPath":127,"./_toKey":193}],100:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseGetAllKeys.js", module);
(function(){
var arrayPush = require('./_arrayPush'),
    isArray = require('./isArray');

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;

}).apply(this, arguments);

},{"./_arrayPush":87,"./isArray":208}],101:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseGetTag.js", module);
(function(){
var Symbol = require('./_Symbol'),
    getRawTag = require('./_getRawTag'),
    objectToString = require('./_objectToString');

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;

}).apply(this, arguments);

},{"./_Symbol":77,"./_getRawTag":143,"./_objectToString":177}],102:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseHasIn.js", module);
(function(){
/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;

}).apply(this, arguments);

},{}],103:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseIndexOf.js", module);
(function(){
var baseFindIndex = require('./_baseFindIndex'),
    baseIsNaN = require('./_baseIsNaN'),
    strictIndexOf = require('./_strictIndexOf');

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? strictIndexOf(array, value, fromIndex)
    : baseFindIndex(array, baseIsNaN, fromIndex);
}

module.exports = baseIndexOf;

}).apply(this, arguments);

},{"./_baseFindIndex":95,"./_baseIsNaN":108,"./_strictIndexOf":191}],104:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseIsArguments.js", module);
(function(){
var baseGetTag = require('./_baseGetTag'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;

}).apply(this, arguments);

},{"./_baseGetTag":101,"./isObjectLike":215}],105:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseIsEqual.js", module);
(function(){
var baseIsEqualDeep = require('./_baseIsEqualDeep'),
    isObjectLike = require('./isObjectLike');

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;

}).apply(this, arguments);

},{"./_baseIsEqualDeep":106,"./isObjectLike":215}],106:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseIsEqualDeep.js", module);
(function(){
var Stack = require('./_Stack'),
    equalArrays = require('./_equalArrays'),
    equalByTag = require('./_equalByTag'),
    equalObjects = require('./_equalObjects'),
    getTag = require('./_getTag'),
    isArray = require('./isArray'),
    isBuffer = require('./isBuffer'),
    isTypedArray = require('./isTypedArray');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;

}).apply(this, arguments);

},{"./_Stack":76,"./_equalArrays":135,"./_equalByTag":136,"./_equalObjects":137,"./_getTag":145,"./isArray":208,"./isBuffer":211,"./isTypedArray":217}],107:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseIsMatch.js", module);
(function(){
var Stack = require('./_Stack'),
    baseIsEqual = require('./_baseIsEqual');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

module.exports = baseIsMatch;

}).apply(this, arguments);

},{"./_Stack":76,"./_baseIsEqual":105}],108:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseIsNaN.js", module);
(function(){
/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

module.exports = baseIsNaN;

}).apply(this, arguments);

},{}],109:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseIsNative.js", module);
(function(){
var isFunction = require('./isFunction'),
    isMasked = require('./_isMasked'),
    isObject = require('./isObject'),
    toSource = require('./_toSource');

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;

}).apply(this, arguments);

},{"./_isMasked":158,"./_toSource":194,"./isFunction":212,"./isObject":214}],110:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseIsTypedArray.js", module);
(function(){
var baseGetTag = require('./_baseGetTag'),
    isLength = require('./isLength'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;

}).apply(this, arguments);

},{"./_baseGetTag":101,"./isLength":213,"./isObjectLike":215}],111:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseIteratee.js", module);
(function(){
var baseMatches = require('./_baseMatches'),
    baseMatchesProperty = require('./_baseMatchesProperty'),
    identity = require('./identity'),
    isArray = require('./isArray'),
    property = require('./property');

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if (typeof value == 'object') {
    return isArray(value)
      ? baseMatchesProperty(value[0], value[1])
      : baseMatches(value);
  }
  return property(value);
}

module.exports = baseIteratee;

}).apply(this, arguments);

},{"./_baseMatches":114,"./_baseMatchesProperty":115,"./identity":206,"./isArray":208,"./property":222}],112:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseKeys.js", module);
(function(){
var isPrototype = require('./_isPrototype'),
    nativeKeys = require('./_nativeKeys');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;

}).apply(this, arguments);

},{"./_isPrototype":159,"./_nativeKeys":175}],113:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseMap.js", module);
(function(){
var baseEach = require('./_baseEach'),
    isArrayLike = require('./isArrayLike');

/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function baseMap(collection, iteratee) {
  var index = -1,
      result = isArrayLike(collection) ? Array(collection.length) : [];

  baseEach(collection, function(value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}

module.exports = baseMap;

}).apply(this, arguments);

},{"./_baseEach":93,"./isArrayLike":209}],114:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseMatches.js", module);
(function(){
var baseIsMatch = require('./_baseIsMatch'),
    getMatchData = require('./_getMatchData'),
    matchesStrictComparable = require('./_matchesStrictComparable');

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

module.exports = baseMatches;

}).apply(this, arguments);

},{"./_baseIsMatch":107,"./_getMatchData":141,"./_matchesStrictComparable":172}],115:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseMatchesProperty.js", module);
(function(){
var baseIsEqual = require('./_baseIsEqual'),
    get = require('./get'),
    hasIn = require('./hasIn'),
    isKey = require('./_isKey'),
    isStrictComparable = require('./_isStrictComparable'),
    matchesStrictComparable = require('./_matchesStrictComparable'),
    toKey = require('./_toKey');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function(object) {
    var objValue = get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? hasIn(object, path)
      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

module.exports = baseMatchesProperty;

}).apply(this, arguments);

},{"./_baseIsEqual":105,"./_isKey":156,"./_isStrictComparable":160,"./_matchesStrictComparable":172,"./_toKey":193,"./get":204,"./hasIn":205}],116:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseProperty.js", module);
(function(){
/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

module.exports = baseProperty;

}).apply(this, arguments);

},{}],117:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_basePropertyDeep.js", module);
(function(){
var baseGet = require('./_baseGet');

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return baseGet(object, path);
  };
}

module.exports = basePropertyDeep;

}).apply(this, arguments);

},{"./_baseGet":99}],118:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseRest.js", module);
(function(){
var identity = require('./identity'),
    overRest = require('./_overRest'),
    setToString = require('./_setToString');

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;

}).apply(this, arguments);

},{"./_overRest":179,"./_setToString":184,"./identity":206}],119:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseSetToString.js", module);
(function(){
var constant = require('./constant'),
    defineProperty = require('./_defineProperty'),
    identity = require('./identity');

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;

}).apply(this, arguments);

},{"./_defineProperty":134,"./constant":196,"./identity":206}],120:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseSome.js", module);
(function(){
var baseEach = require('./_baseEach');

/**
 * The base implementation of `_.some` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function baseSome(collection, predicate) {
  var result;

  baseEach(collection, function(value, index, collection) {
    result = predicate(value, index, collection);
    return !result;
  });
  return !!result;
}

module.exports = baseSome;

}).apply(this, arguments);

},{"./_baseEach":93}],121:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseTimes.js", module);
(function(){
/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;

}).apply(this, arguments);

},{}],122:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseToString.js", module);
(function(){
var Symbol = require('./_Symbol'),
    arrayMap = require('./_arrayMap'),
    isArray = require('./isArray'),
    isSymbol = require('./isSymbol');

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = baseToString;

}).apply(this, arguments);

},{"./_Symbol":77,"./_arrayMap":86,"./isArray":208,"./isSymbol":216}],123:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseUnary.js", module);
(function(){
/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;

}).apply(this, arguments);

},{}],124:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_baseZipObject.js", module);
(function(){
/**
 * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
 *
 * @private
 * @param {Array} props The property identifiers.
 * @param {Array} values The property values.
 * @param {Function} assignFunc The function to assign values.
 * @returns {Object} Returns the new object.
 */
function baseZipObject(props, values, assignFunc) {
  var index = -1,
      length = props.length,
      valsLength = values.length,
      result = {};

  while (++index < length) {
    var value = index < valsLength ? values[index] : undefined;
    assignFunc(result, props[index], value);
  }
  return result;
}

module.exports = baseZipObject;

}).apply(this, arguments);

},{}],125:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_cacheHas.js", module);
(function(){
/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;

}).apply(this, arguments);

},{}],126:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_castFunction.js", module);
(function(){
var identity = require('./identity');

/**
 * Casts `value` to `identity` if it's not a function.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Function} Returns cast function.
 */
function castFunction(value) {
  return typeof value == 'function' ? value : identity;
}

module.exports = castFunction;

}).apply(this, arguments);

},{"./identity":206}],127:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_castPath.js", module);
(function(){
var isArray = require('./isArray'),
    isKey = require('./_isKey'),
    stringToPath = require('./_stringToPath'),
    toString = require('./toString');

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;

}).apply(this, arguments);

},{"./_isKey":156,"./_stringToPath":192,"./isArray":208,"./toString":229}],128:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_copyObject.js", module);
(function(){
var assignValue = require('./_assignValue'),
    baseAssignValue = require('./_baseAssignValue');

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;

}).apply(this, arguments);

},{"./_assignValue":89,"./_baseAssignValue":91}],129:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_coreJsData.js", module);
(function(){
var root = require('./_root');

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;

}).apply(this, arguments);

},{"./_root":180}],130:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_createAssigner.js", module);
(function(){
var baseRest = require('./_baseRest'),
    isIterateeCall = require('./_isIterateeCall');

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

module.exports = createAssigner;

}).apply(this, arguments);

},{"./_baseRest":118,"./_isIterateeCall":155}],131:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_createBaseEach.js", module);
(function(){
var isArrayLike = require('./isArrayLike');

/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while ((fromRight ? index-- : ++index < length)) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}

module.exports = createBaseEach;

}).apply(this, arguments);

},{"./isArrayLike":209}],132:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_createBaseFor.js", module);
(function(){
/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;

}).apply(this, arguments);

},{}],133:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_createFind.js", module);
(function(){
var baseIteratee = require('./_baseIteratee'),
    isArrayLike = require('./isArrayLike'),
    keys = require('./keys');

/**
 * Creates a `_.find` or `_.findLast` function.
 *
 * @private
 * @param {Function} findIndexFunc The function to find the collection index.
 * @returns {Function} Returns the new find function.
 */
function createFind(findIndexFunc) {
  return function(collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!isArrayLike(collection)) {
      var iteratee = baseIteratee(predicate, 3);
      collection = keys(collection);
      predicate = function(key) { return iteratee(iterable[key], key, iterable); };
    }
    var index = findIndexFunc(collection, predicate, fromIndex);
    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
  };
}

module.exports = createFind;

}).apply(this, arguments);

},{"./_baseIteratee":111,"./isArrayLike":209,"./keys":218}],134:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_defineProperty.js", module);
(function(){
var getNative = require('./_getNative');

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;

}).apply(this, arguments);

},{"./_getNative":142}],135:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_equalArrays.js", module);
(function(){
var SetCache = require('./_SetCache'),
    arraySome = require('./_arraySome'),
    cacheHas = require('./_cacheHas');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;

}).apply(this, arguments);

},{"./_SetCache":75,"./_arraySome":88,"./_cacheHas":125}],136:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_equalByTag.js", module);
(function(){
var Symbol = require('./_Symbol'),
    Uint8Array = require('./_Uint8Array'),
    eq = require('./eq'),
    equalArrays = require('./_equalArrays'),
    mapToArray = require('./_mapToArray'),
    setToArray = require('./_setToArray');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;

}).apply(this, arguments);

},{"./_Symbol":77,"./_Uint8Array":78,"./_equalArrays":135,"./_mapToArray":171,"./_setToArray":183,"./eq":198}],137:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_equalObjects.js", module);
(function(){
var getAllKeys = require('./_getAllKeys');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;

}).apply(this, arguments);

},{"./_getAllKeys":139}],138:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_freeGlobal.js", module);
(function(){
(function (global){
/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
}).apply(this, arguments);

},{}],139:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_getAllKeys.js", module);
(function(){
var baseGetAllKeys = require('./_baseGetAllKeys'),
    getSymbols = require('./_getSymbols'),
    keys = require('./keys');

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;

}).apply(this, arguments);

},{"./_baseGetAllKeys":100,"./_getSymbols":144,"./keys":218}],140:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_getMapData.js", module);
(function(){
var isKeyable = require('./_isKeyable');

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;

}).apply(this, arguments);

},{"./_isKeyable":157}],141:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_getMatchData.js", module);
(function(){
var isStrictComparable = require('./_isStrictComparable'),
    keys = require('./keys');

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, isStrictComparable(value)];
  }
  return result;
}

module.exports = getMatchData;

}).apply(this, arguments);

},{"./_isStrictComparable":160,"./keys":218}],142:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_getNative.js", module);
(function(){
var baseIsNative = require('./_baseIsNative'),
    getValue = require('./_getValue');

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;

}).apply(this, arguments);

},{"./_baseIsNative":109,"./_getValue":146}],143:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_getRawTag.js", module);
(function(){
var Symbol = require('./_Symbol');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;

}).apply(this, arguments);

},{"./_Symbol":77}],144:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_getSymbols.js", module);
(function(){
var arrayFilter = require('./_arrayFilter'),
    stubArray = require('./stubArray');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;

}).apply(this, arguments);

},{"./_arrayFilter":82,"./stubArray":224}],145:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_getTag.js", module);
(function(){
var DataView = require('./_DataView'),
    Map = require('./_Map'),
    Promise = require('./_Promise'),
    Set = require('./_Set'),
    WeakMap = require('./_WeakMap'),
    baseGetTag = require('./_baseGetTag'),
    toSource = require('./_toSource');

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;

}).apply(this, arguments);

},{"./_DataView":68,"./_Map":71,"./_Promise":73,"./_Set":74,"./_WeakMap":79,"./_baseGetTag":101,"./_toSource":194}],146:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_getValue.js", module);
(function(){
/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;

}).apply(this, arguments);

},{}],147:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_hasPath.js", module);
(function(){
var castPath = require('./_castPath'),
    isArguments = require('./isArguments'),
    isArray = require('./isArray'),
    isIndex = require('./_isIndex'),
    isLength = require('./isLength'),
    toKey = require('./_toKey');

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray(object) || isArguments(object));
}

module.exports = hasPath;

}).apply(this, arguments);

},{"./_castPath":127,"./_isIndex":154,"./_toKey":193,"./isArguments":207,"./isArray":208,"./isLength":213}],148:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_hashClear.js", module);
(function(){
var nativeCreate = require('./_nativeCreate');

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;

}).apply(this, arguments);

},{"./_nativeCreate":174}],149:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_hashDelete.js", module);
(function(){
/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;

}).apply(this, arguments);

},{}],150:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_hashGet.js", module);
(function(){
var nativeCreate = require('./_nativeCreate');

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;

}).apply(this, arguments);

},{"./_nativeCreate":174}],151:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_hashHas.js", module);
(function(){
var nativeCreate = require('./_nativeCreate');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;

}).apply(this, arguments);

},{"./_nativeCreate":174}],152:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_hashSet.js", module);
(function(){
var nativeCreate = require('./_nativeCreate');

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;

}).apply(this, arguments);

},{"./_nativeCreate":174}],153:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_isFlattenable.js", module);
(function(){
var Symbol = require('./_Symbol'),
    isArguments = require('./isArguments'),
    isArray = require('./isArray');

/** Built-in value references. */
var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return isArray(value) || isArguments(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

module.exports = isFlattenable;

}).apply(this, arguments);

},{"./_Symbol":77,"./isArguments":207,"./isArray":208}],154:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_isIndex.js", module);
(function(){
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;

}).apply(this, arguments);

},{}],155:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_isIterateeCall.js", module);
(function(){
var eq = require('./eq'),
    isArrayLike = require('./isArrayLike'),
    isIndex = require('./_isIndex'),
    isObject = require('./isObject');

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

module.exports = isIterateeCall;

}).apply(this, arguments);

},{"./_isIndex":154,"./eq":198,"./isArrayLike":209,"./isObject":214}],156:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_isKey.js", module);
(function(){
var isArray = require('./isArray'),
    isSymbol = require('./isSymbol');

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

module.exports = isKey;

}).apply(this, arguments);

},{"./isArray":208,"./isSymbol":216}],157:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_isKeyable.js", module);
(function(){
/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;

}).apply(this, arguments);

},{}],158:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_isMasked.js", module);
(function(){
var coreJsData = require('./_coreJsData');

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;

}).apply(this, arguments);

},{"./_coreJsData":129}],159:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_isPrototype.js", module);
(function(){
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;

}).apply(this, arguments);

},{}],160:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_isStrictComparable.js", module);
(function(){
var isObject = require('./isObject');

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !isObject(value);
}

module.exports = isStrictComparable;

}).apply(this, arguments);

},{"./isObject":214}],161:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_listCacheClear.js", module);
(function(){
/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;

}).apply(this, arguments);

},{}],162:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_listCacheDelete.js", module);
(function(){
var assocIndexOf = require('./_assocIndexOf');

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;

}).apply(this, arguments);

},{"./_assocIndexOf":90}],163:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_listCacheGet.js", module);
(function(){
var assocIndexOf = require('./_assocIndexOf');

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;

}).apply(this, arguments);

},{"./_assocIndexOf":90}],164:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_listCacheHas.js", module);
(function(){
var assocIndexOf = require('./_assocIndexOf');

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;

}).apply(this, arguments);

},{"./_assocIndexOf":90}],165:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_listCacheSet.js", module);
(function(){
var assocIndexOf = require('./_assocIndexOf');

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;

}).apply(this, arguments);

},{"./_assocIndexOf":90}],166:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_mapCacheClear.js", module);
(function(){
var Hash = require('./_Hash'),
    ListCache = require('./_ListCache'),
    Map = require('./_Map');

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;

}).apply(this, arguments);

},{"./_Hash":69,"./_ListCache":70,"./_Map":71}],167:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_mapCacheDelete.js", module);
(function(){
var getMapData = require('./_getMapData');

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;

}).apply(this, arguments);

},{"./_getMapData":140}],168:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_mapCacheGet.js", module);
(function(){
var getMapData = require('./_getMapData');

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;

}).apply(this, arguments);

},{"./_getMapData":140}],169:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_mapCacheHas.js", module);
(function(){
var getMapData = require('./_getMapData');

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;

}).apply(this, arguments);

},{"./_getMapData":140}],170:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_mapCacheSet.js", module);
(function(){
var getMapData = require('./_getMapData');

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;

}).apply(this, arguments);

},{"./_getMapData":140}],171:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_mapToArray.js", module);
(function(){
/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;

}).apply(this, arguments);

},{}],172:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_matchesStrictComparable.js", module);
(function(){
/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

module.exports = matchesStrictComparable;

}).apply(this, arguments);

},{}],173:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_memoizeCapped.js", module);
(function(){
var memoize = require('./memoize');

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;

}).apply(this, arguments);

},{"./memoize":221}],174:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_nativeCreate.js", module);
(function(){
var getNative = require('./_getNative');

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;

}).apply(this, arguments);

},{"./_getNative":142}],175:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_nativeKeys.js", module);
(function(){
var overArg = require('./_overArg');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;

}).apply(this, arguments);

},{"./_overArg":178}],176:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_nodeUtil.js", module);
(function(){
var freeGlobal = require('./_freeGlobal');

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

}).apply(this, arguments);

},{"./_freeGlobal":138}],177:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_objectToString.js", module);
(function(){
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;

}).apply(this, arguments);

},{}],178:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_overArg.js", module);
(function(){
/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;

}).apply(this, arguments);

},{}],179:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_overRest.js", module);
(function(){
var apply = require('./_apply');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;

}).apply(this, arguments);

},{"./_apply":80}],180:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_root.js", module);
(function(){
var freeGlobal = require('./_freeGlobal');

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;

}).apply(this, arguments);

},{"./_freeGlobal":138}],181:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_setCacheAdd.js", module);
(function(){
/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;

}).apply(this, arguments);

},{}],182:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_setCacheHas.js", module);
(function(){
/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;

}).apply(this, arguments);

},{}],183:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_setToArray.js", module);
(function(){
/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;

}).apply(this, arguments);

},{}],184:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_setToString.js", module);
(function(){
var baseSetToString = require('./_baseSetToString'),
    shortOut = require('./_shortOut');

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

module.exports = setToString;

}).apply(this, arguments);

},{"./_baseSetToString":119,"./_shortOut":185}],185:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_shortOut.js", module);
(function(){
/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;

}).apply(this, arguments);

},{}],186:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_stackClear.js", module);
(function(){
var ListCache = require('./_ListCache');

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;

}).apply(this, arguments);

},{"./_ListCache":70}],187:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_stackDelete.js", module);
(function(){
/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;

}).apply(this, arguments);

},{}],188:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_stackGet.js", module);
(function(){
/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;

}).apply(this, arguments);

},{}],189:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_stackHas.js", module);
(function(){
/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;

}).apply(this, arguments);

},{}],190:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_stackSet.js", module);
(function(){
var ListCache = require('./_ListCache'),
    Map = require('./_Map'),
    MapCache = require('./_MapCache');

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;

}).apply(this, arguments);

},{"./_ListCache":70,"./_Map":71,"./_MapCache":72}],191:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_strictIndexOf.js", module);
(function(){
/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

module.exports = strictIndexOf;

}).apply(this, arguments);

},{}],192:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_stringToPath.js", module);
(function(){
var memoizeCapped = require('./_memoizeCapped');

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

module.exports = stringToPath;

}).apply(this, arguments);

},{"./_memoizeCapped":173}],193:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_toKey.js", module);
(function(){
var isSymbol = require('./isSymbol');

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = toKey;

}).apply(this, arguments);

},{"./isSymbol":216}],194:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/_toSource.js", module);
(function(){
/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;

}).apply(this, arguments);

},{}],195:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/assign.js", module);
(function(){
var assignValue = require('./_assignValue'),
    copyObject = require('./_copyObject'),
    createAssigner = require('./_createAssigner'),
    isArrayLike = require('./isArrayLike'),
    isPrototype = require('./_isPrototype'),
    keys = require('./keys');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns own enumerable string keyed properties of source objects to the
 * destination object. Source objects are applied from left to right.
 * Subsequent sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object` and is loosely based on
 * [`Object.assign`](https://mdn.io/Object/assign).
 *
 * @static
 * @memberOf _
 * @since 0.10.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assignIn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assign({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'c': 3 }
 */
var assign = createAssigner(function(object, source) {
  if (isPrototype(source) || isArrayLike(source)) {
    copyObject(source, keys(source), object);
    return;
  }
  for (var key in source) {
    if (hasOwnProperty.call(source, key)) {
      assignValue(object, key, source[key]);
    }
  }
});

module.exports = assign;

}).apply(this, arguments);

},{"./_assignValue":89,"./_copyObject":128,"./_createAssigner":130,"./_isPrototype":159,"./isArrayLike":209,"./keys":218}],196:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/constant.js", module);
(function(){
/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

module.exports = constant;

}).apply(this, arguments);

},{}],197:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/difference.js", module);
(function(){
var baseDifference = require('./_baseDifference'),
    baseFlatten = require('./_baseFlatten'),
    baseRest = require('./_baseRest'),
    isArrayLikeObject = require('./isArrayLikeObject');

/**
 * Creates an array of `array` values not included in the other given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * **Note:** Unlike `_.pullAll`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...Array} [values] The values to exclude.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.without, _.xor
 * @example
 *
 * _.difference([2, 1], [2, 3]);
 * // => [1]
 */
var difference = baseRest(function(array, values) {
  return isArrayLikeObject(array)
    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
    : [];
});

module.exports = difference;

}).apply(this, arguments);

},{"./_baseDifference":92,"./_baseFlatten":96,"./_baseRest":118,"./isArrayLikeObject":210}],198:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/eq.js", module);
(function(){
/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;

}).apply(this, arguments);

},{}],199:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/filter.js", module);
(function(){
var arrayFilter = require('./_arrayFilter'),
    baseFilter = require('./_baseFilter'),
    baseIteratee = require('./_baseIteratee'),
    isArray = require('./isArray');

/**
 * Iterates over elements of `collection`, returning an array of all elements
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * **Note:** Unlike `_.remove`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 * @see _.reject
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': true },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * _.filter(users, function(o) { return !o.active; });
 * // => objects for ['fred']
 *
 * // The `_.matches` iteratee shorthand.
 * _.filter(users, { 'age': 36, 'active': true });
 * // => objects for ['barney']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.filter(users, ['active', false]);
 * // => objects for ['fred']
 *
 * // The `_.property` iteratee shorthand.
 * _.filter(users, 'active');
 * // => objects for ['barney']
 */
function filter(collection, predicate) {
  var func = isArray(collection) ? arrayFilter : baseFilter;
  return func(collection, baseIteratee(predicate, 3));
}

module.exports = filter;

}).apply(this, arguments);

},{"./_arrayFilter":82,"./_baseFilter":94,"./_baseIteratee":111,"./isArray":208}],200:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/find.js", module);
(function(){
var createFind = require('./_createFind'),
    findIndex = require('./findIndex');

/**
 * Iterates over elements of `collection`, returning the first element
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {*} Returns the matched element, else `undefined`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'age': 36, 'active': true },
 *   { 'user': 'fred',    'age': 40, 'active': false },
 *   { 'user': 'pebbles', 'age': 1,  'active': true }
 * ];
 *
 * _.find(users, function(o) { return o.age < 40; });
 * // => object for 'barney'
 *
 * // The `_.matches` iteratee shorthand.
 * _.find(users, { 'age': 1, 'active': true });
 * // => object for 'pebbles'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.find(users, ['active', false]);
 * // => object for 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.find(users, 'active');
 * // => object for 'barney'
 */
var find = createFind(findIndex);

module.exports = find;

}).apply(this, arguments);

},{"./_createFind":133,"./findIndex":201}],201:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/findIndex.js", module);
(function(){
var baseFindIndex = require('./_baseFindIndex'),
    baseIteratee = require('./_baseIteratee'),
    toInteger = require('./toInteger');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * This method is like `_.find` except that it returns the index of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.findIndex(users, function(o) { return o.user == 'barney'; });
 * // => 0
 *
 * // The `_.matches` iteratee shorthand.
 * _.findIndex(users, { 'user': 'fred', 'active': false });
 * // => 1
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findIndex(users, ['active', false]);
 * // => 0
 *
 * // The `_.property` iteratee shorthand.
 * _.findIndex(users, 'active');
 * // => 2
 */
function findIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = fromIndex == null ? 0 : toInteger(fromIndex);
  if (index < 0) {
    index = nativeMax(length + index, 0);
  }
  return baseFindIndex(array, baseIteratee(predicate, 3), index);
}

module.exports = findIndex;

}).apply(this, arguments);

},{"./_baseFindIndex":95,"./_baseIteratee":111,"./toInteger":227}],202:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/forEach.js", module);
(function(){
var arrayEach = require('./_arrayEach'),
    baseEach = require('./_baseEach'),
    castFunction = require('./_castFunction'),
    isArray = require('./isArray');

/**
 * Iterates over elements of `collection` and invokes `iteratee` for each element.
 * The iteratee is invoked with three arguments: (value, index|key, collection).
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * **Note:** As with other "Collections" methods, objects with a "length"
 * property are iterated like arrays. To avoid this behavior use `_.forIn`
 * or `_.forOwn` for object iteration.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @alias each
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 * @see _.forEachRight
 * @example
 *
 * _.forEach([1, 2], function(value) {
 *   console.log(value);
 * });
 * // => Logs `1` then `2`.
 *
 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
 */
function forEach(collection, iteratee) {
  var func = isArray(collection) ? arrayEach : baseEach;
  return func(collection, castFunction(iteratee));
}

module.exports = forEach;

}).apply(this, arguments);

},{"./_arrayEach":81,"./_baseEach":93,"./_castFunction":126,"./isArray":208}],203:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/forOwn.js", module);
(function(){
var baseForOwn = require('./_baseForOwn'),
    castFunction = require('./_castFunction');

/**
 * Iterates over own enumerable string keyed properties of an object and
 * invokes `iteratee` for each property. The iteratee is invoked with three
 * arguments: (value, key, object). Iteratee functions may exit iteration
 * early by explicitly returning `false`.
 *
 * @static
 * @memberOf _
 * @since 0.3.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns `object`.
 * @see _.forOwnRight
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.forOwn(new Foo, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
 */
function forOwn(object, iteratee) {
  return object && baseForOwn(object, castFunction(iteratee));
}

module.exports = forOwn;

}).apply(this, arguments);

},{"./_baseForOwn":98,"./_castFunction":126}],204:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/get.js", module);
(function(){
var baseGet = require('./_baseGet');

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;

}).apply(this, arguments);

},{"./_baseGet":99}],205:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/hasIn.js", module);
(function(){
var baseHasIn = require('./_baseHasIn'),
    hasPath = require('./_hasPath');

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;

}).apply(this, arguments);

},{"./_baseHasIn":102,"./_hasPath":147}],206:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/identity.js", module);
(function(){
/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;

}).apply(this, arguments);

},{}],207:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/isArguments.js", module);
(function(){
var baseIsArguments = require('./_baseIsArguments'),
    isObjectLike = require('./isObjectLike');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;

}).apply(this, arguments);

},{"./_baseIsArguments":104,"./isObjectLike":215}],208:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/isArray.js", module);
(function(){
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;

}).apply(this, arguments);

},{}],209:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/isArrayLike.js", module);
(function(){
var isFunction = require('./isFunction'),
    isLength = require('./isLength');

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;

}).apply(this, arguments);

},{"./isFunction":212,"./isLength":213}],210:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/isArrayLikeObject.js", module);
(function(){
var isArrayLike = require('./isArrayLike'),
    isObjectLike = require('./isObjectLike');

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

module.exports = isArrayLikeObject;

}).apply(this, arguments);

},{"./isArrayLike":209,"./isObjectLike":215}],211:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/isBuffer.js", module);
(function(){
var root = require('./_root'),
    stubFalse = require('./stubFalse');

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

}).apply(this, arguments);

},{"./_root":180,"./stubFalse":225}],212:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/isFunction.js", module);
(function(){
var baseGetTag = require('./_baseGetTag'),
    isObject = require('./isObject');

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;

}).apply(this, arguments);

},{"./_baseGetTag":101,"./isObject":214}],213:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/isLength.js", module);
(function(){
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;

}).apply(this, arguments);

},{}],214:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/isObject.js", module);
(function(){
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;

}).apply(this, arguments);

},{}],215:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/isObjectLike.js", module);
(function(){
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;

}).apply(this, arguments);

},{}],216:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/isSymbol.js", module);
(function(){
var baseGetTag = require('./_baseGetTag'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;

}).apply(this, arguments);

},{"./_baseGetTag":101,"./isObjectLike":215}],217:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/isTypedArray.js", module);
(function(){
var baseIsTypedArray = require('./_baseIsTypedArray'),
    baseUnary = require('./_baseUnary'),
    nodeUtil = require('./_nodeUtil');

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;

}).apply(this, arguments);

},{"./_baseIsTypedArray":110,"./_baseUnary":123,"./_nodeUtil":176}],218:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/keys.js", module);
(function(){
var arrayLikeKeys = require('./_arrayLikeKeys'),
    baseKeys = require('./_baseKeys'),
    isArrayLike = require('./isArrayLike');

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;

}).apply(this, arguments);

},{"./_arrayLikeKeys":85,"./_baseKeys":112,"./isArrayLike":209}],219:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/map.js", module);
(function(){
var arrayMap = require('./_arrayMap'),
    baseIteratee = require('./_baseIteratee'),
    baseMap = require('./_baseMap'),
    isArray = require('./isArray');

/**
 * Creates an array of values by running each element in `collection` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
 *
 * The guarded methods are:
 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * _.map([4, 8], square);
 * // => [16, 64]
 *
 * _.map({ 'a': 4, 'b': 8 }, square);
 * // => [16, 64] (iteration order is not guaranteed)
 *
 * var users = [
 *   { 'user': 'barney' },
 *   { 'user': 'fred' }
 * ];
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, 'user');
 * // => ['barney', 'fred']
 */
function map(collection, iteratee) {
  var func = isArray(collection) ? arrayMap : baseMap;
  return func(collection, baseIteratee(iteratee, 3));
}

module.exports = map;

}).apply(this, arguments);

},{"./_arrayMap":86,"./_baseIteratee":111,"./_baseMap":113,"./isArray":208}],220:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/mapValues.js", module);
(function(){
var baseAssignValue = require('./_baseAssignValue'),
    baseForOwn = require('./_baseForOwn'),
    baseIteratee = require('./_baseIteratee');

/**
 * Creates an object with the same keys as `object` and values generated
 * by running each own enumerable string keyed property of `object` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, key, object).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns the new mapped object.
 * @see _.mapKeys
 * @example
 *
 * var users = {
 *   'fred':    { 'user': 'fred',    'age': 40 },
 *   'pebbles': { 'user': 'pebbles', 'age': 1 }
 * };
 *
 * _.mapValues(users, function(o) { return o.age; });
 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
 *
 * // The `_.property` iteratee shorthand.
 * _.mapValues(users, 'age');
 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
 */
function mapValues(object, iteratee) {
  var result = {};
  iteratee = baseIteratee(iteratee, 3);

  baseForOwn(object, function(value, key, object) {
    baseAssignValue(result, key, iteratee(value, key, object));
  });
  return result;
}

module.exports = mapValues;

}).apply(this, arguments);

},{"./_baseAssignValue":91,"./_baseForOwn":98,"./_baseIteratee":111}],221:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/memoize.js", module);
(function(){
var MapCache = require('./_MapCache');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = MapCache;

module.exports = memoize;

}).apply(this, arguments);

},{"./_MapCache":72}],222:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/property.js", module);
(function(){
var baseProperty = require('./_baseProperty'),
    basePropertyDeep = require('./_basePropertyDeep'),
    isKey = require('./_isKey'),
    toKey = require('./_toKey');

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

module.exports = property;

}).apply(this, arguments);

},{"./_baseProperty":116,"./_basePropertyDeep":117,"./_isKey":156,"./_toKey":193}],223:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/some.js", module);
(function(){
var arraySome = require('./_arraySome'),
    baseIteratee = require('./_baseIteratee'),
    baseSome = require('./_baseSome'),
    isArray = require('./isArray'),
    isIterateeCall = require('./_isIterateeCall');

/**
 * Checks if `predicate` returns truthy for **any** element of `collection`.
 * Iteration is stopped once `predicate` returns truthy. The predicate is
 * invoked with three arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 * @example
 *
 * _.some([null, 0, 'yes', false], Boolean);
 * // => true
 *
 * var users = [
 *   { 'user': 'barney', 'active': true },
 *   { 'user': 'fred',   'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.some(users, { 'user': 'barney', 'active': false });
 * // => false
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.some(users, ['active', false]);
 * // => true
 *
 * // The `_.property` iteratee shorthand.
 * _.some(users, 'active');
 * // => true
 */
function some(collection, predicate, guard) {
  var func = isArray(collection) ? arraySome : baseSome;
  if (guard && isIterateeCall(collection, predicate, guard)) {
    predicate = undefined;
  }
  return func(collection, baseIteratee(predicate, 3));
}

module.exports = some;

}).apply(this, arguments);

},{"./_arraySome":88,"./_baseIteratee":111,"./_baseSome":120,"./_isIterateeCall":155,"./isArray":208}],224:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/stubArray.js", module);
(function(){
/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;

}).apply(this, arguments);

},{}],225:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/stubFalse.js", module);
(function(){
/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;

}).apply(this, arguments);

},{}],226:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/toFinite.js", module);
(function(){
var toNumber = require('./toNumber');

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign = (value < 0 ? -1 : 1);
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

module.exports = toFinite;

}).apply(this, arguments);

},{"./toNumber":228}],227:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/toInteger.js", module);
(function(){
var toFinite = require('./toFinite');

/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
  var result = toFinite(value),
      remainder = result % 1;

  return result === result ? (remainder ? result - remainder : result) : 0;
}

module.exports = toInteger;

}).apply(this, arguments);

},{"./toFinite":226}],228:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/toNumber.js", module);
(function(){
var isObject = require('./isObject'),
    isSymbol = require('./isSymbol');

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = toNumber;

}).apply(this, arguments);

},{"./isObject":214,"./isSymbol":216}],229:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/toString.js", module);
(function(){
var baseToString = require('./_baseToString');

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;

}).apply(this, arguments);

},{"./_baseToString":122}],230:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/lodash/zipObject.js", module);
(function(){
var assignValue = require('./_assignValue'),
    baseZipObject = require('./_baseZipObject');

/**
 * This method is like `_.fromPairs` except that it accepts two arrays,
 * one of property identifiers and one of corresponding values.
 *
 * @static
 * @memberOf _
 * @since 0.4.0
 * @category Array
 * @param {Array} [props=[]] The property identifiers.
 * @param {Array} [values=[]] The property values.
 * @returns {Object} Returns the new object.
 * @example
 *
 * _.zipObject(['a', 'b'], [1, 2]);
 * // => { 'a': 1, 'b': 2 }
 */
function zipObject(props, values) {
  return baseZipObject(props || [], values || [], assignValue);
}

module.exports = zipObject;

}).apply(this, arguments);

},{"./_assignValue":89,"./_baseZipObject":124}],231:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/ms/index.js", module);
(function(){
/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isNaN(val) === false) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  if (ms >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (ms >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (ms >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (ms >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  return plural(ms, d, 'day') ||
    plural(ms, h, 'hour') ||
    plural(ms, m, 'minute') ||
    plural(ms, s, 'second') ||
    ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, n, name) {
  if (ms < n) {
    return;
  }
  if (ms < n * 1.5) {
    return Math.floor(ms / n) + ' ' + name;
  }
  return Math.ceil(ms / n) + ' ' + name + 's';
}

}).apply(this, arguments);

},{}],232:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/object-assign/index.js", module);
(function(){
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

'use strict';
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

}).apply(this, arguments);

},{}],233:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/parseqs/index.js", module);
(function(){
/**
 * Compiles a querystring
 * Returns string representation of the object
 *
 * @param {Object}
 * @api private
 */

exports.encode = function (obj) {
  var str = '';

  for (var i in obj) {
    if (obj.hasOwnProperty(i)) {
      if (str.length) str += '&';
      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);
    }
  }

  return str;
};

/**
 * Parses a simple querystring into an object
 *
 * @param {String} qs
 * @api private
 */

exports.decode = function(qs){
  var qry = {};
  var pairs = qs.split('&');
  for (var i = 0, l = pairs.length; i < l; i++) {
    var pair = pairs[i].split('=');
    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
  }
  return qry;
};

}).apply(this, arguments);

},{}],234:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/parseuri/index.js", module);
(function(){
/**
 * Parses an URI
 *
 * @author Steven Levithan <stevenlevithan.com> (MIT license)
 * @api private
 */

var re = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;

var parts = [
    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'
];

module.exports = function parseuri(str) {
    var src = str,
        b = str.indexOf('['),
        e = str.indexOf(']');

    if (b != -1 && e != -1) {
        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);
    }

    var m = re.exec(str || ''),
        uri = {},
        i = 14;

    while (i--) {
        uri[parts[i]] = m[i] || '';
    }

    if (b != -1 && e != -1) {
        uri.source = src;
        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');
        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');
        uri.ipv6uri = true;
    }

    return uri;
};

}).apply(this, arguments);

},{}],235:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/process/browser.js", module);
(function(){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

}).apply(this, arguments);

},{}],236:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/prop-types/checkPropTypes.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

var printWarning = function() {};

if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
  var loggedTypeFailures = {};

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          )

        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

module.exports = checkPropTypes;

}).call(this,require('_process'))
}).apply(this, arguments);

},{"./lib/ReactPropTypesSecret":241,"_process":235}],237:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/prop-types/factory.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

// React 15.5 references this module, and assumes PropTypes are still callable in production.
// Therefore we re-export development-only version with all the PropTypes checks here.
// However if one is migrating to the `prop-types` npm library, they will go through the
// `index.js` entry point, and it will branch depending on the environment.
var factory = require('./factoryWithTypeCheckers');
module.exports = function(isValidElement) {
  // It is still allowed in 15.5.
  var throwOnDirectAccess = false;
  return factory(isValidElement, throwOnDirectAccess);
};

}).apply(this, arguments);

},{"./factoryWithTypeCheckers":239}],238:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/prop-types/factoryWithThrowingShims.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');

function emptyFunction() {}

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

}).apply(this, arguments);

},{"./lib/ReactPropTypesSecret":241}],239:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/prop-types/factoryWithTypeCheckers.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

var assign = require('object-assign');

var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
var checkPropTypes = require('./checkPropTypes');

var printWarning = function() {};

if (process.env.NODE_ENV !== 'production') {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

}).call(this,require('_process'))
}).apply(this, arguments);

},{"./checkPropTypes":236,"./lib/ReactPropTypesSecret":241,"_process":235,"object-assign":232}],240:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/prop-types/index.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
    Symbol.for &&
    Symbol.for('react.element')) ||
    0xeac7;

  var isValidElement = function(object) {
    return typeof object === 'object' &&
      object !== null &&
      object.$$typeof === REACT_ELEMENT_TYPE;
  };

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = require('./factoryWithThrowingShims')();
}

}).call(this,require('_process'))
}).apply(this, arguments);

},{"./factoryWithThrowingShims":238,"./factoryWithTypeCheckers":239,"_process":235}],241:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/prop-types/lib/ReactPropTypesSecret.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

}).apply(this, arguments);

},{}],242:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-deep-force-update/lib/index.js", module);
(function(){
'use strict';

exports.__esModule = true;
exports['default'] = getForceUpdate;
function traverseRenderedChildren(internalInstance, callback, argument) {
  callback(internalInstance, argument);

  if (internalInstance._renderedComponent) {
    traverseRenderedChildren(internalInstance._renderedComponent, callback, argument);
  } else {
    for (var key in internalInstance._renderedChildren) {
      if (internalInstance._renderedChildren.hasOwnProperty(key)) {
        traverseRenderedChildren(internalInstance._renderedChildren[key], callback, argument);
      }
    }
  }
}

function setPendingForceUpdate(internalInstance) {
  if (internalInstance._pendingForceUpdate === false) {
    internalInstance._pendingForceUpdate = true;
  }
}

function forceUpdateIfPending(internalInstance, React) {
  if (internalInstance._pendingForceUpdate === true) {
    var publicInstance = internalInstance._instance;
    React.Component.prototype.forceUpdate.call(publicInstance);
  }
}

function deepForceUpdateStack(instance, React) {
  var internalInstance = instance._reactInternalInstance;
  traverseRenderedChildren(internalInstance, setPendingForceUpdate);
  traverseRenderedChildren(internalInstance, forceUpdateIfPending, React);
}

function deepForceUpdate(instance, React) {
  var root = instance._reactInternalFiber || instance._reactInternalInstance;
  if (typeof root.tag !== 'number') {
    // Traverse stack-based React tree.
    return deepForceUpdateStack(instance, React);
  }

  var node = root;
  while (true) {
    if (node.stateNode !== null && typeof node.type === 'function') {
      var publicInstance = node.stateNode;
      var updater = publicInstance.updater;

      if (typeof publicInstance.forceUpdate === 'function') {
        publicInstance.forceUpdate();
      } else if (updater && typeof updater.enqueueForceUpdate === 'function') {
        updater.enqueueForceUpdate(publicInstance);
      }
    }
    if (node.child) {
      node.child['return'] = node;
      node = node.child;
      continue;
    }
    if (node === root) {
      return undefined;
    }
    while (!node.sibling) {
      if (!node['return'] || node['return'] === root) {
        return undefined;
      }
      node = node['return'];
    }
    node.sibling['return'] = node['return'];
    node = node.sibling;
  }
}

function getForceUpdate(React) {
  return function (instance) {
    deepForceUpdate(instance, React);
  };
}

module.exports = exports['default'];
}).apply(this, arguments);

},{}],243:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/index.js", module);
(function(){
'use strict';

module.exports = require('./lib/ReactDOM');

}).apply(this, arguments);

},{"./lib/ReactDOM":273}],244:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ARIADOMPropertyConfig.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ARIADOMPropertyConfig = {
  Properties: {
    // Global States and Properties
    'aria-current': 0, // state
    'aria-details': 0,
    'aria-disabled': 0, // state
    'aria-hidden': 0, // state
    'aria-invalid': 0, // state
    'aria-keyshortcuts': 0,
    'aria-label': 0,
    'aria-roledescription': 0,
    // Widget Attributes
    'aria-autocomplete': 0,
    'aria-checked': 0,
    'aria-expanded': 0,
    'aria-haspopup': 0,
    'aria-level': 0,
    'aria-modal': 0,
    'aria-multiline': 0,
    'aria-multiselectable': 0,
    'aria-orientation': 0,
    'aria-placeholder': 0,
    'aria-pressed': 0,
    'aria-readonly': 0,
    'aria-required': 0,
    'aria-selected': 0,
    'aria-sort': 0,
    'aria-valuemax': 0,
    'aria-valuemin': 0,
    'aria-valuenow': 0,
    'aria-valuetext': 0,
    // Live Region Attributes
    'aria-atomic': 0,
    'aria-busy': 0,
    'aria-live': 0,
    'aria-relevant': 0,
    // Drag-and-Drop Attributes
    'aria-dropeffect': 0,
    'aria-grabbed': 0,
    // Relationship Attributes
    'aria-activedescendant': 0,
    'aria-colcount': 0,
    'aria-colindex': 0,
    'aria-colspan': 0,
    'aria-controls': 0,
    'aria-describedby': 0,
    'aria-errormessage': 0,
    'aria-flowto': 0,
    'aria-labelledby': 0,
    'aria-owns': 0,
    'aria-posinset': 0,
    'aria-rowcount': 0,
    'aria-rowindex': 0,
    'aria-rowspan': 0,
    'aria-setsize': 0
  },
  DOMAttributeNames: {},
  DOMPropertyNames: {}
};

module.exports = ARIADOMPropertyConfig;
}).apply(this, arguments);

},{}],245:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/AutoFocusUtils.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var focusNode = require('fbjs/lib/focusNode');

var AutoFocusUtils = {
  focusDOMComponent: function () {
    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
  }
};

module.exports = AutoFocusUtils;
}).apply(this, arguments);

},{"./ReactDOMComponentTree":276,"fbjs/lib/focusNode":48}],246:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/BeforeInputEventPlugin.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var FallbackCompositionState = require('./FallbackCompositionState');
var SyntheticCompositionEvent = require('./SyntheticCompositionEvent');
var SyntheticInputEvent = require('./SyntheticInputEvent');

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case 'topCompositionStart':
      return eventTypes.compositionStart;
    case 'topCompositionEnd':
      return eventTypes.compositionEnd;
    case 'topCompositionUpdate':
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topKeyUp':
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case 'topKeyDown':
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case 'topKeyPress':
    case 'topMouseDown':
    case 'topBlur':
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition fallback object, if any.
var currentComposition = null;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!currentComposition) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!currentComposition && eventType === eventTypes.compositionStart) {
      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (currentComposition) {
        fallbackData = currentComposition.getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topCompositionEnd':
      return getDataFromCustomEvent(nativeEvent);
    case 'topKeyPress':
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case 'topTextInput':
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (currentComposition) {
    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = currentComposition.getData();
      FallbackCompositionState.release(currentComposition);
      currentComposition = null;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case 'topPaste':
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case 'topKeyPress':
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
        return String.fromCharCode(nativeEvent.which);
      }
      return null;
    case 'topCompositionEnd':
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
  }
};

module.exports = BeforeInputEventPlugin;
}).apply(this, arguments);

},{"./EventPropagators":262,"./FallbackCompositionState":263,"./SyntheticCompositionEvent":327,"./SyntheticInputEvent":331,"fbjs/lib/ExecutionEnvironment":40}],247:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/CSSProperty.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

/**
 * CSS properties which accept numbers but are not in units of "px".
 */

var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundAttachment: true,
    backgroundColor: true,
    backgroundImage: true,
    backgroundPositionX: true,
    backgroundPositionY: true,
    backgroundRepeat: true
  },
  backgroundPosition: {
    backgroundPositionX: true,
    backgroundPositionY: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  },
  outline: {
    outlineWidth: true,
    outlineStyle: true,
    outlineColor: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;
}).apply(this, arguments);

},{}],248:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/CSSPropertyOperations.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var CSSProperty = require('./CSSProperty');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactInstrumentation = require('./ReactInstrumentation');

var camelizeStyleName = require('fbjs/lib/camelizeStyleName');
var dangerousStyleValue = require('./dangerousStyleValue');
var hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');
var memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');
var warning = require('fbjs/lib/warning');

var processStyleName = memoizeStringOnly(function (styleName) {
  return hyphenateStyleName(styleName);
});

var hasShorthandPropertyBug = false;
var styleFloatAccessor = 'cssFloat';
if (ExecutionEnvironment.canUseDOM) {
  var tempStyle = document.createElement('div').style;
  try {
    // IE8 throws "Invalid argument." if resetting shorthand style properties.
    tempStyle.font = '';
  } catch (e) {
    hasShorthandPropertyBug = true;
  }
  // IE8 only supports accessing cssFloat (standard) as styleFloat
  if (document.documentElement.style.cssFloat === undefined) {
    styleFloatAccessor = 'styleFloat';
  }
}

if (process.env.NODE_ENV !== 'production') {
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;

  var warnHyphenatedStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
  };

  var warnBadVendoredStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
  };

  var warnStyleValueWithSemicolon = function (name, value, owner) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, "Style property values shouldn't contain a semicolon.%s " + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
  };

  var warnStyleValueIsNaN = function (name, value, owner) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
  };

  var checkRenderMessage = function (owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  };

  /**
   * @param {string} name
   * @param {*} value
   * @param {ReactDOMComponent} component
   */
  var warnValidStyle = function (name, value, component) {
    var owner;
    if (component) {
      owner = component._currentElement._owner;
    }
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, owner);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, owner);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, owner);
    }

    if (typeof value === 'number' && isNaN(value)) {
      warnStyleValueIsNaN(name, value, owner);
    }
  };
}

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {
  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @param {ReactDOMComponent} component
   * @return {?string}
   */
  createMarkupForStyles: function (styles, component) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var isCustomProperty = styleName.indexOf('--') === 0;
      var styleValue = styles[styleName];
      if (process.env.NODE_ENV !== 'production') {
        if (!isCustomProperty) {
          warnValidStyle(styleName, styleValue, component);
        }
      }
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, component, isCustomProperty) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   * @param {ReactDOMComponent} component
   */
  setValueForStyles: function (node, styles, component) {
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: component._debugID,
        type: 'update styles',
        payload: styles
      });
    }

    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var isCustomProperty = styleName.indexOf('--') === 0;
      if (process.env.NODE_ENV !== 'production') {
        if (!isCustomProperty) {
          warnValidStyle(styleName, styles[styleName], component);
        }
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName], component, isCustomProperty);
      if (styleName === 'float' || styleName === 'cssFloat') {
        styleName = styleFloatAccessor;
      }
      if (isCustomProperty) {
        style.setProperty(styleName, styleValue);
      } else if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }
};

module.exports = CSSPropertyOperations;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./CSSProperty":247,"./ReactInstrumentation":305,"./dangerousStyleValue":344,"_process":235,"fbjs/lib/ExecutionEnvironment":40,"fbjs/lib/camelizeStyleName":42,"fbjs/lib/hyphenateStyleName":53,"fbjs/lib/memoizeStringOnly":57,"fbjs/lib/warning":61}],249:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/CallbackQueue.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PooledClass = require('./PooledClass');

var invariant = require('fbjs/lib/invariant');

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `CallbackQueue.getPooled()`.
 *
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */

var CallbackQueue = function () {
  function CallbackQueue(arg) {
    _classCallCheck(this, CallbackQueue);

    this._callbacks = null;
    this._contexts = null;
    this._arg = arg;
  }

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */


  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
    this._callbacks = this._callbacks || [];
    this._callbacks.push(callback);
    this._contexts = this._contexts || [];
    this._contexts.push(context);
  };

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */


  CallbackQueue.prototype.notifyAll = function notifyAll() {
    var callbacks = this._callbacks;
    var contexts = this._contexts;
    var arg = this._arg;
    if (callbacks && contexts) {
      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
      this._callbacks = null;
      this._contexts = null;
      for (var i = 0; i < callbacks.length; i++) {
        callbacks[i].call(contexts[i], arg);
      }
      callbacks.length = 0;
      contexts.length = 0;
    }
  };

  CallbackQueue.prototype.checkpoint = function checkpoint() {
    return this._callbacks ? this._callbacks.length : 0;
  };

  CallbackQueue.prototype.rollback = function rollback(len) {
    if (this._callbacks && this._contexts) {
      this._callbacks.length = len;
      this._contexts.length = len;
    }
  };

  /**
   * Resets the internal queue.
   *
   * @internal
   */


  CallbackQueue.prototype.reset = function reset() {
    this._callbacks = null;
    this._contexts = null;
  };

  /**
   * `PooledClass` looks for this.
   */


  CallbackQueue.prototype.destructor = function destructor() {
    this.reset();
  };

  return CallbackQueue;
}();

module.exports = PooledClass.addPoolingTo(CallbackQueue);
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./PooledClass":267,"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54}],250:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ChangeEventPlugin.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var EventPluginHub = require('./EventPluginHub');
var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');
var SyntheticEvent = require('./SyntheticEvent');

var inputValueTracking = require('./inputValueTracking');
var getEventTarget = require('./getEventTarget');
var isEventSupported = require('./isEventSupported');
var isTextInputElement = require('./isTextInputElement');

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
  }
};

function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
  var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, target);
  event.type = 'change';
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}
/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue(false);
}

function startWatchingForChangeEventIE8(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementInst = null;
}

function getInstIfValueChanged(targetInst, nativeEvent) {
  var updated = inputValueTracking.updateValueIfChanged(targetInst);
  var simulated = nativeEvent.simulated === true && ChangeEventPlugin._allowSimulatedPassThrough;

  if (updated || simulated) {
    return targetInst;
  }
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === 'topChange') {
    return targetInst;
  }
}

function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForChangeEventIE8();
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.

  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
}

/**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}

/**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onpropertychange', handlePropertyChange);

  activeElement = null;
  activeElementInst = null;
}

/**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  if (getInstIfValueChanged(activeElementInst, nativeEvent)) {
    manualDispatchChangeEvent(nativeEvent);
  }
}

function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventPolyfill(topLevelType, targetInst, nativeEvent) {
  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    return getInstIfValueChanged(activeElementInst, nativeEvent);
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst, nativeEvent) {
  if (topLevelType === 'topClick') {
    return getInstIfValueChanged(targetInst, nativeEvent);
  }
}

function getTargetInstForInputOrChangeEvent(topLevelType, targetInst, nativeEvent) {
  if (topLevelType === 'topInput' || topLevelType === 'topChange') {
    return getInstIfValueChanged(targetInst, nativeEvent);
  }
}

function handleControlledInputBlur(inst, node) {
  // TODO: In IE, inst is occasionally null. Why?
  if (inst == null) {
    return;
  }

  // Fiber and ReactDOM keep wrapper state in separate places
  var state = inst._wrapperState || node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  // If controlled, assign the value attribute to the current value on blur
  var value = '' + node.value;
  if (node.getAttribute('value') !== value) {
    node.setAttribute('value', value);
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {
  eventTypes: eventTypes,

  _allowSimulatedPassThrough: true,
  _isInputEventSupported: isInputEventSupported,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    var getTargetInstFunc, handleEventFunc;
    if (shouldUseChangeEvent(targetNode)) {
      if (doesChangeEventBubble) {
        getTargetInstFunc = getTargetInstForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventPolyfill;
        handleEventFunc = handleEventsForInputEventPolyfill;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst, nativeEvent);
      if (inst) {
        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }

    // When blurring, set the value attribute for number inputs
    if (topLevelType === 'topBlur') {
      handleControlledInputBlur(targetInst, targetNode);
    }
  }
};

module.exports = ChangeEventPlugin;
}).apply(this, arguments);

},{"./EventPluginHub":259,"./EventPropagators":262,"./ReactDOMComponentTree":276,"./ReactUpdates":320,"./SyntheticEvent":329,"./getEventTarget":352,"./inputValueTracking":358,"./isEventSupported":360,"./isTextInputElement":361,"fbjs/lib/ExecutionEnvironment":40}],251:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/DOMChildrenOperations.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var DOMLazyTree = require('./DOMLazyTree');
var Danger = require('./Danger');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstrumentation = require('./ReactInstrumentation');

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');
var setInnerHTML = require('./setInnerHTML');
var setTextContent = require('./setTextContent');

function getNodeAfter(parentNode, node) {
  // Special case for text components, which return [open, close] comments
  // from getHostNode.
  if (Array.isArray(node)) {
    node = node[1];
  }
  return node ? node.nextSibling : parentNode.firstChild;
}

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
  // We rely exclusively on `insertBefore(node, null)` instead of also using
  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
  // we are careful to use `null`.)
  parentNode.insertBefore(childNode, referenceNode);
});

function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
}

function moveChild(parentNode, childNode, referenceNode) {
  if (Array.isArray(childNode)) {
    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
  } else {
    insertChildAt(parentNode, childNode, referenceNode);
  }
}

function removeChild(parentNode, childNode) {
  if (Array.isArray(childNode)) {
    var closingComment = childNode[1];
    childNode = childNode[0];
    removeDelimitedText(parentNode, childNode, closingComment);
    parentNode.removeChild(closingComment);
  }
  parentNode.removeChild(childNode);
}

function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
  var node = openingComment;
  while (true) {
    var nextNode = node.nextSibling;
    insertChildAt(parentNode, node, referenceNode);
    if (node === closingComment) {
      break;
    }
    node = nextNode;
  }
}

function removeDelimitedText(parentNode, startNode, closingComment) {
  while (true) {
    var node = startNode.nextSibling;
    if (node === closingComment) {
      // The closing comment is removed by ReactMultiChild.
      break;
    } else {
      parentNode.removeChild(node);
    }
  }
}

function replaceDelimitedText(openingComment, closingComment, stringText) {
  var parentNode = openingComment.parentNode;
  var nodeAfterComment = openingComment.nextSibling;
  if (nodeAfterComment === closingComment) {
    // There are no text nodes between the opening and closing comments; insert
    // a new one if stringText isn't empty.
    if (stringText) {
      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
    }
  } else {
    if (stringText) {
      // Set the text content of the first node after the opening comment, and
      // remove all following nodes up until the closing comment.
      setTextContent(nodeAfterComment, stringText);
      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
    } else {
      removeDelimitedText(parentNode, openingComment, closingComment);
    }
  }

  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onHostOperation({
      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
      type: 'replace text',
      payload: stringText
    });
  }
}

var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
if (process.env.NODE_ENV !== 'production') {
  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
    if (prevInstance._debugID !== 0) {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: prevInstance._debugID,
        type: 'replace with',
        payload: markup.toString()
      });
    } else {
      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
      if (nextInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: nextInstance._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  };
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {
  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

  replaceDelimitedText: replaceDelimitedText,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  processUpdates: function (parentNode, updates) {
    if (process.env.NODE_ENV !== 'production') {
      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
    }

    for (var k = 0; k < updates.length; k++) {
      var update = updates[k];
      switch (update.type) {
        case 'INSERT_MARKUP':
          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'insert child',
              payload: {
                toIndex: update.toIndex,
                content: update.content.toString()
              }
            });
          }
          break;
        case 'MOVE_EXISTING':
          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'move child',
              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
            });
          }
          break;
        case 'SET_MARKUP':
          setInnerHTML(parentNode, update.content);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace children',
              payload: update.content.toString()
            });
          }
          break;
        case 'TEXT_CONTENT':
          setTextContent(parentNode, update.content);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace text',
              payload: update.content.toString()
            });
          }
          break;
        case 'REMOVE_NODE':
          removeChild(parentNode, update.fromNode);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'remove child',
              payload: { fromIndex: update.fromIndex }
            });
          }
          break;
      }
    }
  }
};

module.exports = DOMChildrenOperations;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./DOMLazyTree":252,"./Danger":256,"./ReactDOMComponentTree":276,"./ReactInstrumentation":305,"./createMicrosoftUnsafeLocalFunction":343,"./setInnerHTML":365,"./setTextContent":366,"_process":235}],252:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/DOMLazyTree.js", module);
(function(){
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var DOMNamespaces = require('./DOMNamespaces');
var setInnerHTML = require('./setInnerHTML');

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');
var setTextContent = require('./setTextContent');

var ELEMENT_NODE_TYPE = 1;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

/**
 * In IE (8-11) and Edge, appending nodes with no children is dramatically
 * faster than appending a full subtree, so we essentially queue up the
 * .appendChild calls here and apply them so each node is added to its parent
 * before any children are added.
 *
 * In other browsers, doing so is slower or neutral compared to the other order
 * (in Firefox, twice as slow) so we only do this inversion in IE.
 *
 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
 */
var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

function insertTreeChildren(tree) {
  if (!enableLazy) {
    return;
  }
  var node = tree.node;
  var children = tree.children;
  if (children.length) {
    for (var i = 0; i < children.length; i++) {
      insertTreeBefore(node, children[i], null);
    }
  } else if (tree.html != null) {
    setInnerHTML(node, tree.html);
  } else if (tree.text != null) {
    setTextContent(node, tree.text);
  }
}

var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
  // DocumentFragments aren't actually part of the DOM after insertion so
  // appending children won't update the DOM. We need to ensure the fragment
  // is properly populated first, breaking out of our lazy approach for just
  // this level. Also, some <object> plugins (like Flash Player) will read
  // <param> nodes immediately upon insertion into the DOM, so <object>
  // must also be populated prior to insertion into the DOM.
  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
    insertTreeChildren(tree);
    parentNode.insertBefore(tree.node, referenceNode);
  } else {
    parentNode.insertBefore(tree.node, referenceNode);
    insertTreeChildren(tree);
  }
});

function replaceChildWithTree(oldNode, newTree) {
  oldNode.parentNode.replaceChild(newTree.node, oldNode);
  insertTreeChildren(newTree);
}

function queueChild(parentTree, childTree) {
  if (enableLazy) {
    parentTree.children.push(childTree);
  } else {
    parentTree.node.appendChild(childTree.node);
  }
}

function queueHTML(tree, html) {
  if (enableLazy) {
    tree.html = html;
  } else {
    setInnerHTML(tree.node, html);
  }
}

function queueText(tree, text) {
  if (enableLazy) {
    tree.text = text;
  } else {
    setTextContent(tree.node, text);
  }
}

function toString() {
  return this.node.nodeName;
}

function DOMLazyTree(node) {
  return {
    node: node,
    children: [],
    html: null,
    text: null,
    toString: toString
  };
}

DOMLazyTree.insertTreeBefore = insertTreeBefore;
DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
DOMLazyTree.queueChild = queueChild;
DOMLazyTree.queueHTML = queueHTML;
DOMLazyTree.queueText = queueText;

module.exports = DOMLazyTree;
}).apply(this, arguments);

},{"./DOMNamespaces":253,"./createMicrosoftUnsafeLocalFunction":343,"./setInnerHTML":365,"./setTextContent":366}],253:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/DOMNamespaces.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var DOMNamespaces = {
  html: 'http://www.w3.org/1999/xhtml',
  mathml: 'http://www.w3.org/1998/Math/MathML',
  svg: 'http://www.w3.org/2000/svg'
};

module.exports = DOMNamespaces;
}).apply(this, arguments);

},{}],254:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/DOMProperty.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_PROPERTY: 0x1,
  HAS_BOOLEAN_VALUE: 0x4,
  HAS_NUMERIC_VALUE: 0x8,
  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
   * attribute namespace URL. (Attribute names not specified use no namespace.)
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function (domPropertyConfig) {
    var Injection = DOMPropertyInjection;
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
    }

    for (var propName in Properties) {
      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

      var lowerCased = propName.toLowerCase();
      var propConfig = Properties[propName];

      var propertyInfo = {
        attributeName: lowerCased,
        attributeNamespace: null,
        propertyName: propName,
        mutationMethod: null,

        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
      };
      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

      if (process.env.NODE_ENV !== 'production') {
        DOMProperty.getPossibleStandardName[lowerCased] = propName;
      }

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];
        propertyInfo.attributeName = attributeName;
        if (process.env.NODE_ENV !== 'production') {
          DOMProperty.getPossibleStandardName[attributeName] = propName;
        }
      }

      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
      }

      if (DOMPropertyNames.hasOwnProperty(propName)) {
        propertyInfo.propertyName = DOMPropertyNames[propName];
      }

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        propertyInfo.mutationMethod = DOMMutationMethods[propName];
      }

      DOMProperty.properties[propName] = propertyInfo;
    }
  }
};

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {
  ID_ATTRIBUTE_NAME: 'data-reactid',
  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

  /**
   * Map from property "standard name" to an object with info about how to set
   * the property in the DOM. Each object contains:
   *
   * attributeName:
   *   Used when rendering markup or with `*Attribute()`.
   * attributeNamespace
   * propertyName:
   *   Used on DOM node instances. (This includes properties that mutate due to
   *   external factors.)
   * mutationMethod:
   *   If non-null, used instead of the property or `setAttribute()` after
   *   initial render.
   * mustUseProperty:
   *   Whether the property must be accessed and mutated as an object property.
   * hasBooleanValue:
   *   Whether the property should be removed when set to a falsey value.
   * hasNumericValue:
   *   Whether the property must be numeric or parse as a numeric and should be
   *   removed when set to a falsey value.
   * hasPositiveNumericValue:
   *   Whether the property must be positive numeric or parse as a positive
   *   numeric and should be removed when set to a falsey value.
   * hasOverloadedBooleanValue:
   *   Whether the property can be used as a flag as well as with a value.
   *   Removed when strictly equal to false; present without a value when
   *   strictly equal to true; present with a value otherwise.
   */
  properties: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties. Available only in __DEV__.
   *
   * autofocus is predefined, because adding it to the property whitelist
   * causes unintended side effects.
   *
   * @type {Object}
   */
  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? { autofocus: 'autoFocus' } : null,

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function (attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54}],255:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/DOMPropertyOperations.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstrumentation = require('./ReactInstrumentation');

var quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');
var warning = require('fbjs/lib/warning');

var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
    return true;
  }
  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
  return false;
}

function shouldIgnoreValue(propertyInfo, value) {
  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {
  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function (id) {
    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
  },

  setAttributeForID: function (node, id) {
    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
  },

  createMarkupForRoot: function () {
    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
  },

  setAttributeForRoot: function (node) {
    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function (name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      if (shouldIgnoreValue(propertyInfo, value)) {
        return '';
      }
      var attributeName = propertyInfo.attributeName;
      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
        return attributeName + '=""';
      }
      return attributeName + '=' + quoteAttributeValueForBrowser(value);
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return name + '=' + quoteAttributeValueForBrowser(value);
    }
    return null;
  },

  /**
   * Creates markup for a custom property.
   *
   * @param {string} name
   * @param {*} value
   * @return {string} Markup string, or empty string if the property was invalid.
   */
  createMarkupForCustomAttribute: function (name, value) {
    if (!isAttributeNameSafe(name) || value == null) {
      return '';
    }
    return name + '=' + quoteAttributeValueForBrowser(value);
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function (node, name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(propertyInfo, value)) {
        this.deleteValueForProperty(node, name);
        return;
      } else if (propertyInfo.mustUseProperty) {
        // Contrary to `setAttribute`, object properties are properly
        // `toString`ed by IE8/9.
        node[propertyInfo.propertyName] = value;
      } else {
        var attributeName = propertyInfo.attributeName;
        var namespace = propertyInfo.attributeNamespace;
        // `setAttribute` with objects becomes only `[object]` in IE8/9,
        // ('' + value) makes it output the correct toString()-value.
        if (namespace) {
          node.setAttributeNS(namespace, attributeName, '' + value);
        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
          node.setAttribute(attributeName, '');
        } else {
          node.setAttribute(attributeName, '' + value);
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      DOMPropertyOperations.setValueForAttribute(node, name, value);
      return;
    }

    if (process.env.NODE_ENV !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  setValueForAttribute: function (node, name, value) {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (value == null) {
      node.removeAttribute(name);
    } else {
      node.setAttribute(name, '' + value);
    }

    if (process.env.NODE_ENV !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  /**
   * Deletes an attributes from a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForAttribute: function (node, name) {
    node.removeAttribute(name);
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function (node, name) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (propertyInfo.mustUseProperty) {
        var propName = propertyInfo.propertyName;
        if (propertyInfo.hasBooleanValue) {
          node[propName] = false;
        } else {
          node[propName] = '';
        }
      } else {
        node.removeAttribute(propertyInfo.attributeName);
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    }

    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  }
};

module.exports = DOMPropertyOperations;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./DOMProperty":254,"./ReactDOMComponentTree":276,"./ReactInstrumentation":305,"./quoteAttributeValueForBrowser":362,"_process":235,"fbjs/lib/warning":61}],256:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/Danger.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var DOMLazyTree = require('./DOMLazyTree');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');
var emptyFunction = require('fbjs/lib/emptyFunction');
var invariant = require('fbjs/lib/invariant');

var Danger = {
  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

    if (typeof markup === 'string') {
      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
      oldChild.parentNode.replaceChild(newChild, oldChild);
    } else {
      DOMLazyTree.replaceChildWithTree(oldChild, markup);
    }
  }
};

module.exports = Danger;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./DOMLazyTree":252,"./reactProdInvariant":363,"_process":235,"fbjs/lib/ExecutionEnvironment":40,"fbjs/lib/createNodesFromMarkup":45,"fbjs/lib/emptyFunction":46,"fbjs/lib/invariant":54}],257:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/DefaultEventPluginOrder.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */

var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

module.exports = DefaultEventPluginOrder;
}).apply(this, arguments);

},{}],258:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/EnterLeaveEventPlugin.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var EventPropagators = require('./EventPropagators');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var SyntheticMouseEvent = require('./SyntheticMouseEvent');

var eventTypes = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: ['topMouseOut', 'topMouseOver']
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: ['topMouseOut', 'topMouseOver']
  }
};

var EnterLeaveEventPlugin = {
  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from;
    var to;
    if (topLevelType === 'topMouseOut') {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
    leave.type = 'mouseleave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
    enter.type = 'mouseenter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }
};

module.exports = EnterLeaveEventPlugin;
}).apply(this, arguments);

},{"./EventPropagators":262,"./ReactDOMComponentTree":276,"./SyntheticMouseEvent":333}],259:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/EventPluginHub.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var EventPluginRegistry = require('./EventPluginRegistry');
var EventPluginUtils = require('./EventPluginUtils');
var ReactErrorUtils = require('./ReactErrorUtils');

var accumulateInto = require('./accumulateInto');
var forEachAccumulated = require('./forEachAccumulated');
var invariant = require('fbjs/lib/invariant');

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function (event, simulated) {
  if (event) {
    EventPluginUtils.executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function (e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e, false);
};

var getDictionaryKey = function (inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
};

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));
    default:
      return false;
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {
  /**
   * Methods for injecting dependencies.
   */
  injection: {
    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
  },

  /**
   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {function} listener The callback to store.
   */
  putListener: function (inst, registrationName, listener) {
    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

    var key = getDictionaryKey(inst);
    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[key] = listener;

    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.didPutListener) {
      PluginModule.didPutListener(inst, registrationName, listener);
    }
  },

  /**
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function (inst, registrationName) {
    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
    // live here; needs to be moved to a better place soon
    var bankForRegistrationName = listenerBank[registrationName];
    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
      return null;
    }
    var key = getDictionaryKey(inst);
    return bankForRegistrationName && bankForRegistrationName[key];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function (inst, registrationName) {
    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.willDeleteListener) {
      PluginModule.willDeleteListener(inst, registrationName);
    }

    var bankForRegistrationName = listenerBank[registrationName];
    // TODO: This should never be null -- when is it?
    if (bankForRegistrationName) {
      var key = getDictionaryKey(inst);
      delete bankForRegistrationName[key];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {object} inst The instance, which is the source of events.
   */
  deleteAllListeners: function (inst) {
    var key = getDictionaryKey(inst);
    for (var registrationName in listenerBank) {
      if (!listenerBank.hasOwnProperty(registrationName)) {
        continue;
      }

      if (!listenerBank[registrationName][key]) {
        continue;
      }

      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.willDeleteListener) {
        PluginModule.willDeleteListener(inst, registrationName);
      }

      delete listenerBank[registrationName][key];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0; i < plugins.length; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function (events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function (simulated) {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    if (simulated) {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
    } else {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
    }
    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
    // This would be a good time to rethrow if any of the event handlers threw.
    ReactErrorUtils.rethrowCaughtError();
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function () {
    listenerBank = {};
  },

  __getListenerBank: function () {
    return listenerBank;
  }
};

module.exports = EventPluginHub;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./EventPluginRegistry":260,"./EventPluginUtils":261,"./ReactErrorUtils":296,"./accumulateInto":340,"./forEachAccumulated":348,"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54}],260:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/EventPluginRegistry.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    !pluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, pluginModule, eventName) {
  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  if (process.env.NODE_ENV !== 'production') {
    var lowerCasedName = registrationName.toLowerCase();
    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {
  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Mapping from lowercase registration names to the properly cased version,
   * used to warn in the case of missing event handlers. Available
   * only in __DEV__.
   * @type {Object}
   */
  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,
  // Trust the developer to only use possibleRegistrationNames in __DEV__

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function (injectedEventPluginOrder) {
    !!eventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
    // Clone the ordering so it cannot be dynamically mutated.
    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function (injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var pluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
        namesToPlugins[pluginName] = pluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function (event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
    }
    if (dispatchConfig.phasedRegistrationNames !== undefined) {
      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
      // that it is not undefined.
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

      for (var phase in phasedRegistrationNames) {
        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
          continue;
        }
        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
        if (pluginModule) {
          return pluginModule;
        }
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function () {
    eventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
      for (var lowerCasedName in possibleRegistrationNames) {
        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
          delete possibleRegistrationNames[lowerCasedName];
        }
      }
    }
  }
};

module.exports = EventPluginRegistry;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54}],261:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/EventPluginUtils.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactErrorUtils = require('./ReactErrorUtils');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Injected dependencies:
 */

/**
 * - `ComponentTree`: [required] Module that can convert between React instances
 *   and actual node references.
 */
var ComponentTree;
var TreeTraversal;
var injection = {
  injectComponentTree: function (Injected) {
    ComponentTree = Injected;
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
    }
  },
  injectTreeTraversal: function (Injected) {
    TreeTraversal = Injected;
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
    }
  }
};

function isEndish(topLevelType) {
  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
}

function isMoveish(topLevelType) {
  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
}
function isStartish(topLevelType) {
  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
}

var validateEventDispatches;
if (process.env.NODE_ENV !== 'production') {
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
  if (simulated) {
    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
  } else {
    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
  }
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return {?string} id of the first dispatch execution who's listener returns
 * true, or null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchInstances[i])) {
        return dispatchInstances[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchInstances)) {
      return dispatchInstances;
    }
  }
  return null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchInstances = null;
  event._dispatchListeners = null;
  return ret;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchInstance = event._dispatchInstances;
  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
  var res = dispatchListener ? dispatchListener(event) : null;
  event.currentTarget = null;
  event._dispatchListeners = null;
  event._dispatchInstances = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,

  getInstanceFromNode: function (node) {
    return ComponentTree.getInstanceFromNode(node);
  },
  getNodeFromInstance: function (node) {
    return ComponentTree.getNodeFromInstance(node);
  },
  isAncestor: function (a, b) {
    return TreeTraversal.isAncestor(a, b);
  },
  getLowestCommonAncestor: function (a, b) {
    return TreeTraversal.getLowestCommonAncestor(a, b);
  },
  getParentInstance: function (inst) {
    return TreeTraversal.getParentInstance(inst);
  },
  traverseTwoPhase: function (target, fn, arg) {
    return TreeTraversal.traverseTwoPhase(target, fn, arg);
  },
  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
  },

  injection: injection
};

module.exports = EventPluginUtils;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactErrorUtils":296,"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54,"fbjs/lib/warning":61}],262:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/EventPropagators.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var EventPluginHub = require('./EventPluginHub');
var EventPluginUtils = require('./EventPluginUtils');

var accumulateInto = require('./accumulateInto');
var forEachAccumulated = require('./forEachAccumulated');
var warning = require('fbjs/lib/warning');

var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, phase, event) {
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./EventPluginHub":259,"./EventPluginUtils":261,"./accumulateInto":340,"./forEachAccumulated":348,"_process":235,"fbjs/lib/warning":61}],263:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/FallbackCompositionState.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var getTextContentAccessor = require('./getTextContentAccessor');

/**
 * This helper class stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this._root = root;
  this._startText = this.getText();
  this._fallbackText = null;
}

_assign(FallbackCompositionState.prototype, {
  destructor: function () {
    this._root = null;
    this._startText = null;
    this._fallbackText = null;
  },

  /**
   * Get current text of input.
   *
   * @return {string}
   */
  getText: function () {
    if ('value' in this._root) {
      return this._root.value;
    }
    return this._root[getTextContentAccessor()];
  },

  /**
   * Determine the differing substring between the initially stored
   * text content and the current content.
   *
   * @return {string}
   */
  getData: function () {
    if (this._fallbackText) {
      return this._fallbackText;
    }

    var start;
    var startValue = this._startText;
    var startLength = startValue.length;
    var end;
    var endValue = this.getText();
    var endLength = endValue.length;

    for (start = 0; start < startLength; start++) {
      if (startValue[start] !== endValue[start]) {
        break;
      }
    }

    var minEnd = startLength - start;
    for (end = 1; end <= minEnd; end++) {
      if (startValue[startLength - end] !== endValue[endLength - end]) {
        break;
      }
    }

    var sliceTail = end > 1 ? 1 - end : undefined;
    this._fallbackText = endValue.slice(start, sliceTail);
    return this._fallbackText;
  }
});

PooledClass.addPoolingTo(FallbackCompositionState);

module.exports = FallbackCompositionState;
}).apply(this, arguments);

},{"./PooledClass":267,"./getTextContentAccessor":356,"object-assign":232}],264:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/HTMLDOMPropertyConfig.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');

var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var HTMLDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
  Properties: {
    /**
     * Standard Properties
     */
    accept: 0,
    acceptCharset: 0,
    accessKey: 0,
    action: 0,
    allowFullScreen: HAS_BOOLEAN_VALUE,
    allowTransparency: 0,
    alt: 0,
    // specifies target context for links with `preload` type
    as: 0,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: 0,
    // autoFocus is polyfilled/normalized by AutoFocusUtils
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    capture: HAS_BOOLEAN_VALUE,
    cellPadding: 0,
    cellSpacing: 0,
    charSet: 0,
    challenge: 0,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    cite: 0,
    classID: 0,
    className: 0,
    cols: HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: 0,
    content: 0,
    contentEditable: 0,
    contextMenu: 0,
    controls: HAS_BOOLEAN_VALUE,
    controlsList: 0,
    coords: 0,
    crossOrigin: 0,
    data: 0, // For `<object />` acts as `src`.
    dateTime: 0,
    'default': HAS_BOOLEAN_VALUE,
    defer: HAS_BOOLEAN_VALUE,
    dir: 0,
    disabled: HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: 0,
    encType: 0,
    form: 0,
    formAction: 0,
    formEncType: 0,
    formMethod: 0,
    formNoValidate: HAS_BOOLEAN_VALUE,
    formTarget: 0,
    frameBorder: 0,
    headers: 0,
    height: 0,
    hidden: HAS_BOOLEAN_VALUE,
    high: 0,
    href: 0,
    hrefLang: 0,
    htmlFor: 0,
    httpEquiv: 0,
    icon: 0,
    id: 0,
    inputMode: 0,
    integrity: 0,
    is: 0,
    keyParams: 0,
    keyType: 0,
    kind: 0,
    label: 0,
    lang: 0,
    list: 0,
    loop: HAS_BOOLEAN_VALUE,
    low: 0,
    manifest: 0,
    marginHeight: 0,
    marginWidth: 0,
    max: 0,
    maxLength: 0,
    media: 0,
    mediaGroup: 0,
    method: 0,
    min: 0,
    minLength: 0,
    // Caution; `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`.
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: 0,
    nonce: 0,
    noValidate: HAS_BOOLEAN_VALUE,
    open: HAS_BOOLEAN_VALUE,
    optimum: 0,
    pattern: 0,
    placeholder: 0,
    playsInline: HAS_BOOLEAN_VALUE,
    poster: 0,
    preload: 0,
    profile: 0,
    radioGroup: 0,
    readOnly: HAS_BOOLEAN_VALUE,
    referrerPolicy: 0,
    rel: 0,
    required: HAS_BOOLEAN_VALUE,
    reversed: HAS_BOOLEAN_VALUE,
    role: 0,
    rows: HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: HAS_NUMERIC_VALUE,
    sandbox: 0,
    scope: 0,
    scoped: HAS_BOOLEAN_VALUE,
    scrolling: 0,
    seamless: HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    shape: 0,
    size: HAS_POSITIVE_NUMERIC_VALUE,
    sizes: 0,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: 0,
    src: 0,
    srcDoc: 0,
    srcLang: 0,
    srcSet: 0,
    start: HAS_NUMERIC_VALUE,
    step: 0,
    style: 0,
    summary: 0,
    tabIndex: 0,
    target: 0,
    title: 0,
    // Setting .type throws on non-<input> tags
    type: 0,
    useMap: 0,
    value: 0,
    width: 0,
    wmode: 0,
    wrap: 0,

    /**
     * RDFa Properties
     */
    about: 0,
    datatype: 0,
    inlist: 0,
    prefix: 0,
    // property is also supported for OpenGraph in meta tags.
    property: 0,
    resource: 0,
    'typeof': 0,
    vocab: 0,

    /**
     * Non-standard Properties
     */
    // autoCapitalize and autoCorrect are supported in Mobile Safari for
    // keyboard hints.
    autoCapitalize: 0,
    autoCorrect: 0,
    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
    autoSave: 0,
    // color is for Safari mask-icon link
    color: 0,
    // itemProp, itemScope, itemType are for
    // Microdata support. See http://schema.org/docs/gs.html
    itemProp: 0,
    itemScope: HAS_BOOLEAN_VALUE,
    itemType: 0,
    // itemID and itemRef are for Microdata support as well but
    // only specified in the WHATWG spec document. See
    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
    itemID: 0,
    itemRef: 0,
    // results show looking glass icon and recent searches on input
    // search fields in WebKit/Blink
    results: 0,
    // IE-only attribute that specifies security restrictions on an iframe
    // as an alternative to the sandbox attribute on IE<10
    security: 0,
    // IE-only attribute that controls focus behavior
    unselectable: 0
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMPropertyNames: {},
  DOMMutationMethods: {
    value: function (node, value) {
      if (value == null) {
        return node.removeAttribute('value');
      }

      // Number inputs get special treatment due to some edge cases in
      // Chrome. Let everything else assign the value attribute as normal.
      // https://github.com/facebook/react/issues/7253#issuecomment-236074326
      if (node.type !== 'number' || node.hasAttribute('value') === false) {
        node.setAttribute('value', '' + value);
      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
        // Don't assign an attribute if validation reports bad
        // input. Chrome will clear the value. Additionally, don't
        // operate on inputs that have focus, otherwise Chrome might
        // strip off trailing decimal places and cause the user's
        // cursor position to jump to the beginning of the input.
        //
        // In ReactDOMInput, we have an onBlur event that will trigger
        // this function again when focus is lost.
        node.setAttribute('value', '' + value);
      }
    }
  }
};

module.exports = HTMLDOMPropertyConfig;
}).apply(this, arguments);

},{"./DOMProperty":254}],265:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/KeyEscapeUtils.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;
}).apply(this, arguments);

},{}],266:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/LinkedValueUtils.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactPropTypesSecret = require('./ReactPropTypesSecret');
var propTypesFactory = require('prop-types/factory');

var React = require('react/lib/React');
var PropTypes = propTypesFactory(React.isValidElement);

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var hasReadOnlyValue = {
  button: true,
  checkbox: true,
  image: true,
  hidden: true,
  radio: true,
  reset: true,
  submit: true
};

function _assertSingleLink(inputProps) {
  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
}
function _assertValueLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
}

function _assertCheckedLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
}

var propTypes = {
  value: function (props, propName, componentName) {
    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  checked: function (props, propName, componentName) {
    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  onChange: PropTypes.func
};

var loggedTypeFailures = {};
function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  checkPropTypes: function (tagName, props, owner) {
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
      }
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var addendum = getDeclarationErrorAddendum(owner);
        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
      }
    }
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function (inputProps) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.value;
    }
    return inputProps.value;
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function (inputProps) {
    if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.value;
    }
    return inputProps.checked;
  },

  /**
   * @param {object} inputProps Props for form component
   * @param {SyntheticEvent} event change event to handle
   */
  executeOnChange: function (inputProps, event) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.requestChange(event.target.value);
    } else if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.requestChange(event.target.checked);
    } else if (inputProps.onChange) {
      return inputProps.onChange.call(undefined, event);
    }
  }
};

module.exports = LinkedValueUtils;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactPropTypesSecret":313,"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54,"fbjs/lib/warning":61,"prop-types/factory":237,"react/lib/React":380}],267:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/PooledClass.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54}],268:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactBrowserEventEmitter.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _assign = require('object-assign');

var EventPluginRegistry = require('./EventPluginRegistry');
var ReactEventEmitterMixin = require('./ReactEventEmitterMixin');
var ViewportMetrics = require('./ViewportMetrics');

var getVendorPrefixedEventName = require('./getVendorPrefixedEventName');
var isEventSupported = require('./isEventSupported');

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactEventListener, which is injected and can therefore support pluggable
 *    event sources. This is the only work that occurs in the main thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var hasEventPageXY;
var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topAbort: 'abort',
  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
  topBlur: 'blur',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topScroll: 'scroll',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topSelectionChange: 'selectionchange',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTextInput: 'textInput',
  topTimeUpdate: 'timeupdate',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
 * example:
 *
 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
  /**
   * Injectable event backend
   */
  ReactEventListener: null,

  injection: {
    /**
     * @param {object} ReactEventListener
     */
    injectReactEventListener: function (ReactEventListener) {
      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function (enabled) {
    if (ReactBrowserEventEmitter.ReactEventListener) {
      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function () {
    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
  listenTo: function (registrationName, contentDocumentHandle) {
    var mountAt = contentDocumentHandle;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

    for (var i = 0; i < dependencies.length; i++) {
      var dependency = dependencies[i];
      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
        if (dependency === 'topWheel') {
          if (isEventSupported('wheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
          } else if (isEventSupported('mousewheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
          }
        } else if (dependency === 'topScroll') {
          if (isEventSupported('scroll', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
          } else {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
          }
        } else if (dependency === 'topFocus' || dependency === 'topBlur') {
          if (isEventSupported('focus', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
          }

          // to make sure blur and focus event listeners are only attached once
          isListening.topBlur = true;
          isListening.topFocus = true;
        } else if (topEventMapping.hasOwnProperty(dependency)) {
          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
        }

        isListening[dependency] = true;
      }
    }
  },

  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
  },

  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
  },

  /**
   * Protect against document.createEvent() returning null
   * Some popup blocker extensions appear to do this:
   * https://github.com/facebook/react/issues/6887
   */
  supportsEventPageXY: function () {
    if (!document.createEvent) {
      return false;
    }
    var ev = document.createEvent('MouseEvent');
    return ev != null && 'pageX' in ev;
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
   * pageX/pageY isn't supported (legacy browsers).
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function () {
    if (hasEventPageXY === undefined) {
      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
    }
    if (!hasEventPageXY && !isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
      isMonitoringScrollValue = true;
    }
  }
});

module.exports = ReactBrowserEventEmitter;
}).apply(this, arguments);

},{"./EventPluginRegistry":260,"./ReactEventEmitterMixin":297,"./ViewportMetrics":339,"./getVendorPrefixedEventName":357,"./isEventSupported":360,"object-assign":232}],269:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactChildReconciler.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ReactReconciler = require('./ReactReconciler');

var instantiateReactComponent = require('./instantiateReactComponent');
var KeyEscapeUtils = require('./KeyEscapeUtils');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var traverseAllChildren = require('./traverseAllChildren');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
}

function instantiateChild(childInstances, child, name, selfDebugID) {
  // We found a component instance.
  var keyUnique = childInstances[name] === undefined;
  if (process.env.NODE_ENV !== 'production') {
    if (!ReactComponentTreeHook) {
      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
    }
    if (!keyUnique) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
    }
  }
  if (child != null && keyUnique) {
    childInstances[name] = instantiateReactComponent(child, true);
  }
}

/**
 * ReactChildReconciler provides helpers for initializing or updating a set of
 * children. Its output is suitable for passing it onto ReactMultiChild which
 * does diffed reordering and insertion.
 */
var ReactChildReconciler = {
  /**
   * Generates a "mount image" for each of the supplied children. In the case
   * of `ReactDOMComponent`, a mount image is a string of markup.
   *
   * @param {?object} nestedChildNodes Nested child maps.
   * @return {?object} A set of child instances.
   * @internal
   */
  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID) // 0 in production and for roots
  {
    if (nestedChildNodes == null) {
      return null;
    }
    var childInstances = {};

    if (process.env.NODE_ENV !== 'production') {
      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
        return instantiateChild(childInsts, child, name, selfDebugID);
      }, childInstances);
    } else {
      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
    }
    return childInstances;
  },

  /**
   * Updates the rendered children and returns a new set of children.
   *
   * @param {?object} prevChildren Previously initialized set of children.
   * @param {?object} nextChildren Flat child element maps.
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @return {?object} A new set of child instances.
   * @internal
   */
  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID) // 0 in production and for roots
  {
    // We currently don't have a way to track moves here but if we use iterators
    // instead of for..in we can zip the iterators and check if an item has
    // moved.
    // TODO: If nothing has changed, return the prevChildren object so that we
    // can quickly bailout if nothing has changed.
    if (!nextChildren && !prevChildren) {
      return;
    }
    var name;
    var prevChild;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      prevChild = prevChildren && prevChildren[name];
      var prevElement = prevChild && prevChild._currentElement;
      var nextElement = nextChildren[name];
      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
        nextChildren[name] = prevChild;
      } else {
        if (prevChild) {
          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
          ReactReconciler.unmountComponent(prevChild, false);
        }
        // The child must be instantiated before it's mounted.
        var nextChildInstance = instantiateReactComponent(nextElement, true);
        nextChildren[name] = nextChildInstance;
        // Creating mount image now ensures refs are resolved in right order
        // (see https://github.com/facebook/react/pull/7101 for explanation).
        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
        mountImages.push(nextChildMountImage);
      }
    }
    // Unmount children that are no longer present.
    for (name in prevChildren) {
      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
        prevChild = prevChildren[name];
        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
        ReactReconciler.unmountComponent(prevChild, false);
      }
    }
  },

  /**
   * Unmounts all rendered children. This should be used to clean up children
   * when this component is unmounted.
   *
   * @param {?object} renderedChildren Previously initialized set of children.
   * @internal
   */
  unmountChildren: function (renderedChildren, safely) {
    for (var name in renderedChildren) {
      if (renderedChildren.hasOwnProperty(name)) {
        var renderedChild = renderedChildren[name];
        ReactReconciler.unmountComponent(renderedChild, safely);
      }
    }
  }
};

module.exports = ReactChildReconciler;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./KeyEscapeUtils":265,"./ReactReconciler":315,"./instantiateReactComponent":359,"./shouldUpdateReactComponent":367,"./traverseAllChildren":368,"_process":235,"fbjs/lib/warning":61,"react/lib/ReactComponentTreeHook":383}],270:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactComponentBrowserEnvironment.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var DOMChildrenOperations = require('./DOMChildrenOperations');
var ReactDOMIDOperations = require('./ReactDOMIDOperations');

/**
 * Abstracts away all functionality of the reconciler that requires knowledge of
 * the browser context. TODO: These callers should be refactored to avoid the
 * need for this injection.
 */
var ReactComponentBrowserEnvironment = {
  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
};

module.exports = ReactComponentBrowserEnvironment;
}).apply(this, arguments);

},{"./DOMChildrenOperations":251,"./ReactDOMIDOperations":280}],271:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactComponentEnvironment.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

var injected = false;

var ReactComponentEnvironment = {
  /**
   * Optionally injectable hook for swapping out mount images in the middle of
   * the tree.
   */
  replaceNodeWithMarkup: null,

  /**
   * Optionally injectable hook for processing a queue of child updates. Will
   * later move into MultiChildComponents.
   */
  processChildrenUpdates: null,

  injection: {
    injectEnvironment: function (environment) {
      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
      injected = true;
    }
  }
};

module.exports = ReactComponentEnvironment;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54}],272:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactCompositeComponent.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var React = require('react/lib/React');
var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactErrorUtils = require('./ReactErrorUtils');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactNodeTypes = require('./ReactNodeTypes');
var ReactReconciler = require('./ReactReconciler');

if (process.env.NODE_ENV !== 'production') {
  var checkReactTypeSpec = require('./checkReactTypeSpec');
}

var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var shallowEqual = require('fbjs/lib/shallowEqual');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var warning = require('fbjs/lib/warning');

var CompositeTypes = {
  ImpureClass: 0,
  PureClass: 1,
  StatelessFunctional: 2
};

function StatelessComponent(Component) {}
StatelessComponent.prototype.render = function () {
  var Component = ReactInstanceMap.get(this)._currentElement.type;
  var element = Component(this.props, this.context, this.updater);
  warnIfInvalidElement(Component, element);
  return element;
};

function warnIfInvalidElement(Component, element) {
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
  }
}

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

function isPureComponent(Component) {
  return !!(Component.prototype && Component.prototype.isPureReactComponent);
}

// Separated into a function to contain deoptimizations caused by try/finally.
function measureLifeCyclePerf(fn, debugID, timerType) {
  if (debugID === 0) {
    // Top-level wrappers (see ReactMount) and empty components (see
    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
    // Both are implementation details that should go away in the future.
    return fn();
  }

  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
  try {
    return fn();
  } finally {
    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
  }
}

/**
 * ------------------ The Life-Cycle of a Composite Component ------------------
 *
 * - constructor: Initialization of state. The instance is now retained.
 *   - componentWillMount
 *   - render
 *   - [children's constructors]
 *     - [children's componentWillMount and render]
 *     - [children's componentDidMount]
 *     - componentDidMount
 *
 *       Update Phases:
 *       - componentWillReceiveProps (only called if parent updated)
 *       - shouldComponentUpdate
 *         - componentWillUpdate
 *           - render
 *           - [children's constructors or receive props phases]
 *         - componentDidUpdate
 *
 *     - componentWillUnmount
 *     - [children's componentWillUnmount]
 *   - [children destroyed]
 * - (destroyed): The instance is now blank, released by React and ready for GC.
 *
 * -----------------------------------------------------------------------------
 */

/**
 * An incrementing ID assigned to each component when it is mounted. This is
 * used to enforce the order in which `ReactUpdates` updates dirty components.
 *
 * @private
 */
var nextMountID = 1;

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponent = {
  /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
  construct: function (element) {
    this._currentElement = element;
    this._rootNodeID = 0;
    this._compositeType = null;
    this._instance = null;
    this._hostParent = null;
    this._hostContainerInfo = null;

    // See ReactUpdateQueue
    this._updateBatchNumber = null;
    this._pendingElement = null;
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    this._renderedNodeType = null;
    this._renderedComponent = null;
    this._context = null;
    this._mountOrder = 0;
    this._topLevelWrapper = null;

    // See ReactUpdates and ReactUpdateQueue.
    this._pendingCallbacks = null;

    // ComponentWillUnmount shall only be called once
    this._calledComponentWillUnmount = false;

    if (process.env.NODE_ENV !== 'production') {
      this._warnedAboutRefsInRender = false;
    }
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} hostParent
   * @param {?object} hostContainerInfo
   * @param {?object} context
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var _this = this;

    this._context = context;
    this._mountOrder = nextMountID++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var publicProps = this._currentElement.props;
    var publicContext = this._processContext(context);

    var Component = this._currentElement.type;

    var updateQueue = transaction.getUpdateQueue();

    // Initialize the public class
    var doConstruct = shouldConstruct(Component);
    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
    var renderedElement;

    // Support functional components
    if (!doConstruct && (inst == null || inst.render == null)) {
      renderedElement = inst;
      warnIfInvalidElement(Component, renderedElement);
      !(inst === null || inst === false || React.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
      inst = new StatelessComponent(Component);
      this._compositeType = CompositeTypes.StatelessFunctional;
    } else {
      if (isPureComponent(Component)) {
        this._compositeType = CompositeTypes.PureClass;
      } else {
        this._compositeType = CompositeTypes.ImpureClass;
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      // This will throw later in _renderValidatedComponent, but add an early
      // warning now to help debugging
      if (inst.render == null) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
      }

      var propsMutated = inst.props !== publicProps;
      var componentName = Component.displayName || Component.name || 'Component';

      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", componentName, componentName) : void 0;
    }

    // These should be set up in the constructor, but as a convenience for
    // simpler class abstractions, we set them up after the fact.
    inst.props = publicProps;
    inst.context = publicContext;
    inst.refs = emptyObject;
    inst.updater = updateQueue;

    this._instance = inst;

    // Store a reference from the instance back to the internal representation
    ReactInstanceMap.set(inst, this);

    if (process.env.NODE_ENV !== 'production') {
      // Since plain JS classes are defined without any special initialization
      // logic, we can not catch common errors early. Therefore, we have to
      // catch them here, at initialization time, instead.
      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
    }

    var initialState = inst.state;
    if (initialState === undefined) {
      inst.state = initialState = null;
    }
    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    var markup;
    if (inst.unstable_handleError) {
      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } else {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }

    if (inst.componentDidMount) {
      if (process.env.NODE_ENV !== 'production') {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(function () {
            return inst.componentDidMount();
          }, _this._debugID, 'componentDidMount');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
      }
    }

    return markup;
  },

  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
    if (process.env.NODE_ENV !== 'production' && !doConstruct) {
      ReactCurrentOwner.current = this;
      try {
        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
    }
  },

  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
    var Component = this._currentElement.type;

    if (doConstruct) {
      if (process.env.NODE_ENV !== 'production') {
        return measureLifeCyclePerf(function () {
          return new Component(publicProps, publicContext, updateQueue);
        }, this._debugID, 'ctor');
      } else {
        return new Component(publicProps, publicContext, updateQueue);
      }
    }

    // This can still be an instance in case of factory components
    // but we'll count this as time spent rendering as the more common case.
    if (process.env.NODE_ENV !== 'production') {
      return measureLifeCyclePerf(function () {
        return Component(publicProps, publicContext, updateQueue);
      }, this._debugID, 'render');
    } else {
      return Component(publicProps, publicContext, updateQueue);
    }
  },

  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var markup;
    var checkpoint = transaction.checkpoint();
    try {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } catch (e) {
      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
      transaction.rollback(checkpoint);
      this._instance.unstable_handleError(e);
      if (this._pendingStateQueue) {
        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
      }
      checkpoint = transaction.checkpoint();

      this._renderedComponent.unmountComponent(true);
      transaction.rollback(checkpoint);

      // Try again - we've informed the component about the error, so they can render an error message this time.
      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }
    return markup;
  },

  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var inst = this._instance;

    var debugID = 0;
    if (process.env.NODE_ENV !== 'production') {
      debugID = this._debugID;
    }

    if (inst.componentWillMount) {
      if (process.env.NODE_ENV !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillMount();
        }, debugID, 'componentWillMount');
      } else {
        inst.componentWillMount();
      }
      // When mounting, calls to `setState` by `componentWillMount` will set
      // `this._pendingStateQueue` without triggering a re-render.
      if (this._pendingStateQueue) {
        inst.state = this._processPendingState(inst.props, inst.context);
      }
    }

    // If not a stateless component, we now render
    if (renderedElement === undefined) {
      renderedElement = this._renderValidatedComponent();
    }

    var nodeType = ReactNodeTypes.getType(renderedElement);
    this._renderedNodeType = nodeType;
    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
    );
    this._renderedComponent = child;

    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

    if (process.env.NODE_ENV !== 'production') {
      if (debugID !== 0) {
        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
      }
    }

    return markup;
  },

  getHostNode: function () {
    return ReactReconciler.getHostNode(this._renderedComponent);
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (safely) {
    if (!this._renderedComponent) {
      return;
    }

    var inst = this._instance;

    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
      inst._calledComponentWillUnmount = true;

      if (safely) {
        var name = this.getName() + '.componentWillUnmount()';
        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
      } else {
        if (process.env.NODE_ENV !== 'production') {
          measureLifeCyclePerf(function () {
            return inst.componentWillUnmount();
          }, this._debugID, 'componentWillUnmount');
        } else {
          inst.componentWillUnmount();
        }
      }
    }

    if (this._renderedComponent) {
      ReactReconciler.unmountComponent(this._renderedComponent, safely);
      this._renderedNodeType = null;
      this._renderedComponent = null;
      this._instance = null;
    }

    // Reset pending fields
    // Even if this component is scheduled for another update in ReactUpdates,
    // it would still be ignored because these fields are reset.
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;
    this._pendingCallbacks = null;
    this._pendingElement = null;

    // These fields do not really need to be reset since this object is no
    // longer accessible.
    this._context = null;
    this._rootNodeID = 0;
    this._topLevelWrapper = null;

    // Delete the reference from the instance to this internal representation
    // which allow the internals to be properly cleaned up even if the user
    // leaks a reference to the public instance.
    ReactInstanceMap.remove(inst);

    // Some existing components rely on inst.props even after they've been
    // destroyed (in event handlers).
    // TODO: inst.props = null;
    // TODO: inst.state = null;
    // TODO: inst.context = null;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _maskContext: function (context) {
    var Component = this._currentElement.type;
    var contextTypes = Component.contextTypes;
    if (!contextTypes) {
      return emptyObject;
    }
    var maskedContext = {};
    for (var contextName in contextTypes) {
      maskedContext[contextName] = context[contextName];
    }
    return maskedContext;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function (context) {
    var maskedContext = this._maskContext(context);
    if (process.env.NODE_ENV !== 'production') {
      var Component = this._currentElement.type;
      if (Component.contextTypes) {
        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _processChildContext: function (currentContext) {
    var Component = this._currentElement.type;
    var inst = this._instance;
    var childContext;

    if (inst.getChildContext) {
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
        try {
          childContext = inst.getChildContext();
        } finally {
          ReactInstrumentation.debugTool.onEndProcessingChildContext();
        }
      } else {
        childContext = inst.getChildContext();
      }
    }

    if (childContext) {
      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
      if (process.env.NODE_ENV !== 'production') {
        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');
      }
      for (var name in childContext) {
        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
      }
      return _assign({}, currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Assert that the context types are valid
   *
   * @param {object} typeSpecs Map of context field to a ReactPropType
   * @param {object} values Runtime values that need to be type-checked
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkContextTypes: function (typeSpecs, values, location) {
    if (process.env.NODE_ENV !== 'production') {
      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
    }
  },

  receiveComponent: function (nextElement, transaction, nextContext) {
    var prevElement = this._currentElement;
    var prevContext = this._context;

    this._pendingElement = null;

    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
  },

  /**
   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (transaction) {
    if (this._pendingElement != null) {
      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
    } else {
      this._updateBatchNumber = null;
    }
  },

  /**
   * Perform an update to a mounted component. The componentWillReceiveProps and
   * shouldComponentUpdate methods are called, then (assuming the update isn't
   * skipped) the remaining update lifecycle methods are called and the DOM
   * representation is updated.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevParentElement
   * @param {ReactElement} nextParentElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
    var inst = this._instance;
    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

    var willReceive = false;
    var nextContext;

    // Determine if the context has changed or not
    if (this._context === nextUnmaskedContext) {
      nextContext = inst.context;
    } else {
      nextContext = this._processContext(nextUnmaskedContext);
      willReceive = true;
    }

    var prevProps = prevParentElement.props;
    var nextProps = nextParentElement.props;

    // Not a simple state update but a props update
    if (prevParentElement !== nextParentElement) {
      willReceive = true;
    }

    // An update here will schedule an update but immediately set
    // _pendingStateQueue which will ensure that any state updates gets
    // immediately reconciled instead of waiting for the next batch.
    if (willReceive && inst.componentWillReceiveProps) {
      if (process.env.NODE_ENV !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillReceiveProps(nextProps, nextContext);
        }, this._debugID, 'componentWillReceiveProps');
      } else {
        inst.componentWillReceiveProps(nextProps, nextContext);
      }
    }

    var nextState = this._processPendingState(nextProps, nextContext);
    var shouldUpdate = true;

    if (!this._pendingForceUpdate) {
      if (inst.shouldComponentUpdate) {
        if (process.env.NODE_ENV !== 'production') {
          shouldUpdate = measureLifeCyclePerf(function () {
            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
          }, this._debugID, 'shouldComponentUpdate');
        } else {
          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
        }
      } else {
        if (this._compositeType === CompositeTypes.PureClass) {
          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
        }
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
    }

    this._updateBatchNumber = null;
    if (shouldUpdate) {
      this._pendingForceUpdate = false;
      // Will set `this.props`, `this.state` and `this.context`.
      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state but we shortcut the rest of the update.
      this._currentElement = nextParentElement;
      this._context = nextUnmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
    }
  },

  _processPendingState: function (props, context) {
    var inst = this._instance;
    var queue = this._pendingStateQueue;
    var replace = this._pendingReplaceState;
    this._pendingReplaceState = false;
    this._pendingStateQueue = null;

    if (!queue) {
      return inst.state;
    }

    if (replace && queue.length === 1) {
      return queue[0];
    }

    var nextState = _assign({}, replace ? queue[0] : inst.state);
    for (var i = replace ? 1 : 0; i < queue.length; i++) {
      var partial = queue[i];
      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
    }

    return nextState;
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @param {?object} unmaskedContext
   * @private
   */
  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
    var _this2 = this;

    var inst = this._instance;

    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
    var prevProps;
    var prevState;
    var prevContext;
    if (hasComponentDidUpdate) {
      prevProps = inst.props;
      prevState = inst.state;
      prevContext = inst.context;
    }

    if (inst.componentWillUpdate) {
      if (process.env.NODE_ENV !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillUpdate(nextProps, nextState, nextContext);
        }, this._debugID, 'componentWillUpdate');
      } else {
        inst.componentWillUpdate(nextProps, nextState, nextContext);
      }
    }

    this._currentElement = nextElement;
    this._context = unmaskedContext;
    inst.props = nextProps;
    inst.state = nextState;
    inst.context = nextContext;

    this._updateRenderedComponent(transaction, unmaskedContext);

    if (hasComponentDidUpdate) {
      if (process.env.NODE_ENV !== 'production') {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
      }
    }
  },

  /**
   * Call the component's `render` method and update the DOM accordingly.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  _updateRenderedComponent: function (transaction, context) {
    var prevComponentInstance = this._renderedComponent;
    var prevRenderedElement = prevComponentInstance._currentElement;
    var nextRenderedElement = this._renderValidatedComponent();

    var debugID = 0;
    if (process.env.NODE_ENV !== 'production') {
      debugID = this._debugID;
    }

    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
    } else {
      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
      ReactReconciler.unmountComponent(prevComponentInstance, false);

      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
      this._renderedNodeType = nodeType;
      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
      );
      this._renderedComponent = child;

      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

      if (process.env.NODE_ENV !== 'production') {
        if (debugID !== 0) {
          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
        }
      }

      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
    }
  },

  /**
   * Overridden in shallow rendering.
   *
   * @protected
   */
  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
  },

  /**
   * @protected
   */
  _renderValidatedComponentWithoutOwnerOrContext: function () {
    var inst = this._instance;
    var renderedElement;

    if (process.env.NODE_ENV !== 'production') {
      renderedElement = measureLifeCyclePerf(function () {
        return inst.render();
      }, this._debugID, 'render');
    } else {
      renderedElement = inst.render();
    }

    if (process.env.NODE_ENV !== 'production') {
      // We allow auto-mocks to proceed as if they're returning null.
      if (renderedElement === undefined && inst.render._isMockFunction) {
        // This is probably bad practice. Consider warning here and
        // deprecating this convenience.
        renderedElement = null;
      }
    }

    return renderedElement;
  },

  /**
   * @private
   */
  _renderValidatedComponent: function () {
    var renderedElement;
    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
      ReactCurrentOwner.current = this;
      try {
        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
    }
    !(
    // TODO: An `isValidNode` function would probably be more appropriate
    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

    return renderedElement;
  },

  /**
   * Lazily allocates the refs object and stores `component` as `ref`.
   *
   * @param {string} ref Reference name.
   * @param {component} component Component to store as `ref`.
   * @final
   * @private
   */
  attachRef: function (ref, component) {
    var inst = this.getPublicInstance();
    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
    var publicComponentInstance = component.getPublicInstance();
    if (process.env.NODE_ENV !== 'production') {
      var componentName = component && component.getName ? component.getName() : 'a component';
      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
    }
    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
    refs[ref] = publicComponentInstance;
  },

  /**
   * Detaches a reference name.
   *
   * @param {string} ref Name to dereference.
   * @final
   * @private
   */
  detachRef: function (ref) {
    var refs = this.getPublicInstance().refs;
    delete refs[ref];
  },

  /**
   * Get a text description of the component that can be used to identify it
   * in error messages.
   * @return {string} The name or null.
   * @internal
   */
  getName: function () {
    var type = this._currentElement.type;
    var constructor = this._instance && this._instance.constructor;
    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
  },

  /**
   * Get the publicly accessible representation of this component - i.e. what
   * is exposed by refs and returned by render. Can be null for stateless
   * components.
   *
   * @return {ReactComponent} the public component instance.
   * @internal
   */
  getPublicInstance: function () {
    var inst = this._instance;
    if (this._compositeType === CompositeTypes.StatelessFunctional) {
      return null;
    }
    return inst;
  },

  // Stub
  _instantiateReactComponent: null
};

module.exports = ReactCompositeComponent;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactComponentEnvironment":271,"./ReactErrorUtils":296,"./ReactInstanceMap":304,"./ReactInstrumentation":305,"./ReactNodeTypes":310,"./ReactReconciler":315,"./checkReactTypeSpec":342,"./reactProdInvariant":363,"./shouldUpdateReactComponent":367,"_process":235,"fbjs/lib/emptyObject":47,"fbjs/lib/invariant":54,"fbjs/lib/shallowEqual":60,"fbjs/lib/warning":61,"object-assign":232,"react/lib/React":380,"react/lib/ReactCurrentOwner":384}],273:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDOM.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

'use strict';

var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDefaultInjection = require('./ReactDefaultInjection');
var ReactMount = require('./ReactMount');
var ReactReconciler = require('./ReactReconciler');
var ReactUpdates = require('./ReactUpdates');
var ReactVersion = require('./ReactVersion');

var findDOMNode = require('./findDOMNode');
var getHostComponentFromComposite = require('./getHostComponentFromComposite');
var renderSubtreeIntoContainer = require('./renderSubtreeIntoContainer');
var warning = require('fbjs/lib/warning');

ReactDefaultInjection.inject();

var ReactDOM = {
  findDOMNode: findDOMNode,
  render: ReactMount.render,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  version: ReactVersion,

  /* eslint-disable camelcase */
  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
  /* eslint-enable camelcase */
};

// Inject the runtime into a devtools global hook regardless of browser.
// Allows for debugging when the hook is injected on the page.
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    ComponentTree: {
      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
      getNodeFromInstance: function (inst) {
        // inst is an internal instance (but could be a composite)
        if (inst._renderedComponent) {
          inst = getHostComponentFromComposite(inst);
        }
        if (inst) {
          return ReactDOMComponentTree.getNodeFromInstance(inst);
        } else {
          return null;
        }
      }
    },
    Mount: ReactMount,
    Reconciler: ReactReconciler
  });
}

if (process.env.NODE_ENV !== 'production') {
  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
    // First check if devtools is not installed
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
      // If we're in Chrome or Firefox, provide a download link if not installed.
      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
        // Firefox does not have the issue with devtools loaded over file://
        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
      }
    }

    var testFunc = function testFn() {};
    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, "It looks like you're using a minified copy of the development build " + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

    // If we're in IE8, check to see if we are in compatibility mode and provide
    // information on preventing compatibility mode
    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

    var expectedFeatures = [
    // shims
    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];

    for (var i = 0; i < expectedFeatures.length; i++) {
      if (!expectedFeatures[i]) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
        break;
      }
    }
  }
}

if (process.env.NODE_ENV !== 'production') {
  var ReactInstrumentation = require('./ReactInstrumentation');
  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');
  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');
  var ReactDOMInvalidARIAHook = require('./ReactDOMInvalidARIAHook');

  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
}

module.exports = ReactDOM;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactDOMComponentTree":276,"./ReactDOMInvalidARIAHook":282,"./ReactDOMNullInputValuePropHook":283,"./ReactDOMUnknownPropertyHook":290,"./ReactDefaultInjection":293,"./ReactInstrumentation":305,"./ReactMount":308,"./ReactReconciler":315,"./ReactUpdates":320,"./ReactVersion":321,"./findDOMNode":346,"./getHostComponentFromComposite":353,"./renderSubtreeIntoContainer":364,"_process":235,"fbjs/lib/ExecutionEnvironment":40,"fbjs/lib/warning":61}],274:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDOMComponent.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

/* global hasOwnProperty:true */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var AutoFocusUtils = require('./AutoFocusUtils');
var CSSPropertyOperations = require('./CSSPropertyOperations');
var DOMLazyTree = require('./DOMLazyTree');
var DOMNamespaces = require('./DOMNamespaces');
var DOMProperty = require('./DOMProperty');
var DOMPropertyOperations = require('./DOMPropertyOperations');
var EventPluginHub = require('./EventPluginHub');
var EventPluginRegistry = require('./EventPluginRegistry');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactDOMComponentFlags = require('./ReactDOMComponentFlags');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMInput = require('./ReactDOMInput');
var ReactDOMOption = require('./ReactDOMOption');
var ReactDOMSelect = require('./ReactDOMSelect');
var ReactDOMTextarea = require('./ReactDOMTextarea');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactMultiChild = require('./ReactMultiChild');
var ReactServerRenderingTransaction = require('./ReactServerRenderingTransaction');

var emptyFunction = require('fbjs/lib/emptyFunction');
var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var invariant = require('fbjs/lib/invariant');
var isEventSupported = require('./isEventSupported');
var shallowEqual = require('fbjs/lib/shallowEqual');
var inputValueTracking = require('./inputValueTracking');
var validateDOMNesting = require('./validateDOMNesting');
var warning = require('fbjs/lib/warning');

var Flags = ReactDOMComponentFlags;
var deleteListener = EventPluginHub.deleteListener;
var getNode = ReactDOMComponentTree.getNodeFromInstance;
var listenTo = ReactBrowserEventEmitter.listenTo;
var registrationNameModules = EventPluginRegistry.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = { string: true, number: true };

var STYLE = 'style';
var HTML = '__html';
var RESERVED_PROPS = {
  children: null,
  dangerouslySetInnerHTML: null,
  suppressContentEditableWarning: null
};

// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
var DOC_FRAGMENT_TYPE = 11;

function getDeclarationErrorAddendum(internalInstance) {
  if (internalInstance) {
    var owner = internalInstance._currentElement._owner || null;
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' This DOM node was rendered by `' + name + '`.';
      }
    }
  }
  return '';
}

function friendlyStringify(obj) {
  if (typeof obj === 'object') {
    if (Array.isArray(obj)) {
      return '[' + obj.map(friendlyStringify).join(', ') + ']';
    } else {
      var pairs = [];
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
        }
      }
      return '{' + pairs.join(', ') + '}';
    }
  } else if (typeof obj === 'string') {
    return JSON.stringify(obj);
  } else if (typeof obj === 'function') {
    return '[function object]';
  }
  // Differs from JSON.stringify in that undefined because undefined and that
  // inf and nan don't become null
  return String(obj);
}

var styleMutationWarning = {};

function checkAndWarnForMutatedStyle(style1, style2, component) {
  if (style1 == null || style2 == null) {
    return;
  }
  if (shallowEqual(style1, style2)) {
    return;
  }

  var componentName = component._tag;
  var owner = component._currentElement._owner;
  var ownerName;
  if (owner) {
    ownerName = owner.getName();
  }

  var hash = ownerName + '|' + componentName;

  if (styleMutationWarning.hasOwnProperty(hash)) {
    return;
  }

  styleMutationWarning[hash] = true;

  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
}

/**
 * @param {object} component
 * @param {?object} props
 */
function assertValidProps(component, props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[component._tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
  }
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
  }
  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
}

function enqueuePutListener(inst, registrationName, listener, transaction) {
  if (transaction instanceof ReactServerRenderingTransaction) {
    return;
  }
  if (process.env.NODE_ENV !== 'production') {
    // IE8 has no API for event capturing and the `onScroll` event doesn't
    // bubble.
    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), "This browser doesn't support the `onScroll` event") : void 0;
  }
  var containerInfo = inst._hostContainerInfo;
  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
  listenTo(registrationName, doc);
  transaction.getReactMountReady().enqueue(putListener, {
    inst: inst,
    registrationName: registrationName,
    listener: listener
  });
}

function putListener() {
  var listenerToPut = this;
  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
}

function inputPostMount() {
  var inst = this;
  ReactDOMInput.postMountWrapper(inst);
}

function textareaPostMount() {
  var inst = this;
  ReactDOMTextarea.postMountWrapper(inst);
}

function optionPostMount() {
  var inst = this;
  ReactDOMOption.postMountWrapper(inst);
}

var setAndValidateContentChildDev = emptyFunction;
if (process.env.NODE_ENV !== 'production') {
  setAndValidateContentChildDev = function (content) {
    var hasExistingContent = this._contentDebugID != null;
    var debugID = this._debugID;
    // This ID represents the inlined child that has no backing instance:
    var contentDebugID = -debugID;

    if (content == null) {
      if (hasExistingContent) {
        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
      }
      this._contentDebugID = null;
      return;
    }

    validateDOMNesting(null, String(content), this, this._ancestorInfo);
    this._contentDebugID = contentDebugID;
    if (hasExistingContent) {
      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
    } else {
      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
    }
  };
}

// There are so many media events, it makes sense to just
// maintain a list rather than create a `trapBubbledEvent` for each
var mediaEvents = {
  topAbort: 'abort',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTimeUpdate: 'timeupdate',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting'
};

function trackInputValue() {
  inputValueTracking.track(this);
}

function trapBubbledEventsLocal() {
  var inst = this;
  // If a component renders to null or if another component fatals and causes
  // the state of the tree to be corrupted, `node` here can be null.
  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
  var node = getNode(inst);
  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

  switch (inst._tag) {
    case 'iframe':
    case 'object':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'video':
    case 'audio':
      inst._wrapperState.listeners = [];
      // Create listener for each media event
      for (var event in mediaEvents) {
        if (mediaEvents.hasOwnProperty(event)) {
          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
        }
      }
      break;
    case 'source':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
      break;
    case 'img':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'form':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
      break;
    case 'input':
    case 'select':
    case 'textarea':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
      break;
  }
}

function postUpdateSelectWrapper() {
  ReactDOMSelect.postUpdateWrapper(this);
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true
  // NOTE: menuitem's close tag should be omitted, but that causes problems.
};

var newlineEatingTags = {
  listing: true,
  pre: true,
  textarea: true
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  menuitem: true
}, omittedCloseTags);

// We accept any tag to be rendered but since this gets injected into arbitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
var validatedTagCache = {};
var hasOwnProperty = {}.hasOwnProperty;

function validateDangerousTag(tag) {
  if (!hasOwnProperty.call(validatedTagCache, tag)) {
    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
    validatedTagCache[tag] = true;
  }
}

function isCustomComponent(tagName, props) {
  return tagName.indexOf('-') >= 0 || props.is != null;
}

var globalIdCounter = 1;

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(element) {
  var tag = element.type;
  validateDangerousTag(tag);
  this._currentElement = element;
  this._tag = tag.toLowerCase();
  this._namespaceURI = null;
  this._renderedChildren = null;
  this._previousStyle = null;
  this._previousStyleCopy = null;
  this._hostNode = null;
  this._hostParent = null;
  this._rootNodeID = 0;
  this._domID = 0;
  this._hostContainerInfo = null;
  this._wrapperState = null;
  this._topLevelWrapper = null;
  this._flags = 0;
  if (process.env.NODE_ENV !== 'production') {
    this._ancestorInfo = null;
    setAndValidateContentChildDev.call(this, null);
  }
}

ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {
  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?ReactDOMComponent} the parent component instance
   * @param {?object} info about the host container
   * @param {object} context
   * @return {string} The computed markup.
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    this._rootNodeID = globalIdCounter++;
    this._domID = hostContainerInfo._idCounter++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var props = this._currentElement.props;

    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        this._wrapperState = {
          listeners: null
        };
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'input':
        ReactDOMInput.mountWrapper(this, props, hostParent);
        props = ReactDOMInput.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trackInputValue, this);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'option':
        ReactDOMOption.mountWrapper(this, props, hostParent);
        props = ReactDOMOption.getHostProps(this, props);
        break;
      case 'select':
        ReactDOMSelect.mountWrapper(this, props, hostParent);
        props = ReactDOMSelect.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'textarea':
        ReactDOMTextarea.mountWrapper(this, props, hostParent);
        props = ReactDOMTextarea.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trackInputValue, this);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
    }

    assertValidProps(this, props);

    // We create tags in the namespace of their parent container, except HTML
    // tags get no namespace.
    var namespaceURI;
    var parentTag;
    if (hostParent != null) {
      namespaceURI = hostParent._namespaceURI;
      parentTag = hostParent._tag;
    } else if (hostContainerInfo._tag) {
      namespaceURI = hostContainerInfo._namespaceURI;
      parentTag = hostContainerInfo._tag;
    }
    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
      namespaceURI = DOMNamespaces.html;
    }
    if (namespaceURI === DOMNamespaces.html) {
      if (this._tag === 'svg') {
        namespaceURI = DOMNamespaces.svg;
      } else if (this._tag === 'math') {
        namespaceURI = DOMNamespaces.mathml;
      }
    }
    this._namespaceURI = namespaceURI;

    if (process.env.NODE_ENV !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo._tag) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(this._tag, null, this, parentInfo);
      }
      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
    }

    var mountImage;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var el;
      if (namespaceURI === DOMNamespaces.html) {
        if (this._tag === 'script') {
          // Create the script via .innerHTML so its "parser-inserted" flag is
          // set to true and it does not execute
          var div = ownerDocument.createElement('div');
          var type = this._currentElement.type;
          div.innerHTML = '<' + type + '></' + type + '>';
          el = div.removeChild(div.firstChild);
        } else if (props.is) {
          el = ownerDocument.createElement(this._currentElement.type, props.is);
        } else {
          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
          // See discussion in https://github.com/facebook/react/pull/6896
          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
          el = ownerDocument.createElement(this._currentElement.type);
        }
      } else {
        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
      }
      ReactDOMComponentTree.precacheNode(this, el);
      this._flags |= Flags.hasCachedChildNodes;
      if (!this._hostParent) {
        DOMPropertyOperations.setAttributeForRoot(el);
      }
      this._updateDOMProperties(null, props, transaction);
      var lazyTree = DOMLazyTree(el);
      this._createInitialChildren(transaction, props, context, lazyTree);
      mountImage = lazyTree;
    } else {
      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
      var tagContent = this._createContentMarkup(transaction, props, context);
      if (!tagContent && omittedCloseTags[this._tag]) {
        mountImage = tagOpen + '/>';
      } else {
        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
      }
    }

    switch (this._tag) {
      case 'input':
        transaction.getReactMountReady().enqueue(inputPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'textarea':
        transaction.getReactMountReady().enqueue(textareaPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'select':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'button':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'option':
        transaction.getReactMountReady().enqueue(optionPostMount, this);
        break;
    }

    return mountImage;
  },

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
    var ret = '<' + this._currentElement.type;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules.hasOwnProperty(propKey)) {
        if (propValue) {
          enqueuePutListener(this, propKey, propValue, transaction);
        }
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            if (process.env.NODE_ENV !== 'production') {
              // See `_updateDOMProperties`. style block
              this._previousStyle = propValue;
            }
            propValue = this._previousStyleCopy = _assign({}, props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
        }
        var markup = null;
        if (this._tag != null && isCustomComponent(this._tag, props)) {
          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
          }
        } else {
          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        }
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret;
    }

    if (!this._hostParent) {
      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
    }
    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
    return ret;
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @param {object} context
   * @return {string} Content markup.
   */
  _createContentMarkup: function (transaction, props, context) {
    var ret = '';

    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        ret = innerHTML.__html;
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        // TODO: Validate that text is allowed as a child of this node
        ret = escapeTextContentForBrowser(contentToUse);
        if (process.env.NODE_ENV !== 'production') {
          setAndValidateContentChildDev.call(this, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        ret = mountImages.join('');
      }
    }
    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
      // text/html ignores the first character in these tags if it's a newline
      // Prefer to break application/xml over text/html (for now) by adding
      // a newline specifically to get eaten by the parser. (Alternately for
      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
      // \r is normalized out by HTMLTextAreaElement#value.)
      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
      // See: Parsing of "textarea" "listing" and "pre" elements
      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
      return '\n' + ret;
    } else {
      return ret;
    }
  },

  _createInitialChildren: function (transaction, props, context, lazyTree) {
    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      // TODO: Validate that text is allowed as a child of this node
      if (contentToUse != null) {
        // Avoid setting textContent when the text is empty. In IE11 setting
        // textContent on a text area will cause the placeholder to not
        // show within the textarea until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        if (contentToUse !== '') {
          if (process.env.NODE_ENV !== 'production') {
            setAndValidateContentChildDev.call(this, contentToUse);
          }
          DOMLazyTree.queueText(lazyTree, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        for (var i = 0; i < mountImages.length; i++) {
          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
        }
      }
    }
  },

  /**
   * Receives a next element and updates the component.
   *
   * @internal
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} context
   */
  receiveComponent: function (nextElement, transaction, context) {
    var prevElement = this._currentElement;
    this._currentElement = nextElement;
    this.updateComponent(transaction, prevElement, nextElement, context);
  },

  /**
   * Updates a DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @param {ReactElement} nextElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevElement, nextElement, context) {
    var lastProps = prevElement.props;
    var nextProps = this._currentElement.props;

    switch (this._tag) {
      case 'input':
        lastProps = ReactDOMInput.getHostProps(this, lastProps);
        nextProps = ReactDOMInput.getHostProps(this, nextProps);
        break;
      case 'option':
        lastProps = ReactDOMOption.getHostProps(this, lastProps);
        nextProps = ReactDOMOption.getHostProps(this, nextProps);
        break;
      case 'select':
        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
        break;
      case 'textarea':
        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
        break;
    }

    assertValidProps(this, nextProps);
    this._updateDOMProperties(lastProps, nextProps, transaction);
    this._updateDOMChildren(lastProps, nextProps, transaction, context);

    switch (this._tag) {
      case 'input':
        // Update the wrapper around inputs *after* updating props. This has to
        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
        // raise warnings and prevent the new value from being assigned.
        ReactDOMInput.updateWrapper(this);

        // We also check that we haven't missed a value update, such as a
        // Radio group shifting the checked value to another named radio input.
        inputValueTracking.updateValueIfChanged(this);
        break;
      case 'textarea':
        ReactDOMTextarea.updateWrapper(this);
        break;
      case 'select':
        // <select> value update needs to occur after <option> children
        // reconciliation
        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
        break;
    }
  },

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {?DOMElement} node
   */
  _updateDOMProperties: function (lastProps, nextProps, transaction) {
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = this._previousStyleCopy;
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
        this._previousStyleCopy = null;
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (lastProps[propKey]) {
          // Only call deleteListener if there was a listener previously or
          // else willDeleteListener gets called when there wasn't actually a
          // listener (e.g., onClick={null})
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, lastProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          if (process.env.NODE_ENV !== 'production') {
            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
            this._previousStyle = nextProp;
          }
          nextProp = this._previousStyleCopy = _assign({}, nextProp);
        } else {
          this._previousStyleCopy = null;
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (nextProp) {
          enqueuePutListener(this, propKey, nextProp, transaction);
        } else if (lastProp) {
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, nextProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        var node = getNode(this);
        // If we're updating to null or undefined, we should remove the property
        // from the DOM node instead of inadvertently setting to a string. This
        // brings us in line with the same behavior we have on initial render.
        if (nextProp != null) {
          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
        } else {
          DOMPropertyOperations.deleteValueForProperty(node, propKey);
        }
      }
    }
    if (styleUpdates) {
      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   */
  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction, context);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
        if (process.env.NODE_ENV !== 'production') {
          setAndValidateContentChildDev.call(this, nextContent);
        }
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        this.updateMarkup('' + nextHtml);
      }
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    } else if (nextChildren != null) {
      if (process.env.NODE_ENV !== 'production') {
        setAndValidateContentChildDev.call(this, null);
      }

      this.updateChildren(nextChildren, transaction, context);
    }
  },

  getHostNode: function () {
    return getNode(this);
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function (safely) {
    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        var listeners = this._wrapperState.listeners;
        if (listeners) {
          for (var i = 0; i < listeners.length; i++) {
            listeners[i].remove();
          }
        }
        break;
      case 'input':
      case 'textarea':
        inputValueTracking.stopTracking(this);
        break;
      case 'html':
      case 'head':
      case 'body':
        /**
         * Components like <html> <head> and <body> can't be removed or added
         * easily in a cross-browser way, however it's valuable to be able to
         * take advantage of React's reconciliation for styling and <title>
         * management. So we just document it and throw in dangerous cases.
         */
        !false ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
        break;
    }

    this.unmountChildren(safely);
    ReactDOMComponentTree.uncacheNode(this);
    EventPluginHub.deleteAllListeners(this);
    this._rootNodeID = 0;
    this._domID = 0;
    this._wrapperState = null;

    if (process.env.NODE_ENV !== 'production') {
      setAndValidateContentChildDev.call(this, null);
    }
  },

  getPublicInstance: function () {
    return getNode(this);
  }
};

_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

module.exports = ReactDOMComponent;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./AutoFocusUtils":245,"./CSSPropertyOperations":248,"./DOMLazyTree":252,"./DOMNamespaces":253,"./DOMProperty":254,"./DOMPropertyOperations":255,"./EventPluginHub":259,"./EventPluginRegistry":260,"./ReactBrowserEventEmitter":268,"./ReactDOMComponentFlags":275,"./ReactDOMComponentTree":276,"./ReactDOMInput":281,"./ReactDOMOption":284,"./ReactDOMSelect":285,"./ReactDOMTextarea":288,"./ReactInstrumentation":305,"./ReactMultiChild":309,"./ReactServerRenderingTransaction":317,"./escapeTextContentForBrowser":345,"./inputValueTracking":358,"./isEventSupported":360,"./reactProdInvariant":363,"./validateDOMNesting":369,"_process":235,"fbjs/lib/emptyFunction":46,"fbjs/lib/invariant":54,"fbjs/lib/shallowEqual":60,"fbjs/lib/warning":61,"object-assign":232}],275:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDOMComponentFlags.js", module);
(function(){
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ReactDOMComponentFlags = {
  hasCachedChildNodes: 1 << 0
};

module.exports = ReactDOMComponentFlags;
}).apply(this, arguments);

},{}],276:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDOMComponentTree.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var DOMProperty = require('./DOMProperty');
var ReactDOMComponentFlags = require('./ReactDOMComponentFlags');

var invariant = require('fbjs/lib/invariant');

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var Flags = ReactDOMComponentFlags;

var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

/**
 * Check if a given node should be cached.
 */
function shouldPrecacheNode(node, nodeID) {
  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
}

/**
 * Drill down (through composites and empty components) until we get a host or
 * host text component.
 *
 * This is pretty polymorphic but unavoidable with the current structure we have
 * for `_renderedChildren`.
 */
function getRenderedHostOrTextFromComponent(component) {
  var rendered;
  while (rendered = component._renderedComponent) {
    component = rendered;
  }
  return component;
}

/**
 * Populate `_hostNode` on the rendered host/text component with the given
 * DOM node. The passed `inst` can be a composite.
 */
function precacheNode(inst, node) {
  var hostInst = getRenderedHostOrTextFromComponent(inst);
  hostInst._hostNode = node;
  node[internalInstanceKey] = hostInst;
}

function uncacheNode(inst) {
  var node = inst._hostNode;
  if (node) {
    delete node[internalInstanceKey];
    inst._hostNode = null;
  }
}

/**
 * Populate `_hostNode` on each child of `inst`, assuming that the children
 * match up with the DOM (element) children of `node`.
 *
 * We cache entire levels at once to avoid an n^2 problem where we access the
 * children of a node sequentially and have to walk from the start to our target
 * node every time.
 *
 * Since we update `_renderedChildren` and the actual DOM at (slightly)
 * different times, we could race here and see a newer `_renderedChildren` than
 * the DOM nodes we see. To avoid this, ReactMultiChild calls
 * `prepareToManageChildren` before we change `_renderedChildren`, at which
 * time the container's child nodes are always cached (until it unmounts).
 */
function precacheChildNodes(inst, node) {
  if (inst._flags & Flags.hasCachedChildNodes) {
    return;
  }
  var children = inst._renderedChildren;
  var childNode = node.firstChild;
  outer: for (var name in children) {
    if (!children.hasOwnProperty(name)) {
      continue;
    }
    var childInst = children[name];
    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
    if (childID === 0) {
      // We're currently unmounting this child in ReactMultiChild; skip it.
      continue;
    }
    // We assume the child nodes are in the same order as the child instances.
    for (; childNode !== null; childNode = childNode.nextSibling) {
      if (shouldPrecacheNode(childNode, childID)) {
        precacheNode(childInst, childNode);
        continue outer;
      }
    }
    // We reached the end of the DOM children without finding an ID match.
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
  }
  inst._flags |= Flags.hasCachedChildNodes;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  // Walk up the tree until we find an ancestor whose instance we have cached.
  var parents = [];
  while (!node[internalInstanceKey]) {
    parents.push(node);
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var closest;
  var inst;
  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
    closest = inst;
    if (parents.length) {
      precacheChildNodes(inst, node);
    }
  }

  return closest;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode(node) {
  var inst = getClosestInstanceFromNode(node);
  if (inst != null && inst._hostNode === node) {
    return inst;
  } else {
    return null;
  }
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance(inst) {
  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  if (inst._hostNode) {
    return inst._hostNode;
  }

  // Walk up the tree until we find an ancestor whose DOM node we have cached.
  var parents = [];
  while (!inst._hostNode) {
    parents.push(inst);
    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
    inst = inst._hostParent;
  }

  // Now parents contains each ancestor that does *not* have a cached native
  // node, and `inst` is the deepest ancestor that does.
  for (; parents.length; inst = parents.pop()) {
    precacheChildNodes(inst, inst._hostNode);
  }

  return inst._hostNode;
}

var ReactDOMComponentTree = {
  getClosestInstanceFromNode: getClosestInstanceFromNode,
  getInstanceFromNode: getInstanceFromNode,
  getNodeFromInstance: getNodeFromInstance,
  precacheChildNodes: precacheChildNodes,
  precacheNode: precacheNode,
  uncacheNode: uncacheNode
};

module.exports = ReactDOMComponentTree;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./DOMProperty":254,"./ReactDOMComponentFlags":275,"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54}],277:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDOMContainerInfo.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var validateDOMNesting = require('./validateDOMNesting');

var DOC_NODE_TYPE = 9;

function ReactDOMContainerInfo(topLevelWrapper, node) {
  var info = {
    _topLevelWrapper: topLevelWrapper,
    _idCounter: 1,
    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
    _node: node,
    _tag: node ? node.nodeName.toLowerCase() : null,
    _namespaceURI: node ? node.namespaceURI : null
  };
  if (process.env.NODE_ENV !== 'production') {
    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
  }
  return info;
}

module.exports = ReactDOMContainerInfo;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./validateDOMNesting":369,"_process":235}],278:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDOMEmptyComponent.js", module);
(function(){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _assign = require('object-assign');

var DOMLazyTree = require('./DOMLazyTree');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var ReactDOMEmptyComponent = function (instantiate) {
  // ReactCompositeComponent uses this:
  this._currentElement = null;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;
  this._hostContainerInfo = null;
  this._domID = 0;
};
_assign(ReactDOMEmptyComponent.prototype, {
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var domID = hostContainerInfo._idCounter++;
    this._domID = domID;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var nodeValue = ' react-empty: ' + this._domID + ' ';
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var node = ownerDocument.createComment(nodeValue);
      ReactDOMComponentTree.precacheNode(this, node);
      return DOMLazyTree(node);
    } else {
      if (transaction.renderToStaticMarkup) {
        // Normally we'd insert a comment node, but since this is a situation
        // where React won't take over (static pages), we can simply return
        // nothing.
        return '';
      }
      return '<!--' + nodeValue + '-->';
    }
  },
  receiveComponent: function () {},
  getHostNode: function () {
    return ReactDOMComponentTree.getNodeFromInstance(this);
  },
  unmountComponent: function () {
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMEmptyComponent;
}).apply(this, arguments);

},{"./DOMLazyTree":252,"./ReactDOMComponentTree":276,"object-assign":232}],279:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDOMFeatureFlags.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ReactDOMFeatureFlags = {
  useCreateElement: true,
  useFiber: false
};

module.exports = ReactDOMFeatureFlags;
}).apply(this, arguments);

},{}],280:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDOMIDOperations.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var DOMChildrenOperations = require('./DOMChildrenOperations');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

/**
 * Operations used to process updates to DOM nodes.
 */
var ReactDOMIDOperations = {
  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
    DOMChildrenOperations.processUpdates(node, updates);
  }
};

module.exports = ReactDOMIDOperations;
}).apply(this, arguments);

},{"./DOMChildrenOperations":251,"./ReactDOMComponentTree":276}],281:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDOMInput.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var DOMPropertyOperations = require('./DOMPropertyOperations');
var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnCheckedLink = false;
var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMInput.updateWrapper(this);
  }
}

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = {
  getHostProps: function (inst, props) {
    var value = LinkedValueUtils.getValue(props);
    var checked = LinkedValueUtils.getChecked(props);

    var hostProps = _assign({
      // Make sure we set .type before any other properties (setting .value
      // before .type means .value is lost in IE11 and below)
      type: undefined,
      // Make sure we set .step before .value (setting .value before .step
      // means .value is rounded on mount, based upon step precision)
      step: undefined,
      // Make sure we set .min & .max before .value (to ensure proper order
      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
      min: undefined,
      max: undefined
    }, props, {
      defaultChecked: undefined,
      defaultValue: undefined,
      value: value != null ? value : inst._wrapperState.initialValue,
      checked: checked != null ? checked : inst._wrapperState.initialChecked,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

      var owner = inst._currentElement._owner;

      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnCheckedLink = true;
      }
      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnCheckedDefaultChecked = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnValueDefaultValue = true;
      }
    }

    var defaultValue = props.defaultValue;
    inst._wrapperState = {
      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
      initialValue: props.value != null ? props.value : defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      controlled: isControlled(props)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    if (process.env.NODE_ENV !== 'production') {
      var controlled = isControlled(props);
      var owner = inst._currentElement._owner;

      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnUncontrolledToControlled = true;
      }
      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnControlledToUncontrolled = true;
      }
    }

    // TODO: Shouldn't this be getChecked(props)?
    var checked = props.checked;
    if (checked != null) {
      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
    }

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      if (value === 0 && node.value === '') {
        node.value = '0';
        // Note: IE9 reports a number inputs as 'text', so check props instead.
      } else if (props.type === 'number') {
        // Simulate `input.valueAsNumber`. IE9 does not support it
        var valueAsNumber = parseFloat(node.value, 10) || 0;

        if (
        // eslint-disable-next-line
        value != valueAsNumber ||
        // eslint-disable-next-line
        value == valueAsNumber && node.value != value) {
          // Cast `value` to a string to ensure the value is set correctly. While
          // browsers typically do this as necessary, jsdom doesn't.
          node.value = '' + value;
        }
      } else if (node.value !== '' + value) {
        // Cast `value` to a string to ensure the value is set correctly. While
        // browsers typically do this as necessary, jsdom doesn't.
        node.value = '' + value;
      }
    } else {
      if (props.value == null && props.defaultValue != null) {
        // In Chrome, assigning defaultValue to certain input types triggers input validation.
        // For number inputs, the display value loses trailing decimal points. For email inputs,
        // Chrome raises "The specified value <x> is not a valid email address".
        //
        // Here we check to see if the defaultValue has actually changed, avoiding these problems
        // when the user is inputting text
        //
        // https://github.com/facebook/react/issues/7253
        if (node.defaultValue !== '' + props.defaultValue) {
          node.defaultValue = '' + props.defaultValue;
        }
      }
      if (props.checked == null && props.defaultChecked != null) {
        node.defaultChecked = !!props.defaultChecked;
      }
    }
  },

  postMountWrapper: function (inst) {
    var props = inst._currentElement.props;

    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

    // Detach value from defaultValue. We won't do anything if we're working on
    // submit or reset inputs as those values & defaultValues are linked. They
    // are not resetable nodes so this operation doesn't matter and actually
    // removes browser-default values (eg "Submit Query") when no value is
    // provided.

    switch (props.type) {
      case 'submit':
      case 'reset':
        break;
      case 'color':
      case 'date':
      case 'datetime':
      case 'datetime-local':
      case 'month':
      case 'time':
      case 'week':
        // This fixes the no-show issue on iOS Safari and Android Chrome:
        // https://github.com/facebook/react/issues/7233
        node.value = '';
        node.value = node.defaultValue;
        break;
      default:
        node.value = node.value;
        break;
    }

    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
    // this is needed to work around a chrome bug where setting defaultChecked
    // will sometimes influence the value of checked (even after detachment).
    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
    // We need to temporarily unset name to avoid disrupting radio button groups.
    var name = node.name;
    if (name !== '') {
      node.name = '';
    }
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !node.defaultChecked;
    if (name !== '') {
      node.name = name;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;

  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  // Here we use asap to wait until all updates have propagated, which
  // is important when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  ReactUpdates.asap(forceUpdateIfMounted, this);

  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form, let's just use the global
    // `querySelectorAll` to ensure we don't miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
    }
  }

  return returnValue;
}

module.exports = ReactDOMInput;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./DOMPropertyOperations":255,"./LinkedValueUtils":266,"./ReactDOMComponentTree":276,"./ReactUpdates":320,"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54,"fbjs/lib/warning":61,"object-assign":232}],282:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDOMInvalidARIAHook.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');

var warning = require('fbjs/lib/warning');

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');

function validateProperty(tagName, name, debugID) {
  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
    return true;
  }

  if (rARIA.test(name)) {
    var lowerCasedName = name.toLowerCase();
    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (standardName == null) {
      warnedProperties[name] = true;
      return false;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== standardName) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      warnedProperties[name] = true;
      return true;
    }
  }

  return true;
}

function warnInvalidARIAProps(debugID, element) {
  var invalidProps = [];

  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      invalidProps.push(key);
    }
  }

  var unknownPropString = invalidProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (invalidProps.length === 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  } else if (invalidProps.length > 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  }
}

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }

  warnInvalidARIAProps(debugID, element);
}

var ReactDOMInvalidARIAHook = {
  onBeforeMountComponent: function (debugID, element) {
    if (process.env.NODE_ENV !== 'production') {
      handleElement(debugID, element);
    }
  },
  onBeforeUpdateComponent: function (debugID, element) {
    if (process.env.NODE_ENV !== 'production') {
      handleElement(debugID, element);
    }
  }
};

module.exports = ReactDOMInvalidARIAHook;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./DOMProperty":254,"_process":235,"fbjs/lib/warning":61,"react/lib/ReactComponentTreeHook":383}],283:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDOMNullInputValuePropHook.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');

var warning = require('fbjs/lib/warning');

var didWarnValueNull = false;

function handleElement(debugID, element) {
  if (element == null) {
    return;
  }
  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
    return;
  }
  if (element.props != null && element.props.value === null && !didWarnValueNull) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;

    didWarnValueNull = true;
  }
}

var ReactDOMNullInputValuePropHook = {
  onBeforeMountComponent: function (debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMNullInputValuePropHook;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"_process":235,"fbjs/lib/warning":61,"react/lib/ReactComponentTreeHook":383}],284:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDOMOption.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _assign = require('object-assign');

var React = require('react/lib/React');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMSelect = require('./ReactDOMSelect');

var warning = require('fbjs/lib/warning');
var didWarnInvalidOptionChildren = false;

function flattenChildren(children) {
  var content = '';

  // Flatten children and warn if they aren't strings or numbers;
  // invalid types are ignored.
  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    if (typeof child === 'string' || typeof child === 'number') {
      content += child;
    } else if (!didWarnInvalidOptionChildren) {
      didWarnInvalidOptionChildren = true;
      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
    }
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */
var ReactDOMOption = {
  mountWrapper: function (inst, props, hostParent) {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
    }

    // Look up whether this option is 'selected'
    var selectValue = null;
    if (hostParent != null) {
      var selectParent = hostParent;

      if (selectParent._tag === 'optgroup') {
        selectParent = selectParent._hostParent;
      }

      if (selectParent != null && selectParent._tag === 'select') {
        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
      }
    }

    // If the value is null (e.g., no specified value or after initial mount)
    // or missing (e.g., for <datalist>), we don't change props.selected
    var selected = null;
    if (selectValue != null) {
      var value;
      if (props.value != null) {
        value = props.value + '';
      } else {
        value = flattenChildren(props.children);
      }
      selected = false;
      if (Array.isArray(selectValue)) {
        // multiple
        for (var i = 0; i < selectValue.length; i++) {
          if ('' + selectValue[i] === value) {
            selected = true;
            break;
          }
        }
      } else {
        selected = '' + selectValue === value;
      }
    }

    inst._wrapperState = { selected: selected };
  },

  postMountWrapper: function (inst) {
    // value="" should make a value attribute (#6219)
    var props = inst._currentElement.props;
    if (props.value != null) {
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      node.setAttribute('value', props.value);
    }
  },

  getHostProps: function (inst, props) {
    var hostProps = _assign({ selected: undefined, children: undefined }, props);

    // Read state only from initial mount because <select> updates value
    // manually; we need the initial state only for server rendering
    if (inst._wrapperState.selected != null) {
      hostProps.selected = inst._wrapperState.selected;
    }

    var content = flattenChildren(props.children);

    if (content) {
      hostProps.children = content;
    }

    return hostProps;
  }
};

module.exports = ReactDOMOption;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactDOMComponentTree":276,"./ReactDOMSelect":285,"_process":235,"fbjs/lib/warning":61,"object-assign":232,"react/lib/React":380}],285:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDOMSelect.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _assign = require('object-assign');

var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnValueDefaultValue = false;

function updateOptionsIfPendingUpdateAndMounted() {
  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
    this._wrapperState.pendingUpdate = false;

    var props = this._currentElement.props;
    var value = LinkedValueUtils.getValue(props);

    if (value != null) {
      updateOptions(this, Boolean(props.multiple), value);
    }
  }
}

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function checkSelectPropTypes(inst, props) {
  var owner = inst._currentElement._owner;
  LinkedValueUtils.checkPropTypes('select', props, owner);

  if (props.valueLink !== undefined && !didWarnValueLink) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
    didWarnValueLink = true;
  }

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    var isArray = Array.isArray(props[propName]);
    if (props.multiple && !isArray) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    } else if (!props.multiple && isArray) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    }
  }
}

/**
 * @param {ReactDOMComponent} inst
 * @param {boolean} multiple
 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
 * @private
 */
function updateOptions(inst, multiple, propValue) {
  var selectedValue, i;
  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

  if (multiple) {
    selectedValue = {};
    for (i = 0; i < propValue.length; i++) {
      selectedValue['' + propValue[i]] = true;
    }
    for (i = 0; i < options.length; i++) {
      var selected = selectedValue.hasOwnProperty(options[i].value);
      if (options[i].selected !== selected) {
        options[i].selected = selected;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    selectedValue = '' + propValue;
    for (i = 0; i < options.length; i++) {
      if (options[i].value === selectedValue) {
        options[i].selected = true;
        return;
      }
    }
    if (options.length) {
      options[0].selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = {
  getHostProps: function (inst, props) {
    return _assign({}, props, {
      onChange: inst._wrapperState.onChange,
      value: undefined
    });
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      checkSelectPropTypes(inst, props);
    }

    var value = LinkedValueUtils.getValue(props);
    inst._wrapperState = {
      pendingUpdate: false,
      initialValue: value != null ? value : props.defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      wasMultiple: Boolean(props.multiple)
    };

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
      didWarnValueDefaultValue = true;
    }
  },

  getSelectValueContext: function (inst) {
    // ReactDOMOption looks at this initial value so the initial generated
    // markup has correct `selected` attributes
    return inst._wrapperState.initialValue;
  },

  postUpdateWrapper: function (inst) {
    var props = inst._currentElement.props;

    // After the initial mount, we control selected-ness manually so don't pass
    // this value down
    inst._wrapperState.initialValue = undefined;

    var wasMultiple = inst._wrapperState.wasMultiple;
    inst._wrapperState.wasMultiple = Boolean(props.multiple);

    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      inst._wrapperState.pendingUpdate = false;
      updateOptions(inst, Boolean(props.multiple), value);
    } else if (wasMultiple !== Boolean(props.multiple)) {
      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
      if (props.defaultValue != null) {
        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
      } else {
        // Revert the select back to its default unselected state.
        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
      }
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  if (this._rootNodeID) {
    this._wrapperState.pendingUpdate = true;
  }
  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
  return returnValue;
}

module.exports = ReactDOMSelect;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./LinkedValueUtils":266,"./ReactDOMComponentTree":276,"./ReactUpdates":320,"_process":235,"fbjs/lib/warning":61,"object-assign":232}],286:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDOMSelection.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var getNodeForCharacterOffset = require('./getNodeForCharacterOffset');
var getTextContentAccessor = require('./getTextContentAccessor');

/**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
  return anchorNode === focusNode && anchorOffset === focusOffset;
}

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);

  // In Firefox, range.startContainer and range.endContainer can be "anonymous
  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
  // divs do not seem to expose properties, triggering a "Permission denied
  // error" if any of its properties are accessed. The only seemingly possible
  // way to avoid erroring is to access a property that typically works for
  // non-anonymous divs and catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
  try {
    /* eslint-disable no-unused-expressions */
    currentRange.startContainer.nodeType;
    currentRange.endContainer.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  // If the node and offset values are the same, the selection is collapsed.
  // `Selection.isCollapsed` is available natively, but IE sometimes gets
  // this value wrong.
  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (offsets.end === undefined) {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
};

module.exports = ReactDOMSelection;
}).apply(this, arguments);

},{"./getNodeForCharacterOffset":355,"./getTextContentAccessor":356,"fbjs/lib/ExecutionEnvironment":40}],287:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDOMTextComponent.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var DOMChildrenOperations = require('./DOMChildrenOperations');
var DOMLazyTree = require('./DOMLazyTree');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var invariant = require('fbjs/lib/invariant');
var validateDOMNesting = require('./validateDOMNesting');

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings between comment nodes so that they
 * can undergo the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactDOMTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactDOMTextComponent = function (text) {
  // TODO: This is really a ReactText (ReactNode), not a ReactElement
  this._currentElement = text;
  this._stringText = '' + text;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;

  // Properties
  this._domID = 0;
  this._mountIndex = 0;
  this._closingComment = null;
  this._commentNodes = null;
};

_assign(ReactDOMTextComponent.prototype, {
  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    if (process.env.NODE_ENV !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo != null) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(null, this._stringText, this, parentInfo);
      }
    }

    var domID = hostContainerInfo._idCounter++;
    var openingValue = ' react-text: ' + domID + ' ';
    var closingValue = ' /react-text ';
    this._domID = domID;
    this._hostParent = hostParent;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var openingComment = ownerDocument.createComment(openingValue);
      var closingComment = ownerDocument.createComment(closingValue);
      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
      if (this._stringText) {
        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
      }
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
      ReactDOMComponentTree.precacheNode(this, openingComment);
      this._closingComment = closingComment;
      return lazyTree;
    } else {
      var escapedText = escapeTextContentForBrowser(this._stringText);

      if (transaction.renderToStaticMarkup) {
        // Normally we'd wrap this between comment nodes for the reasons stated
        // above, but since this is a situation where React won't take over
        // (static pages), we can simply return the text as it is.
        return escapedText;
      }

      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
    }
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {ReactText} nextText The next text content
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function (nextText, transaction) {
    if (nextText !== this._currentElement) {
      this._currentElement = nextText;
      var nextStringText = '' + nextText;
      if (nextStringText !== this._stringText) {
        // TODO: Save this as pending props and use performUpdateIfNecessary
        // and/or updateComponent to do the actual update for consistency with
        // other component types?
        this._stringText = nextStringText;
        var commentNodes = this.getHostNode();
        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
      }
    }
  },

  getHostNode: function () {
    var hostNode = this._commentNodes;
    if (hostNode) {
      return hostNode;
    }
    if (!this._closingComment) {
      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
      var node = openingComment.nextSibling;
      while (true) {
        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
          this._closingComment = node;
          break;
        }
        node = node.nextSibling;
      }
    }
    hostNode = [this._hostNode, this._closingComment];
    this._commentNodes = hostNode;
    return hostNode;
  },

  unmountComponent: function () {
    this._closingComment = null;
    this._commentNodes = null;
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMTextComponent;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./DOMChildrenOperations":251,"./DOMLazyTree":252,"./ReactDOMComponentTree":276,"./escapeTextContentForBrowser":345,"./reactProdInvariant":363,"./validateDOMNesting":369,"_process":235,"fbjs/lib/invariant":54,"object-assign":232}],288:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDOMTextarea.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnValDefaultVal = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMTextarea.updateWrapper(this);
  }
}

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = {
  getHostProps: function (inst, props) {
    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.  We could add a check in setTextContent
    // to only set the value if/when the value differs from the node value (which would
    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
    // The value can be a boolean or object so that's why it's forced to be a string.
    var hostProps = _assign({}, props, {
      value: undefined,
      defaultValue: undefined,
      children: '' + inst._wrapperState.initialValue,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnValDefaultVal = true;
      }
    }

    var value = LinkedValueUtils.getValue(props);
    var initialValue = value;

    // Only bother fetching default value if we're going to use it
    if (value == null) {
      var defaultValue = props.defaultValue;
      // TODO (yungsters): Remove support for children content in <textarea>.
      var children = props.children;
      if (children != null) {
        if (process.env.NODE_ENV !== 'production') {
          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
        }
        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
        if (Array.isArray(children)) {
          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
          children = children[0];
        }

        defaultValue = '' + children;
      }
      if (defaultValue == null) {
        defaultValue = '';
      }
      initialValue = defaultValue;
    }

    inst._wrapperState = {
      initialValue: '' + initialValue,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      var newValue = '' + value;

      // To avoid side effects (such as losing text selection), only set value if changed
      if (newValue !== node.value) {
        node.value = newValue;
      }
      if (props.defaultValue == null) {
        node.defaultValue = newValue;
      }
    }
    if (props.defaultValue != null) {
      node.defaultValue = props.defaultValue;
    }
  },

  postMountWrapper: function (inst) {
    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var textContent = node.textContent;

    // Only set node.value if textContent is equal to the expected
    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
    // will populate textContent as well.
    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
    if (textContent === inst._wrapperState.initialValue) {
      node.value = textContent;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);
  ReactUpdates.asap(forceUpdateIfMounted, this);
  return returnValue;
}

module.exports = ReactDOMTextarea;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./LinkedValueUtils":266,"./ReactDOMComponentTree":276,"./ReactUpdates":320,"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54,"fbjs/lib/warning":61,"object-assign":232}],289:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDOMTreeTraversal.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  var depthA = 0;
  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = instA._hostParent;
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = instB._hostParent;
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB) {
      return instA;
    }
    instA = instA._hostParent;
    instB = instB._hostParent;
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */
function isAncestor(instA, instB) {
  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

  while (instB) {
    if (instB === instA) {
      return true;
    }
    instB = instB._hostParent;
  }
  return false;
}

/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

  return inst._hostParent;
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = inst._hostParent;
  }
  var i;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (from && from !== common) {
    pathFrom.push(from);
    from = from._hostParent;
  }
  var pathTo = [];
  while (to && to !== common) {
    pathTo.push(to);
    to = to._hostParent;
  }
  var i;
  for (i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (i = pathTo.length; i-- > 0;) {
    fn(pathTo[i], 'captured', argTo);
  }
}

module.exports = {
  isAncestor: isAncestor,
  getLowestCommonAncestor: getLowestCommonAncestor,
  getParentInstance: getParentInstance,
  traverseTwoPhase: traverseTwoPhase,
  traverseEnterLeave: traverseEnterLeave
};
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54}],290:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDOMUnknownPropertyHook.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var EventPluginRegistry = require('./EventPluginRegistry');
var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');

var warning = require('fbjs/lib/warning');

if (process.env.NODE_ENV !== 'production') {
  var reactProps = {
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true,

    autoFocus: true,
    defaultValue: true,
    valueLink: true,
    defaultChecked: true,
    checkedLink: true,
    innerHTML: true,
    suppressContentEditableWarning: true,
    onFocusIn: true,
    onFocusOut: true
  };
  var warnedProperties = {};

  var validateProperty = function (tagName, name, debugID) {
    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
      return true;
    }
    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
      return true;
    }
    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
      return true;
    }
    warnedProperties[name] = true;
    var lowerCasedName = name.toLowerCase();

    // data-* attributes should be lowercase; suggest the lowercase version
    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

    if (standardName != null) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else if (registrationName != null) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else {
      // We were unable to guess which prop the user intended.
      // It is likely that the user was just blindly spreading/forwarding props
      // Components should be careful to only render valid props/attributes.
      // Warning will be invoked in warnUnknownProperties to allow grouping.
      return false;
    }
  };
}

var warnUnknownProperties = function (debugID, element) {
  var unknownProps = [];
  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (unknownProps.length === 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  } else if (unknownProps.length > 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  }
};

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }
  warnUnknownProperties(debugID, element);
}

var ReactDOMUnknownPropertyHook = {
  onBeforeMountComponent: function (debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMUnknownPropertyHook;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./DOMProperty":254,"./EventPluginRegistry":260,"_process":235,"fbjs/lib/warning":61,"react/lib/ReactComponentTreeHook":383}],291:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDebugTool.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var ReactInvalidSetStateWarningHook = require('./ReactInvalidSetStateWarningHook');
var ReactHostOperationHistoryHook = require('./ReactHostOperationHistoryHook');
var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var performanceNow = require('fbjs/lib/performanceNow');
var warning = require('fbjs/lib/warning');

var hooks = [];
var didHookThrowForEvent = {};

function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
  try {
    fn.call(context, arg1, arg2, arg3, arg4, arg5);
  } catch (e) {
    process.env.NODE_ENV !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
    didHookThrowForEvent[event] = true;
  }
}

function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    var fn = hook[event];
    if (fn) {
      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
    }
  }
}

var isProfiling = false;
var flushHistory = [];
var lifeCycleTimerStack = [];
var currentFlushNesting = 0;
var currentFlushMeasurements = [];
var currentFlushStartTime = 0;
var currentTimerDebugID = null;
var currentTimerStartTime = 0;
var currentTimerNestedFlushDuration = 0;
var currentTimerType = null;

var lifeCycleTimerHasWarned = false;

function clearHistory() {
  ReactComponentTreeHook.purgeUnmountedComponents();
  ReactHostOperationHistoryHook.clearHistory();
}

function getTreeSnapshot(registeredIDs) {
  return registeredIDs.reduce(function (tree, id) {
    var ownerID = ReactComponentTreeHook.getOwnerID(id);
    var parentID = ReactComponentTreeHook.getParentID(id);
    tree[id] = {
      displayName: ReactComponentTreeHook.getDisplayName(id),
      text: ReactComponentTreeHook.getText(id),
      updateCount: ReactComponentTreeHook.getUpdateCount(id),
      childIDs: ReactComponentTreeHook.getChildIDs(id),
      // Text nodes don't have owners but this is close enough.
      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
      parentID: parentID
    };
    return tree;
  }, {});
}

function resetMeasurements() {
  var previousStartTime = currentFlushStartTime;
  var previousMeasurements = currentFlushMeasurements;
  var previousOperations = ReactHostOperationHistoryHook.getHistory();

  if (currentFlushNesting === 0) {
    currentFlushStartTime = 0;
    currentFlushMeasurements = [];
    clearHistory();
    return;
  }

  if (previousMeasurements.length || previousOperations.length) {
    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
    flushHistory.push({
      duration: performanceNow() - previousStartTime,
      measurements: previousMeasurements || [],
      operations: previousOperations || [],
      treeSnapshot: getTreeSnapshot(registeredIDs)
    });
  }

  clearHistory();
  currentFlushStartTime = performanceNow();
  currentFlushMeasurements = [];
}

function checkDebugID(debugID) {
  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (allowRoot && debugID === 0) {
    return;
  }
  if (!debugID) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
  }
}

function beginLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType && !lifeCycleTimerHasWarned) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
    lifeCycleTimerHasWarned = true;
  }
  currentTimerStartTime = performanceNow();
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

function endLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
    lifeCycleTimerHasWarned = true;
  }
  if (isProfiling) {
    currentFlushMeasurements.push({
      timerType: timerType,
      instanceID: debugID,
      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
    });
  }
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function pauseCurrentLifeCycleTimer() {
  var currentTimer = {
    startTime: currentTimerStartTime,
    nestedFlushStartTime: performanceNow(),
    debugID: currentTimerDebugID,
    timerType: currentTimerType
  };
  lifeCycleTimerStack.push(currentTimer);
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function resumeCurrentLifeCycleTimer() {
  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
      startTime = _lifeCycleTimerStack$.startTime,
      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
      debugID = _lifeCycleTimerStack$.debugID,
      timerType = _lifeCycleTimerStack$.timerType;

  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
  currentTimerStartTime = startTime;
  currentTimerNestedFlushDuration += nestedFlushDuration;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

var lastMarkTimeStamp = 0;
var canUsePerformanceMeasure = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

function shouldMark(debugID) {
  if (!isProfiling || !canUsePerformanceMeasure) {
    return false;
  }
  var element = ReactComponentTreeHook.getElement(debugID);
  if (element == null || typeof element !== 'object') {
    return false;
  }
  var isHostElement = typeof element.type === 'string';
  if (isHostElement) {
    return false;
  }
  return true;
}

function markBegin(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  lastMarkTimeStamp = performanceNow();
  performance.mark(markName);
}

function markEnd(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';

  // Chrome has an issue of dropping markers recorded too fast:
  // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
  // To work around this, we will not report very small measurements.
  // I determined the magic number by tweaking it back and forth.
  // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
  // When the bug is fixed, we can `measure()` unconditionally if we want to.
  var timeStamp = performanceNow();
  if (timeStamp - lastMarkTimeStamp > 0.1) {
    var measurementName = displayName + ' [' + markType + ']';
    performance.measure(measurementName, markName);
  }

  performance.clearMarks(markName);
  if (measurementName) {
    performance.clearMeasures(measurementName);
  }
}

var ReactDebugTool = {
  addHook: function (hook) {
    hooks.push(hook);
  },
  removeHook: function (hook) {
    for (var i = 0; i < hooks.length; i++) {
      if (hooks[i] === hook) {
        hooks.splice(i, 1);
        i--;
      }
    }
  },
  isProfiling: function () {
    return isProfiling;
  },
  beginProfiling: function () {
    if (isProfiling) {
      return;
    }

    isProfiling = true;
    flushHistory.length = 0;
    resetMeasurements();
    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
  },
  endProfiling: function () {
    if (!isProfiling) {
      return;
    }

    isProfiling = false;
    resetMeasurements();
    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
  },
  getFlushHistory: function () {
    return flushHistory;
  },
  onBeginFlush: function () {
    currentFlushNesting++;
    resetMeasurements();
    pauseCurrentLifeCycleTimer();
    emitEvent('onBeginFlush');
  },
  onEndFlush: function () {
    resetMeasurements();
    currentFlushNesting--;
    resumeCurrentLifeCycleTimer();
    emitEvent('onEndFlush');
  },
  onBeginLifeCycleTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
    markBegin(debugID, timerType);
    beginLifeCycleTimer(debugID, timerType);
  },
  onEndLifeCycleTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    endLifeCycleTimer(debugID, timerType);
    markEnd(debugID, timerType);
    emitEvent('onEndLifeCycleTimer', debugID, timerType);
  },
  onBeginProcessingChildContext: function () {
    emitEvent('onBeginProcessingChildContext');
  },
  onEndProcessingChildContext: function () {
    emitEvent('onEndProcessingChildContext');
  },
  onHostOperation: function (operation) {
    checkDebugID(operation.instanceID);
    emitEvent('onHostOperation', operation);
  },
  onSetState: function () {
    emitEvent('onSetState');
  },
  onSetChildren: function (debugID, childDebugIDs) {
    checkDebugID(debugID);
    childDebugIDs.forEach(checkDebugID);
    emitEvent('onSetChildren', debugID, childDebugIDs);
  },
  onBeforeMountComponent: function (debugID, element, parentDebugID) {
    checkDebugID(debugID);
    checkDebugID(parentDebugID, true);
    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
    markBegin(debugID, 'mount');
  },
  onMountComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'mount');
    emitEvent('onMountComponent', debugID);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    checkDebugID(debugID);
    emitEvent('onBeforeUpdateComponent', debugID, element);
    markBegin(debugID, 'update');
  },
  onUpdateComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'update');
    emitEvent('onUpdateComponent', debugID);
  },
  onBeforeUnmountComponent: function (debugID) {
    checkDebugID(debugID);
    emitEvent('onBeforeUnmountComponent', debugID);
    markBegin(debugID, 'unmount');
  },
  onUnmountComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'unmount');
    emitEvent('onUnmountComponent', debugID);
  },
  onTestEvent: function () {
    emitEvent('onTestEvent');
  }
};

// TODO remove these when RN/www gets updated
ReactDebugTool.addDevtool = ReactDebugTool.addHook;
ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;

ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
ReactDebugTool.addHook(ReactComponentTreeHook);
var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
if (/[?&]react_perf\b/.test(url)) {
  ReactDebugTool.beginProfiling();
}

module.exports = ReactDebugTool;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactHostOperationHistoryHook":301,"./ReactInvalidSetStateWarningHook":306,"_process":235,"fbjs/lib/ExecutionEnvironment":40,"fbjs/lib/performanceNow":59,"fbjs/lib/warning":61,"react/lib/ReactComponentTreeHook":383}],292:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDefaultBatchingStrategy.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _assign = require('object-assign');

var ReactUpdates = require('./ReactUpdates');
var Transaction = require('./Transaction');

var emptyFunction = require('fbjs/lib/emptyFunction');

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function () {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  }
});

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function (callback, a, b, c, d, e) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      return callback(a, b, c, d, e);
    } else {
      return transaction.perform(callback, null, a, b, c, d, e);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;
}).apply(this, arguments);

},{"./ReactUpdates":320,"./Transaction":338,"fbjs/lib/emptyFunction":46,"object-assign":232}],293:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactDefaultInjection.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ARIADOMPropertyConfig = require('./ARIADOMPropertyConfig');
var BeforeInputEventPlugin = require('./BeforeInputEventPlugin');
var ChangeEventPlugin = require('./ChangeEventPlugin');
var DefaultEventPluginOrder = require('./DefaultEventPluginOrder');
var EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');
var HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');
var ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');
var ReactDOMComponent = require('./ReactDOMComponent');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMEmptyComponent = require('./ReactDOMEmptyComponent');
var ReactDOMTreeTraversal = require('./ReactDOMTreeTraversal');
var ReactDOMTextComponent = require('./ReactDOMTextComponent');
var ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');
var ReactEventListener = require('./ReactEventListener');
var ReactInjection = require('./ReactInjection');
var ReactReconcileTransaction = require('./ReactReconcileTransaction');
var SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');
var SelectEventPlugin = require('./SelectEventPlugin');
var SimpleEventPlugin = require('./SimpleEventPlugin');

var alreadyInjected = false;

function inject() {
  if (alreadyInjected) {
    // TODO: This is currently true because these injections are shared between
    // the client and the server package. They should be built independently
    // and not share any injection state. Then this problem will be solved.
    return;
  }
  alreadyInjected = true;

  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    SelectEventPlugin: SelectEventPlugin,
    BeforeInputEventPlugin: BeforeInputEventPlugin
  });

  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
    return new ReactDOMEmptyComponent(instantiate);
  });

  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
}

module.exports = {
  inject: inject
};
}).apply(this, arguments);

},{"./ARIADOMPropertyConfig":244,"./BeforeInputEventPlugin":246,"./ChangeEventPlugin":250,"./DefaultEventPluginOrder":257,"./EnterLeaveEventPlugin":258,"./HTMLDOMPropertyConfig":264,"./ReactComponentBrowserEnvironment":270,"./ReactDOMComponent":274,"./ReactDOMComponentTree":276,"./ReactDOMEmptyComponent":278,"./ReactDOMTextComponent":287,"./ReactDOMTreeTraversal":289,"./ReactDefaultBatchingStrategy":292,"./ReactEventListener":298,"./ReactInjection":302,"./ReactReconcileTransaction":314,"./SVGDOMPropertyConfig":322,"./SelectEventPlugin":323,"./SimpleEventPlugin":324}],294:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactElementSymbol.js", module);
(function(){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;
}).apply(this, arguments);

},{}],295:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactEmptyComponent.js", module);
(function(){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var emptyComponentFactory;

var ReactEmptyComponentInjection = {
  injectEmptyComponentFactory: function (factory) {
    emptyComponentFactory = factory;
  }
};

var ReactEmptyComponent = {
  create: function (instantiate) {
    return emptyComponentFactory(instantiate);
  }
};

ReactEmptyComponent.injection = ReactEmptyComponentInjection;

module.exports = ReactEmptyComponent;
}).apply(this, arguments);

},{}],296:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactErrorUtils.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var caughtError = null;

/**
 * Call a function while guarding against errors that happens within it.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} a First argument
 * @param {*} b Second argument
 */
function invokeGuardedCallback(name, func, a) {
  try {
    func(a);
  } catch (x) {
    if (caughtError === null) {
      caughtError = x;
    }
  }
}

var ReactErrorUtils = {
  invokeGuardedCallback: invokeGuardedCallback,

  /**
   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
   * handler are sure to be rethrown by rethrowCaughtError.
   */
  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function () {
    if (caughtError) {
      var error = caughtError;
      caughtError = null;
      throw error;
    }
  }
};

if (process.env.NODE_ENV !== 'production') {
  /**
   * To help development we can get better devtools integration by simulating a
   * real browser event.
   */
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');
    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
      var boundFunc = function () {
        func(a);
      };
      var evtType = 'react-' + name;
      fakeNode.addEventListener(evtType, boundFunc, false);
      var evt = document.createEvent('Event');
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);
      fakeNode.removeEventListener(evtType, boundFunc, false);
    };
  }
}

module.exports = ReactErrorUtils;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"_process":235}],297:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactEventEmitterMixin.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var EventPluginHub = require('./EventPluginHub');

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue(false);
}

var ReactEventEmitterMixin = {
  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   */
  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;
}).apply(this, arguments);

},{"./EventPluginHub":259}],298:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactEventListener.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _assign = require('object-assign');

var EventListener = require('fbjs/lib/EventListener');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var PooledClass = require('./PooledClass');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var getEventTarget = require('./getEventTarget');
var getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findParent(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst._hostParent) {
    inst = inst._hostParent;
  }
  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
  var container = rootNode.parentNode;
  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
  this.topLevelType = topLevelType;
  this.nativeEvent = nativeEvent;
  this.ancestors = [];
}
_assign(TopLevelCallbackBookKeeping.prototype, {
  destructor: function () {
    this.topLevelType = null;
    this.nativeEvent = null;
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

function handleTopLevelImpl(bookKeeping) {
  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    bookKeeping.ancestors.push(ancestor);
    ancestor = ancestor && findParent(ancestor);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

function scrollValueMonitor(cb) {
  var scrollPosition = getUnboundedScrollPosition(window);
  cb(scrollPosition);
}

var ReactEventListener = {
  _enabled: true,
  _handleTopLevel: null,

  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

  setHandleTopLevel: function (handleTopLevel) {
    ReactEventListener._handleTopLevel = handleTopLevel;
  },

  setEnabled: function (enabled) {
    ReactEventListener._enabled = !!enabled;
  },

  isEnabled: function () {
    return ReactEventListener._enabled;
  },

  /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  monitorScrollValue: function (refresh) {
    var callback = scrollValueMonitor.bind(null, refresh);
    EventListener.listen(window, 'scroll', callback);
  },

  dispatchEvent: function (topLevelType, nativeEvent) {
    if (!ReactEventListener._enabled) {
      return;
    }

    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
    try {
      // Event queue being processed in the same cycle allows
      // `preventDefault`.
      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
    } finally {
      TopLevelCallbackBookKeeping.release(bookKeeping);
    }
  }
};

module.exports = ReactEventListener;
}).apply(this, arguments);

},{"./PooledClass":267,"./ReactDOMComponentTree":276,"./ReactUpdates":320,"./getEventTarget":352,"fbjs/lib/EventListener":39,"fbjs/lib/ExecutionEnvironment":40,"fbjs/lib/getUnboundedScrollPosition":51,"object-assign":232}],299:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactFeatureFlags.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var ReactFeatureFlags = {
  // When true, call console.time() before and .timeEnd() after each top-level
  // render (both initial renders and updates). Useful when looking at prod-mode
  // timeline profiles in Chrome, for example.
  logTopLevelRenders: false
};

module.exports = ReactFeatureFlags;
}).apply(this, arguments);

},{}],300:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactHostComponent.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

var genericComponentClass = null;
var textComponentClass = null;

var ReactHostComponentInjection = {
  // This accepts a class that receives the tag string. This is a catch all
  // that can render any kind of tag.
  injectGenericComponentClass: function (componentClass) {
    genericComponentClass = componentClass;
  },
  // This accepts a text component class that takes the text string to be
  // rendered as props.
  injectTextComponentClass: function (componentClass) {
    textComponentClass = componentClass;
  }
};

/**
 * Get a host internal component class for a specific tag.
 *
 * @param {ReactElement} element The element to create.
 * @return {function} The internal class constructor function.
 */
function createInternalComponent(element) {
  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
  return new genericComponentClass(element);
}

/**
 * @param {ReactText} text
 * @return {ReactComponent}
 */
function createInstanceForText(text) {
  return new textComponentClass(text);
}

/**
 * @param {ReactComponent} component
 * @return {boolean}
 */
function isTextComponent(component) {
  return component instanceof textComponentClass;
}

var ReactHostComponent = {
  createInternalComponent: createInternalComponent,
  createInstanceForText: createInstanceForText,
  isTextComponent: isTextComponent,
  injection: ReactHostComponentInjection
};

module.exports = ReactHostComponent;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54}],301:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactHostOperationHistoryHook.js", module);
(function(){
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var history = [];

var ReactHostOperationHistoryHook = {
  onHostOperation: function (operation) {
    history.push(operation);
  },
  clearHistory: function () {
    if (ReactHostOperationHistoryHook._preventClearing) {
      // Should only be used for tests.
      return;
    }

    history = [];
  },
  getHistory: function () {
    return history;
  }
};

module.exports = ReactHostOperationHistoryHook;
}).apply(this, arguments);

},{}],302:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactInjection.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var EventPluginHub = require('./EventPluginHub');
var EventPluginUtils = require('./EventPluginUtils');
var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactEmptyComponent = require('./ReactEmptyComponent');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactHostComponent = require('./ReactHostComponent');
var ReactUpdates = require('./ReactUpdates');

var ReactInjection = {
  Component: ReactComponentEnvironment.injection,
  DOMProperty: DOMProperty.injection,
  EmptyComponent: ReactEmptyComponent.injection,
  EventPluginHub: EventPluginHub.injection,
  EventPluginUtils: EventPluginUtils.injection,
  EventEmitter: ReactBrowserEventEmitter.injection,
  HostComponent: ReactHostComponent.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;
}).apply(this, arguments);

},{"./DOMProperty":254,"./EventPluginHub":259,"./EventPluginUtils":261,"./ReactBrowserEventEmitter":268,"./ReactComponentEnvironment":271,"./ReactEmptyComponent":295,"./ReactHostComponent":300,"./ReactUpdates":320}],303:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactInputSelection.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ReactDOMSelection = require('./ReactDOMSelection');

var containsNode = require('fbjs/lib/containsNode');
var focusNode = require('fbjs/lib/focusNode');
var getActiveElement = require('fbjs/lib/getActiveElement');

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {
  hasSelectionCapabilities: function (elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
  },

  getSelectionInformation: function () {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function (priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function (input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || { start: 0, end: 0 };
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function (input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (end === undefined) {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;
}).apply(this, arguments);

},{"./ReactDOMSelection":286,"fbjs/lib/containsNode":43,"fbjs/lib/focusNode":48,"fbjs/lib/getActiveElement":49}],304:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactInstanceMap.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 */

// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

var ReactInstanceMap = {
  /**
   * This API should be called `delete` but we'd have to make sure to always
   * transform these to strings for IE support. When this transform is fully
   * supported we can rename it.
   */
  remove: function (key) {
    key._reactInternalInstance = undefined;
  },

  get: function (key) {
    return key._reactInternalInstance;
  },

  has: function (key) {
    return key._reactInternalInstance !== undefined;
  },

  set: function (key, value) {
    key._reactInternalInstance = value;
  }
};

module.exports = ReactInstanceMap;
}).apply(this, arguments);

},{}],305:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactInstrumentation.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

// Trust the developer to only use ReactInstrumentation with a __DEV__ check

var debugTool = null;

if (process.env.NODE_ENV !== 'production') {
  var ReactDebugTool = require('./ReactDebugTool');
  debugTool = ReactDebugTool;
}

module.exports = { debugTool: debugTool };
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactDebugTool":291,"_process":235}],306:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactInvalidSetStateWarningHook.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var warning = require('fbjs/lib/warning');

if (process.env.NODE_ENV !== 'production') {
  var processingChildContext = false;

  var warnInvalidSetState = function () {
    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
  };
}

var ReactInvalidSetStateWarningHook = {
  onBeginProcessingChildContext: function () {
    processingChildContext = true;
  },
  onEndProcessingChildContext: function () {
    processingChildContext = false;
  },
  onSetState: function () {
    warnInvalidSetState();
  }
};

module.exports = ReactInvalidSetStateWarningHook;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"_process":235,"fbjs/lib/warning":61}],307:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactMarkupChecksum.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var adler32 = require('./adler32');

var TAG_END = /\/?>/;
var COMMENT_START = /^<\!\-\-/;

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function (markup) {
    var checksum = adler32(markup);

    // Add checksum (handle both parent tags, comments and self-closing tags)
    if (COMMENT_START.test(markup)) {
      return markup;
    } else {
      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
    }
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function (markup, element) {
    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;
}).apply(this, arguments);

},{"./adler32":341}],308:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactMount.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var DOMLazyTree = require('./DOMLazyTree');
var DOMProperty = require('./DOMProperty');
var React = require('react/lib/React');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMContainerInfo = require('./ReactDOMContainerInfo');
var ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');
var ReactFeatureFlags = require('./ReactFeatureFlags');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactMarkupChecksum = require('./ReactMarkupChecksum');
var ReactReconciler = require('./ReactReconciler');
var ReactUpdateQueue = require('./ReactUpdateQueue');
var ReactUpdates = require('./ReactUpdates');

var emptyObject = require('fbjs/lib/emptyObject');
var instantiateReactComponent = require('./instantiateReactComponent');
var invariant = require('fbjs/lib/invariant');
var setInnerHTML = require('./setInnerHTML');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var warning = require('fbjs/lib/warning');

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

var instancesByReactRootID = {};

/**
 * Finds the index of the first character
 * that's not common between the two given strings.
 *
 * @return {number} the index of the character where the strings diverge
 */
function firstDifferenceIndex(string1, string2) {
  var minLen = Math.min(string1.length, string2.length);
  for (var i = 0; i < minLen; i++) {
    if (string1.charAt(i) !== string2.charAt(i)) {
      return i;
    }
  }
  return string1.length === string2.length ? -1 : minLen;
}

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 * a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Mounts this component and inserts it into the DOM.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {ReactReconcileTransaction} transaction
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
  var markerName;
  if (ReactFeatureFlags.logTopLevelRenders) {
    var wrappedElement = wrapperInstance._currentElement.props.child;
    var type = wrappedElement.type;
    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
    console.time(markerName);
  }

  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
  );

  if (markerName) {
    console.timeEnd(markerName);
  }

  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
}

/**
 * Batched mount.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */
  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

/**
 * Unmounts a component and removes it from the DOM.
 *
 * @param {ReactComponent} instance React component instance.
 * @param {DOMElement} container DOM element to unmount from.
 * @final
 * @internal
 * @see {ReactMount.unmountComponentAtNode}
 */
function unmountComponentFromNode(instance, container, safely) {
  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onBeginFlush();
  }
  ReactReconciler.unmountComponent(instance, safely);
  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onEndFlush();
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    container = container.documentElement;
  }

  // http://jsperf.com/emptying-a-node
  while (container.lastChild) {
    container.removeChild(container.lastChild);
  }
}

/**
 * True if the supplied DOM node has a direct React-rendered child that is
 * not a React root element. Useful for warning in `render`,
 * `unmountComponentAtNode`, etc.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM element contains a direct child that was
 * rendered by React but is not a root element.
 * @internal
 */
function hasNonRootReactChild(container) {
  var rootEl = getReactRootElementInContainer(container);
  if (rootEl) {
    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
    return !!(inst && inst._hostParent);
  }
}

/**
 * True if the supplied DOM node is a React DOM element and
 * it has been rendered by another copy of React.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM has been rendered by another copy of React
 * @internal
 */
function nodeIsRenderedByOtherInstance(container) {
  var rootEl = getReactRootElementInContainer(container);
  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
}

/**
 * True if the supplied DOM node is a valid node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid DOM node.
 * @internal
 */
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
}

/**
 * True if the supplied DOM node is a valid React node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid React DOM node.
 * @internal
 */
function isReactNode(node) {
  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
}

function getHostRootInstanceInContainer(container) {
  var rootEl = getReactRootElementInContainer(container);
  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
}

function getTopLevelWrapperInContainer(container) {
  var root = getHostRootInstanceInContainer(container);
  return root ? root._hostContainerInfo._topLevelWrapper : null;
}

/**
 * Temporary (?) hack so that we can store all top-level pending updates on
 * composites instead of having to worry about different types of components
 * here.
 */
var topLevelRootCounter = 1;
var TopLevelWrapper = function () {
  this.rootID = topLevelRootCounter++;
};
TopLevelWrapper.prototype.isReactComponent = {};
if (process.env.NODE_ENV !== 'production') {
  TopLevelWrapper.displayName = 'TopLevelWrapper';
}
TopLevelWrapper.prototype.render = function () {
  return this.props.child;
};
TopLevelWrapper.isReactTopLevelWrapper = true;

/**
 * Mounting is the process of initializing a React component by creating its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {
  TopLevelWrapper: TopLevelWrapper,

  /**
   * Used by devtools. The keys are not important.
   */
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function (container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactElement} nextElement component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
    ReactMount.scrollMonitor(container, function () {
      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
      if (callback) {
        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
      }
    });

    return prevComponent;
  },

  /**
   * Render a new component into the DOM. Hooked by hooks!
   *
   * @param {ReactElement} nextElement element to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case.
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
    var componentInstance = instantiateReactComponent(nextElement, false);

    // The initial render is synchronous but any updates that happen during
    // rendering, in componentWillMount or componentDidMount, will be batched
    // according to the current batching strategy.

    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

    var wrapperID = componentInstance._instance.rootID;
    instancesByReactRootID[wrapperID] = componentInstance;

    return componentInstance;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
  },

  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
    !React.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : // Check if it quacks like an element
    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

    var nextWrappedElement = React.createElement(TopLevelWrapper, {
      child: nextElement
    });

    var nextContext;
    if (parentComponent) {
      var parentInst = ReactInstanceMap.get(parentComponent);
      nextContext = parentInst._processChildContext(parentInst._context);
    } else {
      nextContext = emptyObject;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);

    if (prevComponent) {
      var prevWrappedElement = prevComponent._currentElement;
      var prevElement = prevWrappedElement.props.child;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        var publicInst = prevComponent._renderedComponent.getPublicInstance();
        var updatedCallback = callback && function () {
          callback.call(publicInst);
        };
        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
        return publicInst;
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
    var containerHasNonRootReactChild = hasNonRootReactChild(container);

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
        var rootElementSibling = reactRootElement;
        while (rootElementSibling) {
          if (internalGetID(rootElementSibling)) {
            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
            break;
          }
          rootElementSibling = rootElementSibling.nextSibling;
        }
      }
    }

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
    if (callback) {
      callback.call(component);
    }
    return component;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  render: function (nextElement, container, callback) {
    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function (container) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (Strictly speaking, unmounting won't cause a
    // render but we still don't expect to be in a render call here.)
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);
    if (!prevComponent) {
      // Check if the node being unmounted was rendered by React, but isn't a
      // root node.
      var containerHasNonRootReactChild = hasNonRootReactChild(container);

      // Check if the container itself is a React root node.
      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
    delete instancesByReactRootID[prevComponent._instance.rootID];
    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
    return true;
  },

  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

    if (shouldReuseMarkup) {
      var rootElement = getReactRootElementInContainer(container);
      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
        ReactDOMComponentTree.precacheNode(instance, rootElement);
        return;
      } else {
        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

        var rootMarkup = rootElement.outerHTML;
        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

        var normalizedMarkup = markup;
        if (process.env.NODE_ENV !== 'production') {
          // because rootMarkup is retrieved from the DOM, various normalizations
          // will have occurred which will not be present in `markup`. Here,
          // insert markup into a <div> or <iframe> depending on the container
          // type to perform the same normalizations before comparing.
          var normalizer;
          if (container.nodeType === ELEMENT_NODE_TYPE) {
            normalizer = document.createElement('div');
            normalizer.innerHTML = markup;
            normalizedMarkup = normalizer.innerHTML;
          } else {
            normalizer = document.createElement('iframe');
            document.body.appendChild(normalizer);
            normalizer.contentDocument.write(markup);
            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
            document.body.removeChild(normalizer);
          }
        }

        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

        if (process.env.NODE_ENV !== 'production') {
          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
        }
      }
    }

    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

    if (transaction.useCreateElement) {
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
      DOMLazyTree.insertTreeBefore(container, markup, null);
    } else {
      setInnerHTML(container, markup);
      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
    }

    if (process.env.NODE_ENV !== 'production') {
      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
      if (hostNode._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: hostNode._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  }
};

module.exports = ReactMount;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./DOMLazyTree":252,"./DOMProperty":254,"./ReactBrowserEventEmitter":268,"./ReactDOMComponentTree":276,"./ReactDOMContainerInfo":277,"./ReactDOMFeatureFlags":279,"./ReactFeatureFlags":299,"./ReactInstanceMap":304,"./ReactInstrumentation":305,"./ReactMarkupChecksum":307,"./ReactReconciler":315,"./ReactUpdateQueue":319,"./ReactUpdates":320,"./instantiateReactComponent":359,"./reactProdInvariant":363,"./setInnerHTML":365,"./shouldUpdateReactComponent":367,"_process":235,"fbjs/lib/emptyObject":47,"fbjs/lib/invariant":54,"fbjs/lib/warning":61,"react/lib/React":380,"react/lib/ReactCurrentOwner":384}],309:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactMultiChild.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactReconciler = require('./ReactReconciler');
var ReactChildReconciler = require('./ReactChildReconciler');

var emptyFunction = require('fbjs/lib/emptyFunction');
var flattenChildren = require('./flattenChildren');
var invariant = require('fbjs/lib/invariant');

/**
 * Make an update for markup to be rendered and inserted at a supplied index.
 *
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function makeInsertMarkup(markup, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'INSERT_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for moving an existing element to another index.
 *
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function makeMove(child, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'MOVE_EXISTING',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: ReactReconciler.getHostNode(child),
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for removing an element at an index.
 *
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function makeRemove(child, node) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'REMOVE_NODE',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: node,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the markup of a node.
 *
 * @param {string} markup Markup that renders into an element.
 * @private
 */
function makeSetMarkup(markup) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'SET_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the text content.
 *
 * @param {string} textContent Text content to set.
 * @private
 */
function makeTextContent(textContent) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'TEXT_CONTENT',
    content: textContent,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Push an update, if any, onto the queue. Creates a new queue if none is
 * passed and always returns the queue. Mutative.
 */
function enqueue(queue, update) {
  if (update) {
    queue = queue || [];
    queue.push(update);
  }
  return queue;
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue(inst, updateQueue) {
  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
}

var setChildrenForInstrumentation = emptyFunction;
if (process.env.NODE_ENV !== 'production') {
  var getDebugID = function (inst) {
    if (!inst._debugID) {
      // Check for ART-like instances. TODO: This is silly/gross.
      var internal;
      if (internal = ReactInstanceMap.get(inst)) {
        inst = internal;
      }
    }
    return inst._debugID;
  };
  setChildrenForInstrumentation = function (children) {
    var debugID = getDebugID(this);
    // TODO: React Native empty components are also multichild.
    // This means they still get into this method but don't have _debugID.
    if (debugID !== 0) {
      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
        return children[key]._debugID;
      }) : []);
    }
  };
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {
  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {
    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
      if (process.env.NODE_ENV !== 'production') {
        var selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
        }
      }
      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
    },

    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
      var nextChildren;
      var selfDebugID = 0;
      if (process.env.NODE_ENV !== 'production') {
        selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
          return nextChildren;
        }
      }
      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
      return nextChildren;
    },

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function (nestedChildren, transaction, context) {
      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
      this._renderedChildren = children;

      var mountImages = [];
      var index = 0;
      for (var name in children) {
        if (children.hasOwnProperty(name)) {
          var child = children[name];
          var selfDebugID = 0;
          if (process.env.NODE_ENV !== 'production') {
            selfDebugID = getDebugID(this);
          }
          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
          child._mountIndex = index++;
          mountImages.push(mountImage);
        }
      }

      if (process.env.NODE_ENV !== 'production') {
        setChildrenForInstrumentation.call(this, children);
      }

      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function (nextContent) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      // Set new text content.
      var updates = [makeTextContent(nextContent)];
      processQueue(this, updates);
    },

    /**
     * Replaces any rendered children with a markup string.
     *
     * @param {string} nextMarkup String of markup.
     * @internal
     */
    updateMarkup: function (nextMarkup) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      var updates = [makeSetMarkup(nextMarkup)];
      processQueue(this, updates);
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function (nextNestedChildrenElements, transaction, context) {
      // Hook used by React ART
      this._updateChildren(nextNestedChildrenElements, transaction, context);
    },

    /**
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
      var prevChildren = this._renderedChildren;
      var removedNodes = {};
      var mountImages = [];
      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
      if (!nextChildren && !prevChildren) {
        return;
      }
      var updates = null;
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var nextIndex = 0;
      var lastIndex = 0;
      // `nextMountIndex` will increment for each newly mounted child.
      var nextMountIndex = 0;
      var lastPlacedNode = null;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var nextChild = nextChildren[name];
        if (prevChild === nextChild) {
          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            // The `removedNodes` loop below will actually remove the child.
          }
          // The child must be instantiated before it's mounted.
          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
          nextMountIndex++;
        }
        nextIndex++;
        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
      }
      // Remove children that are no longer present.
      for (name in removedNodes) {
        if (removedNodes.hasOwnProperty(name)) {
          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
        }
      }
      if (updates) {
        processQueue(this, updates);
      }
      this._renderedChildren = nextChildren;

      if (process.env.NODE_ENV !== 'production') {
        setChildrenForInstrumentation.call(this, nextChildren);
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted. It does not actually perform any
     * backend operations.
     *
     * @internal
     */
    unmountChildren: function (safely) {
      var renderedChildren = this._renderedChildren;
      ReactChildReconciler.unmountChildren(renderedChildren, safely);
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function (child, afterNode, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        return makeMove(child, afterNode, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function (child, afterNode, mountImage) {
      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function (child, node) {
      return makeRemove(child, node);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
      child._mountIndex = index;
      return this.createChild(child, afterNode, mountImage);
    },

    /**
     * Unmounts a rendered child.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @private
     */
    _unmountChild: function (child, node) {
      var update = this.removeChild(child, node);
      child._mountIndex = null;
      return update;
    }
  }
};

module.exports = ReactMultiChild;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactChildReconciler":269,"./ReactComponentEnvironment":271,"./ReactInstanceMap":304,"./ReactInstrumentation":305,"./ReactReconciler":315,"./flattenChildren":347,"./reactProdInvariant":363,"_process":235,"fbjs/lib/emptyFunction":46,"fbjs/lib/invariant":54,"react/lib/ReactCurrentOwner":384}],310:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactNodeTypes.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var React = require('react/lib/React');

var invariant = require('fbjs/lib/invariant');

var ReactNodeTypes = {
  HOST: 0,
  COMPOSITE: 1,
  EMPTY: 2,

  getType: function (node) {
    if (node === null || node === false) {
      return ReactNodeTypes.EMPTY;
    } else if (React.isValidElement(node)) {
      if (typeof node.type === 'function') {
        return ReactNodeTypes.COMPOSITE;
      } else {
        return ReactNodeTypes.HOST;
      }
    }
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
  }
};

module.exports = ReactNodeTypes;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54,"react/lib/React":380}],311:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactOwner.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * @param {?object} object
 * @return {boolean} True if `object` is a valid owner.
 * @final
 */
function isValidOwner(object) {
  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
}

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {
  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function (component, ref, owner) {
    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function (component, ref, owner) {
    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
    var ownerPublicInstance = owner.getPublicInstance();
    // Check that `component`'s owner is still alive and that `component` is still the current ref
    // because we do not want to detach the ref if another component stole it.
    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
      owner.detachRef(ref);
    }
  }
};

module.exports = ReactOwner;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54}],312:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactPropTypeLocationNames.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var ReactPropTypeLocationNames = {};

if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"_process":235}],313:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactPropTypesSecret.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
}).apply(this, arguments);

},{}],314:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactReconcileTransaction.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _assign = require('object-assign');

var CallbackQueue = require('./CallbackQueue');
var PooledClass = require('./PooledClass');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactInputSelection = require('./ReactInputSelection');
var ReactInstrumentation = require('./ReactInstrumentation');
var Transaction = require('./Transaction');
var ReactUpdateQueue = require('./ReactUpdateQueue');

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
  initialize: function () {
    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
    ReactBrowserEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
   *   restores the previous value.
   */
  close: function (previouslyEnabled) {
    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a queue for collecting `componentDidMount` and
 * `componentDidUpdate` callbacks during the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function () {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function () {
    this.reactMountReady.notifyAll();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

if (process.env.NODE_ENV !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction(useCreateElement) {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactDOMTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.useCreateElement = useCreateElement;
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap procedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return this.reactMountReady;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return ReactUpdateQueue;
  },

  /**
   * Save current transaction state -- if the return value from this method is
   * passed to `rollback`, the transaction will be reset to that state.
   */
  checkpoint: function () {
    // reactMountReady is the our only stateful wrapper
    return this.reactMountReady.checkpoint();
  },

  rollback: function (checkpoint) {
    this.reactMountReady.rollback(checkpoint);
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;
  }
};

_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./CallbackQueue":249,"./PooledClass":267,"./ReactBrowserEventEmitter":268,"./ReactInputSelection":303,"./ReactInstrumentation":305,"./ReactUpdateQueue":319,"./Transaction":338,"_process":235,"object-assign":232}],315:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactReconciler.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ReactRef = require('./ReactRef');
var ReactInstrumentation = require('./ReactInstrumentation');

var warning = require('fbjs/lib/warning');

/**
 * Helper to call ReactRef.attachRefs with this composite component, split out
 * to avoid allocations in the transaction mount-ready queue.
 */
function attachRefs() {
  ReactRef.attachRefs(this, this._currentElement);
}

var ReactReconciler = {
  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} the containing host component instance
   * @param {?object} info about the host container
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID) // 0 in production and for roots
  {
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
      }
    }
    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
      }
    }
    return markup;
  },

  /**
   * Returns a value that can be passed to
   * ReactComponentEnvironment.replaceNodeWithMarkup.
   */
  getHostNode: function (internalInstance) {
    return internalInstance.getHostNode();
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (internalInstance, safely) {
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
      }
    }
    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
    internalInstance.unmountComponent(safely);
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Update a component using a new element.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @internal
   */
  receiveComponent: function (internalInstance, nextElement, transaction, context) {
    var prevElement = internalInstance._currentElement;

    if (nextElement === prevElement && context === internalInstance._context) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for an element created outside a composite to be
      // deeply mutated and reused.

      // TODO: Bailing out early is just a perf optimization right?
      // TODO: Removing the return statement should affect correctness?
      return;
    }

    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
      }
    }

    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

    if (refsChanged) {
      ReactRef.detachRefs(internalInstance, prevElement);
    }

    internalInstance.receiveComponent(nextElement, transaction, context);

    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }

    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Flush any dirty changes in a component.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
      // The component's enqueued batch number should always be the current
      // batch or the following one.
      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
      return;
    }
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
      }
    }
    internalInstance.performUpdateIfNecessary(transaction);
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  }
};

module.exports = ReactReconciler;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactInstrumentation":305,"./ReactRef":316,"_process":235,"fbjs/lib/warning":61}],316:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactRef.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var ReactOwner = require('./ReactOwner');

var ReactRef = {};

function attachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(component.getPublicInstance());
  } else {
    // Legacy ref
    ReactOwner.addComponentAsRefTo(component, ref, owner);
  }
}

function detachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(null);
  } else {
    // Legacy ref
    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
  }
}

ReactRef.attachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    attachRef(ref, instance, element._owner);
  }
};

ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
  // If either the owner or a `ref` has changed, make sure the newest owner
  // has stored a reference to `this`, and the previous owner (if different)
  // has forgotten the reference to `this`. We use the element instead
  // of the public this.props because the post processing cannot determine
  // a ref. The ref conceptually lives on the element.

  // TODO: Should this even be possible? The owner cannot change because
  // it's forbidden by shouldUpdateReactComponent. The ref can change
  // if you swap the keys of but not the refs. Reconsider where this check
  // is made. It probably belongs where the key checking and
  // instantiateReactComponent is done.

  var prevRef = null;
  var prevOwner = null;
  if (prevElement !== null && typeof prevElement === 'object') {
    prevRef = prevElement.ref;
    prevOwner = prevElement._owner;
  }

  var nextRef = null;
  var nextOwner = null;
  if (nextElement !== null && typeof nextElement === 'object') {
    nextRef = nextElement.ref;
    nextOwner = nextElement._owner;
  }

  return prevRef !== nextRef ||
  // If owner changes but we have an unchanged function ref, don't update refs
  typeof nextRef === 'string' && nextOwner !== prevOwner;
};

ReactRef.detachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    detachRef(ref, instance, element._owner);
  }
};

module.exports = ReactRef;
}).apply(this, arguments);

},{"./ReactOwner":311}],317:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactServerRenderingTransaction.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');
var Transaction = require('./Transaction');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactServerUpdateQueue = require('./ReactServerUpdateQueue');

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [];

if (process.env.NODE_ENV !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

var noopCallbackQueue = {
  enqueue: function () {}
};

/**
 * @class ReactServerRenderingTransaction
 * @param {boolean} renderToStaticMarkup
 */
function ReactServerRenderingTransaction(renderToStaticMarkup) {
  this.reinitializeTransaction();
  this.renderToStaticMarkup = renderToStaticMarkup;
  this.useCreateElement = false;
  this.updateQueue = new ReactServerUpdateQueue(this);
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array} Empty list of operation wrap procedures.
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return noopCallbackQueue;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return this.updateQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {},

  checkpoint: function () {},

  rollback: function () {}
};

_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactServerRenderingTransaction);

module.exports = ReactServerRenderingTransaction;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./PooledClass":267,"./ReactInstrumentation":305,"./ReactServerUpdateQueue":318,"./Transaction":338,"_process":235,"object-assign":232}],318:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactServerUpdateQueue.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ReactUpdateQueue = require('./ReactUpdateQueue');

var warning = require('fbjs/lib/warning');

function warnNoop(publicInstance, callerName) {
  if (process.env.NODE_ENV !== 'production') {
    var constructor = publicInstance.constructor;
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the update queue used for server rendering.
 * It delegates to ReactUpdateQueue while server rendering is in progress and
 * switches to ReactNoopUpdateQueue after the transaction has completed.
 * @class ReactServerUpdateQueue
 * @param {Transaction} transaction
 */

var ReactServerUpdateQueue = function () {
  function ReactServerUpdateQueue(transaction) {
    _classCallCheck(this, ReactServerUpdateQueue);

    this.transaction = transaction;
  }

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */


  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
    return false;
  };

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
    }
  };

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
    } else {
      warnNoop(publicInstance, 'forceUpdate');
    }
  };

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} completeState Next state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
    } else {
      warnNoop(publicInstance, 'replaceState');
    }
  };

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} partialState Next partial state to be merged with state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
    } else {
      warnNoop(publicInstance, 'setState');
    }
  };

  return ReactServerUpdateQueue;
}();

module.exports = ReactServerUpdateQueue;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactUpdateQueue":319,"_process":235,"fbjs/lib/warning":61}],319:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactUpdateQueue.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

function enqueueUpdate(internalInstance) {
  ReactUpdates.enqueueUpdate(internalInstance);
}

function formatUnexpectedArgument(arg) {
  var type = typeof arg;
  if (type !== 'object') {
    return type;
  }
  var displayName = arg.constructor && arg.constructor.name || type;
  var keys = Object.keys(arg);
  if (keys.length > 0 && keys.length < 20) {
    return displayName + ' (keys: ' + keys.join(', ') + ')';
  }
  return displayName;
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
  var internalInstance = ReactInstanceMap.get(publicInstance);
  if (!internalInstance) {
    if (process.env.NODE_ENV !== 'production') {
      var ctor = publicInstance.constructor;
      // Only warn when we have a callerName. Otherwise we should be silent.
      // We're probably calling from enqueueCallback. We don't want to warn
      // there because we already warned for the corresponding lifecycle method.
      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
    }
    return null;
  }

  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + "within `render` or another component's constructor). Render methods " + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
  }

  return internalInstance;
}

/**
 * ReactUpdateQueue allows for state updates to be scheduled into a later
 * reconciliation step.
 */
var ReactUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    if (process.env.NODE_ENV !== 'production') {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
        owner._warnedAboutRefsInRender = true;
      }
    }
    var internalInstance = ReactInstanceMap.get(publicInstance);
    if (internalInstance) {
      // During componentWillMount and render this will still be null but after
      // that will always render to something. At least for now. So we can use
      // this hack.
      return !!internalInstance._renderedComponent;
    } else {
      return false;
    }
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @param {string} callerName Name of the calling function in the public API.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback, callerName) {
    ReactUpdateQueue.validateCallback(callback, callerName);
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    // Previously we would throw an error if we didn't have an internal
    // instance. Since we want to make it a no-op instead, we mirror the same
    // behavior we have in other enqueue* methods.
    // We also need to ignore callbacks in componentWillMount. See
    // enqueueUpdates.
    if (!internalInstance) {
      return null;
    }

    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    // TODO: The callback here is ignored when setState is called from
    // componentWillMount. Either fix it or disallow doing so completely in
    // favor of getInitialState. Alternatively, we can disallow
    // componentWillMount during server-side rendering.
    enqueueUpdate(internalInstance);
  },

  enqueueCallbackInternal: function (internalInstance, callback) {
    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    enqueueUpdate(internalInstance);
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingForceUpdate = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingStateQueue = [completeState];
    internalInstance._pendingReplaceState = true;

    // Future-proof 15.5
    if (callback !== undefined && callback !== null) {
      ReactUpdateQueue.validateCallback(callback, 'replaceState');
      if (internalInstance._pendingCallbacks) {
        internalInstance._pendingCallbacks.push(callback);
      } else {
        internalInstance._pendingCallbacks = [callback];
      }
    }

    enqueueUpdate(internalInstance);
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onSetState();
      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
    }

    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

    if (!internalInstance) {
      return;
    }

    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
    queue.push(partialState);

    enqueueUpdate(internalInstance);
  },

  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
    internalInstance._pendingElement = nextElement;
    // TODO: introduce _pendingContext instead of setting it directly.
    internalInstance._context = nextContext;
    enqueueUpdate(internalInstance);
  },

  validateCallback: function (callback, callerName) {
    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
  }
};

module.exports = ReactUpdateQueue;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactInstanceMap":304,"./ReactInstrumentation":305,"./ReactUpdates":320,"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54,"fbjs/lib/warning":61,"react/lib/ReactCurrentOwner":384}],320:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactUpdates.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var CallbackQueue = require('./CallbackQueue');
var PooledClass = require('./PooledClass');
var ReactFeatureFlags = require('./ReactFeatureFlags');
var ReactReconciler = require('./ReactReconciler');
var Transaction = require('./Transaction');

var invariant = require('fbjs/lib/invariant');

var dirtyComponents = [];
var updateBatchNumber = 0;
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
}

var NESTED_UPDATES = {
  initialize: function () {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function () {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      // Additional updates were enqueued by componentDidUpdate handlers or
      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
      // these new updates so that if A's componentDidUpdate calls setState on
      // B, B will update before the callback A's updater provided when calling
      // setState.
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function () {
    this.callbackQueue.reset();
  },
  close: function () {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */true);
}

_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function () {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function (method, scope, a) {
    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
    // with this transaction's wrappers around it.
    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d, e) {
  ensureInjected();
  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
}

/**
 * Array comparator for ReactComponents by mount ordering.
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountOrderComparator(c1, c2) {
  return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.
  dirtyComponents.sort(mountOrderComparator);

  // Any updates enqueued while reconciling must be performed after this entire
  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
  // C, B could update twice in a single batch if C's render enqueues an update
  // to B (since B would have already updated, we should skip it, and the only
  // way we can know to do so is by checking the batch counter).
  updateBatchNumber++;

  for (var i = 0; i < len; i++) {
    // If a component is unmounted before pending changes apply, it will still
    // be here, but we assume that it has cleared its _pendingCallbacks and
    // that performUpdateIfNecessary is a noop.
    var component = dirtyComponents[i];

    // If performUpdateIfNecessary happens to enqueue any new updates, we
    // shouldn't execute the callbacks until the next render happens, so
    // stash the callbacks first
    var callbacks = component._pendingCallbacks;
    component._pendingCallbacks = null;

    var markerName;
    if (ReactFeatureFlags.logTopLevelRenders) {
      var namedComponent = component;
      // Duck type TopLevelWrapper. This is probably always true.
      if (component._currentElement.type.isReactTopLevelWrapper) {
        namedComponent = component._renderedComponent;
      }
      markerName = 'React update: ' + namedComponent.getName();
      console.time(markerName);
    }

    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

    if (markerName) {
      console.timeEnd(markerName);
    }

    if (callbacks) {
      for (var j = 0; j < callbacks.length; j++) {
        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
      }
    }
  }
}

var flushBatchedUpdates = function () {
  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
  // array and perform any updates enqueued by mount-ready handlers (i.e.,
  // componentDidUpdate) but we need to check here too in order to catch
  // updates enqueued by setState callbacks and asap calls.
  while (dirtyComponents.length || asapEnqueued) {
    if (dirtyComponents.length) {
      var transaction = ReactUpdatesFlushTransaction.getPooled();
      transaction.perform(runBatchedUpdates, null, transaction);
      ReactUpdatesFlushTransaction.release(transaction);
    }

    if (asapEnqueued) {
      asapEnqueued = false;
      var queue = asapCallbackQueue;
      asapCallbackQueue = CallbackQueue.getPooled();
      queue.notifyAll();
      CallbackQueue.release(queue);
    }
  }
};

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component) {
  ensureInjected();

  // Various parts of our code (such as ReactCompositeComponent's
  // _renderValidatedComponent) assume that calls to render aren't nested;
  // verify that that's the case. (This is called by each top-level update
  // function, like setState, forceUpdate, etc.; creation and
  // destruction of top-level components is guarded in ReactMount.)

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component);
    return;
  }

  dirtyComponents.push(component);
  if (component._updateBatchNumber == null) {
    component._updateBatchNumber = updateBatchNumber + 1;
  }
}

/**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
function asap(callback, context) {
  invariant(batchingStrategy.isBatchingUpdates, "ReactUpdates.asap: Can't enqueue an asap callback in a context where" + 'updates are not being batched.');
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function (ReconcileTransaction) {
    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function (_batchingStrategy) {
    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./CallbackQueue":249,"./PooledClass":267,"./ReactFeatureFlags":299,"./ReactReconciler":315,"./Transaction":338,"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54,"object-assign":232}],321:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ReactVersion.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

module.exports = '15.6.2';
}).apply(this, arguments);

},{}],322:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/SVGDOMPropertyConfig.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var NS = {
  xlink: 'http://www.w3.org/1999/xlink',
  xml: 'http://www.w3.org/XML/1998/namespace'
};

// We use attributes for everything SVG so let's avoid some duplication and run
// code instead.
// The following are all specified in the HTML config already so we exclude here.
// - class (as className)
// - color
// - height
// - id
// - lang
// - max
// - media
// - method
// - min
// - name
// - style
// - target
// - type
// - width
var ATTRS = {
  accentHeight: 'accent-height',
  accumulate: 0,
  additive: 0,
  alignmentBaseline: 'alignment-baseline',
  allowReorder: 'allowReorder',
  alphabetic: 0,
  amplitude: 0,
  arabicForm: 'arabic-form',
  ascent: 0,
  attributeName: 'attributeName',
  attributeType: 'attributeType',
  autoReverse: 'autoReverse',
  azimuth: 0,
  baseFrequency: 'baseFrequency',
  baseProfile: 'baseProfile',
  baselineShift: 'baseline-shift',
  bbox: 0,
  begin: 0,
  bias: 0,
  by: 0,
  calcMode: 'calcMode',
  capHeight: 'cap-height',
  clip: 0,
  clipPath: 'clip-path',
  clipRule: 'clip-rule',
  clipPathUnits: 'clipPathUnits',
  colorInterpolation: 'color-interpolation',
  colorInterpolationFilters: 'color-interpolation-filters',
  colorProfile: 'color-profile',
  colorRendering: 'color-rendering',
  contentScriptType: 'contentScriptType',
  contentStyleType: 'contentStyleType',
  cursor: 0,
  cx: 0,
  cy: 0,
  d: 0,
  decelerate: 0,
  descent: 0,
  diffuseConstant: 'diffuseConstant',
  direction: 0,
  display: 0,
  divisor: 0,
  dominantBaseline: 'dominant-baseline',
  dur: 0,
  dx: 0,
  dy: 0,
  edgeMode: 'edgeMode',
  elevation: 0,
  enableBackground: 'enable-background',
  end: 0,
  exponent: 0,
  externalResourcesRequired: 'externalResourcesRequired',
  fill: 0,
  fillOpacity: 'fill-opacity',
  fillRule: 'fill-rule',
  filter: 0,
  filterRes: 'filterRes',
  filterUnits: 'filterUnits',
  floodColor: 'flood-color',
  floodOpacity: 'flood-opacity',
  focusable: 0,
  fontFamily: 'font-family',
  fontSize: 'font-size',
  fontSizeAdjust: 'font-size-adjust',
  fontStretch: 'font-stretch',
  fontStyle: 'font-style',
  fontVariant: 'font-variant',
  fontWeight: 'font-weight',
  format: 0,
  from: 0,
  fx: 0,
  fy: 0,
  g1: 0,
  g2: 0,
  glyphName: 'glyph-name',
  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
  glyphOrientationVertical: 'glyph-orientation-vertical',
  glyphRef: 'glyphRef',
  gradientTransform: 'gradientTransform',
  gradientUnits: 'gradientUnits',
  hanging: 0,
  horizAdvX: 'horiz-adv-x',
  horizOriginX: 'horiz-origin-x',
  ideographic: 0,
  imageRendering: 'image-rendering',
  'in': 0,
  in2: 0,
  intercept: 0,
  k: 0,
  k1: 0,
  k2: 0,
  k3: 0,
  k4: 0,
  kernelMatrix: 'kernelMatrix',
  kernelUnitLength: 'kernelUnitLength',
  kerning: 0,
  keyPoints: 'keyPoints',
  keySplines: 'keySplines',
  keyTimes: 'keyTimes',
  lengthAdjust: 'lengthAdjust',
  letterSpacing: 'letter-spacing',
  lightingColor: 'lighting-color',
  limitingConeAngle: 'limitingConeAngle',
  local: 0,
  markerEnd: 'marker-end',
  markerMid: 'marker-mid',
  markerStart: 'marker-start',
  markerHeight: 'markerHeight',
  markerUnits: 'markerUnits',
  markerWidth: 'markerWidth',
  mask: 0,
  maskContentUnits: 'maskContentUnits',
  maskUnits: 'maskUnits',
  mathematical: 0,
  mode: 0,
  numOctaves: 'numOctaves',
  offset: 0,
  opacity: 0,
  operator: 0,
  order: 0,
  orient: 0,
  orientation: 0,
  origin: 0,
  overflow: 0,
  overlinePosition: 'overline-position',
  overlineThickness: 'overline-thickness',
  paintOrder: 'paint-order',
  panose1: 'panose-1',
  pathLength: 'pathLength',
  patternContentUnits: 'patternContentUnits',
  patternTransform: 'patternTransform',
  patternUnits: 'patternUnits',
  pointerEvents: 'pointer-events',
  points: 0,
  pointsAtX: 'pointsAtX',
  pointsAtY: 'pointsAtY',
  pointsAtZ: 'pointsAtZ',
  preserveAlpha: 'preserveAlpha',
  preserveAspectRatio: 'preserveAspectRatio',
  primitiveUnits: 'primitiveUnits',
  r: 0,
  radius: 0,
  refX: 'refX',
  refY: 'refY',
  renderingIntent: 'rendering-intent',
  repeatCount: 'repeatCount',
  repeatDur: 'repeatDur',
  requiredExtensions: 'requiredExtensions',
  requiredFeatures: 'requiredFeatures',
  restart: 0,
  result: 0,
  rotate: 0,
  rx: 0,
  ry: 0,
  scale: 0,
  seed: 0,
  shapeRendering: 'shape-rendering',
  slope: 0,
  spacing: 0,
  specularConstant: 'specularConstant',
  specularExponent: 'specularExponent',
  speed: 0,
  spreadMethod: 'spreadMethod',
  startOffset: 'startOffset',
  stdDeviation: 'stdDeviation',
  stemh: 0,
  stemv: 0,
  stitchTiles: 'stitchTiles',
  stopColor: 'stop-color',
  stopOpacity: 'stop-opacity',
  strikethroughPosition: 'strikethrough-position',
  strikethroughThickness: 'strikethrough-thickness',
  string: 0,
  stroke: 0,
  strokeDasharray: 'stroke-dasharray',
  strokeDashoffset: 'stroke-dashoffset',
  strokeLinecap: 'stroke-linecap',
  strokeLinejoin: 'stroke-linejoin',
  strokeMiterlimit: 'stroke-miterlimit',
  strokeOpacity: 'stroke-opacity',
  strokeWidth: 'stroke-width',
  surfaceScale: 'surfaceScale',
  systemLanguage: 'systemLanguage',
  tableValues: 'tableValues',
  targetX: 'targetX',
  targetY: 'targetY',
  textAnchor: 'text-anchor',
  textDecoration: 'text-decoration',
  textRendering: 'text-rendering',
  textLength: 'textLength',
  to: 0,
  transform: 0,
  u1: 0,
  u2: 0,
  underlinePosition: 'underline-position',
  underlineThickness: 'underline-thickness',
  unicode: 0,
  unicodeBidi: 'unicode-bidi',
  unicodeRange: 'unicode-range',
  unitsPerEm: 'units-per-em',
  vAlphabetic: 'v-alphabetic',
  vHanging: 'v-hanging',
  vIdeographic: 'v-ideographic',
  vMathematical: 'v-mathematical',
  values: 0,
  vectorEffect: 'vector-effect',
  version: 0,
  vertAdvY: 'vert-adv-y',
  vertOriginX: 'vert-origin-x',
  vertOriginY: 'vert-origin-y',
  viewBox: 'viewBox',
  viewTarget: 'viewTarget',
  visibility: 0,
  widths: 0,
  wordSpacing: 'word-spacing',
  writingMode: 'writing-mode',
  x: 0,
  xHeight: 'x-height',
  x1: 0,
  x2: 0,
  xChannelSelector: 'xChannelSelector',
  xlinkActuate: 'xlink:actuate',
  xlinkArcrole: 'xlink:arcrole',
  xlinkHref: 'xlink:href',
  xlinkRole: 'xlink:role',
  xlinkShow: 'xlink:show',
  xlinkTitle: 'xlink:title',
  xlinkType: 'xlink:type',
  xmlBase: 'xml:base',
  xmlns: 0,
  xmlnsXlink: 'xmlns:xlink',
  xmlLang: 'xml:lang',
  xmlSpace: 'xml:space',
  y: 0,
  y1: 0,
  y2: 0,
  yChannelSelector: 'yChannelSelector',
  z: 0,
  zoomAndPan: 'zoomAndPan'
};

var SVGDOMPropertyConfig = {
  Properties: {},
  DOMAttributeNamespaces: {
    xlinkActuate: NS.xlink,
    xlinkArcrole: NS.xlink,
    xlinkHref: NS.xlink,
    xlinkRole: NS.xlink,
    xlinkShow: NS.xlink,
    xlinkTitle: NS.xlink,
    xlinkType: NS.xlink,
    xmlBase: NS.xml,
    xmlLang: NS.xml,
    xmlSpace: NS.xml
  },
  DOMAttributeNames: {}
};

Object.keys(ATTRS).forEach(function (key) {
  SVGDOMPropertyConfig.Properties[key] = 0;
  if (ATTRS[key]) {
    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
  }
});

module.exports = SVGDOMPropertyConfig;
}).apply(this, arguments);

},{}],323:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/SelectEventPlugin.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInputSelection = require('./ReactInputSelection');
var SyntheticEvent = require('./SyntheticEvent');

var getActiveElement = require('fbjs/lib/getActiveElement');
var isTextInputElement = require('./isTextInputElement');
var shallowEqual = require('fbjs/lib/shallowEqual');

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
  }
};

var activeElement = null;
var activeElementInst = null;
var lastSelection = null;
var mouseDown = false;

// Track whether a listener exists for this plugin. If none exist, we do
// not extract events. See #3639.
var hasListener = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (!hasListener) {
      return null;
    }

    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case 'topFocus':
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement = targetNode;
          activeElementInst = targetInst;
          lastSelection = null;
        }
        break;
      case 'topBlur':
        activeElement = null;
        activeElementInst = null;
        lastSelection = null;
        break;
      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case 'topMouseDown':
        mouseDown = true;
        break;
      case 'topContextMenu':
      case 'topMouseUp':
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);
      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case 'topSelectionChange':
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case 'topKeyDown':
      case 'topKeyUp':
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  },

  didPutListener: function (inst, registrationName, listener) {
    if (registrationName === 'onSelect') {
      hasListener = true;
    }
  }
};

module.exports = SelectEventPlugin;
}).apply(this, arguments);

},{"./EventPropagators":262,"./ReactDOMComponentTree":276,"./ReactInputSelection":303,"./SyntheticEvent":329,"./isTextInputElement":361,"fbjs/lib/ExecutionEnvironment":40,"fbjs/lib/getActiveElement":49,"fbjs/lib/shallowEqual":60}],324:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/SimpleEventPlugin.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var EventListener = require('fbjs/lib/EventListener');
var EventPropagators = require('./EventPropagators');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var SyntheticAnimationEvent = require('./SyntheticAnimationEvent');
var SyntheticClipboardEvent = require('./SyntheticClipboardEvent');
var SyntheticEvent = require('./SyntheticEvent');
var SyntheticFocusEvent = require('./SyntheticFocusEvent');
var SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');
var SyntheticMouseEvent = require('./SyntheticMouseEvent');
var SyntheticDragEvent = require('./SyntheticDragEvent');
var SyntheticTouchEvent = require('./SyntheticTouchEvent');
var SyntheticTransitionEvent = require('./SyntheticTransitionEvent');
var SyntheticUIEvent = require('./SyntheticUIEvent');
var SyntheticWheelEvent = require('./SyntheticWheelEvent');

var emptyFunction = require('fbjs/lib/emptyFunction');
var getEventCharCode = require('./getEventCharCode');
var invariant = require('fbjs/lib/invariant');

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: ['topAbort'],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = {
 *   'topAbort': { sameConfig }
 * };
 */
var eventTypes = {};
var topLevelEventsToDispatchConfig = {};
['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;
  var topEvent = 'top' + capitalizedEvent;

  var type = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent]
  };
  eventTypes[event] = type;
  topLevelEventsToDispatchConfig[topEvent] = type;
});

var onClickListeners = {};

function getDictionaryKey(inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
}

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

var SimpleEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case 'topAbort':
      case 'topCanPlay':
      case 'topCanPlayThrough':
      case 'topDurationChange':
      case 'topEmptied':
      case 'topEncrypted':
      case 'topEnded':
      case 'topError':
      case 'topInput':
      case 'topInvalid':
      case 'topLoad':
      case 'topLoadedData':
      case 'topLoadedMetadata':
      case 'topLoadStart':
      case 'topPause':
      case 'topPlay':
      case 'topPlaying':
      case 'topProgress':
      case 'topRateChange':
      case 'topReset':
      case 'topSeeked':
      case 'topSeeking':
      case 'topStalled':
      case 'topSubmit':
      case 'topSuspend':
      case 'topTimeUpdate':
      case 'topVolumeChange':
      case 'topWaiting':
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case 'topKeyPress':
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case 'topKeyDown':
      case 'topKeyUp':
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case 'topBlur':
      case 'topFocus':
        EventConstructor = SyntheticFocusEvent;
        break;
      case 'topClick':
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case 'topDoubleClick':
      case 'topMouseDown':
      case 'topMouseMove':
      case 'topMouseUp':
      // TODO: Disabled elements should not respond to mouse events
      /* falls through */
      case 'topMouseOut':
      case 'topMouseOver':
      case 'topContextMenu':
        EventConstructor = SyntheticMouseEvent;
        break;
      case 'topDrag':
      case 'topDragEnd':
      case 'topDragEnter':
      case 'topDragExit':
      case 'topDragLeave':
      case 'topDragOver':
      case 'topDragStart':
      case 'topDrop':
        EventConstructor = SyntheticDragEvent;
        break;
      case 'topTouchCancel':
      case 'topTouchEnd':
      case 'topTouchMove':
      case 'topTouchStart':
        EventConstructor = SyntheticTouchEvent;
        break;
      case 'topAnimationEnd':
      case 'topAnimationIteration':
      case 'topAnimationStart':
        EventConstructor = SyntheticAnimationEvent;
        break;
      case 'topTransitionEnd':
        EventConstructor = SyntheticTransitionEvent;
        break;
      case 'topScroll':
        EventConstructor = SyntheticUIEvent;
        break;
      case 'topWheel':
        EventConstructor = SyntheticWheelEvent;
        break;
      case 'topCopy':
      case 'topCut':
      case 'topPaste':
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  },

  didPutListener: function (inst, registrationName, listener) {
    // Mobile Safari does not fire properly bubble click events on
    // non-interactive elements, which means delegated click listeners do not
    // fire. The workaround for this bug involves attaching an empty click
    // listener on the target node.
    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      if (!onClickListeners[key]) {
        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
      }
    }
  },

  willDeleteListener: function (inst, registrationName) {
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      onClickListeners[key].remove();
      delete onClickListeners[key];
    }
  }
};

module.exports = SimpleEventPlugin;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./EventPropagators":262,"./ReactDOMComponentTree":276,"./SyntheticAnimationEvent":325,"./SyntheticClipboardEvent":326,"./SyntheticDragEvent":328,"./SyntheticEvent":329,"./SyntheticFocusEvent":330,"./SyntheticKeyboardEvent":332,"./SyntheticMouseEvent":333,"./SyntheticTouchEvent":334,"./SyntheticTransitionEvent":335,"./SyntheticUIEvent":336,"./SyntheticWheelEvent":337,"./getEventCharCode":349,"./reactProdInvariant":363,"_process":235,"fbjs/lib/EventListener":39,"fbjs/lib/emptyFunction":46,"fbjs/lib/invariant":54}],325:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/SyntheticAnimationEvent.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var AnimationEventInterface = {
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

module.exports = SyntheticAnimationEvent;
}).apply(this, arguments);

},{"./SyntheticEvent":329}],326:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/SyntheticClipboardEvent.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;
}).apply(this, arguments);

},{"./SyntheticEvent":329}],327:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/SyntheticCompositionEvent.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

module.exports = SyntheticCompositionEvent;
}).apply(this, arguments);

},{"./SyntheticEvent":329}],328:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/SyntheticDragEvent.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var SyntheticMouseEvent = require('./SyntheticMouseEvent');

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;
}).apply(this, arguments);

},{"./SyntheticMouseEvent":333}],329:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/SyntheticEvent.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var emptyFunction = require('fbjs/lib/emptyFunction');
var warning = require('fbjs/lib/warning');

var didWarnForAddedNewProperty = false;
var isProxySupported = typeof Proxy === 'function';

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  if (process.env.NODE_ENV !== 'production') {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    if (process.env.NODE_ENV !== 'production') {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {
  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
      // eslint-disable-next-line valid-typeof
    } else if (typeof event.returnValue !== 'unknown') {
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
      // eslint-disable-next-line valid-typeof
    } else if (typeof event.cancelBubble !== 'unknown') {
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      if (process.env.NODE_ENV !== 'production') {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      } else {
        this[propName] = null;
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    if (process.env.NODE_ENV !== 'production') {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
    }
  }
});

SyntheticEvent.Interface = EventInterface;

/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function (Class, Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
};

/** Proxying after everything set on SyntheticEvent
  * to resolve Proxy issue on some WebKit browsers
  * in which some Event properties are set to undefined (GH#10010)
  */
if (process.env.NODE_ENV !== 'production') {
  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function (target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function (constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function (target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;

/**
  * Helper to nullify syntheticEvent instance properties when destructing
  *
  * @param {object} SyntheticEvent
  * @param {String} propName
  * @return {object} defineProperty object
  */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    process.env.NODE_ENV !== 'production' ? warning(warningCondition, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./PooledClass":267,"_process":235,"fbjs/lib/emptyFunction":46,"fbjs/lib/warning":61,"object-assign":232}],330:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/SyntheticFocusEvent.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;
}).apply(this, arguments);

},{"./SyntheticUIEvent":336}],331:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/SyntheticInputEvent.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

module.exports = SyntheticInputEvent;
}).apply(this, arguments);

},{"./SyntheticEvent":329}],332:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/SyntheticKeyboardEvent.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

var getEventCharCode = require('./getEventCharCode');
var getEventKey = require('./getEventKey');
var getEventModifierState = require('./getEventModifierState');

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;
}).apply(this, arguments);

},{"./SyntheticUIEvent":336,"./getEventCharCode":349,"./getEventKey":350,"./getEventModifierState":351}],333:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/SyntheticMouseEvent.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');
var ViewportMetrics = require('./ViewportMetrics');

var getEventModifierState = require('./getEventModifierState');

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: function (event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  },
  // "Proprietary" Interface.
  pageX: function (event) {
    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function (event) {
    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;
}).apply(this, arguments);

},{"./SyntheticUIEvent":336,"./ViewportMetrics":339,"./getEventModifierState":351}],334:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/SyntheticTouchEvent.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

var getEventModifierState = require('./getEventModifierState');

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;
}).apply(this, arguments);

},{"./SyntheticUIEvent":336,"./getEventModifierState":351}],335:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/SyntheticTransitionEvent.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var TransitionEventInterface = {
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

module.exports = SyntheticTransitionEvent;
}).apply(this, arguments);

},{"./SyntheticEvent":329}],336:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/SyntheticUIEvent.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

var getEventTarget = require('./getEventTarget');

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: function (event) {
    if (event.view) {
      return event.view;
    }

    var target = getEventTarget(event);
    if (target.window === target) {
      // target is a window object
      return target;
    }

    var doc = target.ownerDocument;
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    if (doc) {
      return doc.defaultView || doc.parentWindow;
    } else {
      return window;
    }
  },
  detail: function (event) {
    return event.detail || 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;
}).apply(this, arguments);

},{"./SyntheticEvent":329,"./getEventTarget":352}],337:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/SyntheticWheelEvent.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var SyntheticMouseEvent = require('./SyntheticMouseEvent');

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;
}).apply(this, arguments);

},{"./SyntheticMouseEvent":333}],338:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/Transaction.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

var OBSERVED_ERROR = {};

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM updates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var TransactionImpl = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function () {
    this.transactionWrappers = this.getTransactionWrappers();
    if (this.wrapperInitData) {
      this.wrapperInitData.length = 0;
    } else {
      this.wrapperInitData = [];
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function () {
    return !!this._isInTransaction;
  },

  /* eslint-disable space-before-function-paren */

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked. The optional arguments helps prevent the need
   * to bind in many cases.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} a Argument to pass to the method.
   * @param {Object?=} b Argument to pass to the method.
   * @param {Object?=} c Argument to pass to the method.
   * @param {Object?=} d Argument to pass to the method.
   * @param {Object?=} e Argument to pass to the method.
   * @param {Object?=} f Argument to pass to the method.
   *
   * @return {*} Return value from `method`.
   */
  perform: function (method, scope, a, b, c, d, e, f) {
    /* eslint-enable space-before-function-paren */
    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {}
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function (startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
      } finally {
        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {}
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function (startIndex) {
    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== OBSERVED_ERROR && wrapper.close) {
          wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {}
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

module.exports = TransactionImpl;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54}],339:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/ViewportMetrics.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ViewportMetrics = {
  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function (scrollPosition) {
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }
};

module.exports = ViewportMetrics;
}).apply(this, arguments);

},{}],340:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/accumulateInto.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54}],341:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/adler32.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var MOD = 65521;

// adler32 is not cryptographically strong, and is only used to sanity check that
// markup generated on the server matches the markup generated on the client.
// This implementation (a modified version of the SheetJS version) has been optimized
// for our use case, at the expense of conforming to the adler32 specification
// for non-ascii inputs.
function adler32(data) {
  var a = 1;
  var b = 0;
  var i = 0;
  var l = data.length;
  var m = l & ~0x3;
  while (i < m) {
    var n = Math.min(i + 4096, m);
    for (; i < n; i += 4) {
      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
    }
    a %= MOD;
    b %= MOD;
  }
  for (; i < l; i++) {
    b += a += data.charCodeAt(i);
  }
  a %= MOD;
  b %= MOD;
  return a | b << 16;
}

module.exports = adler32;
}).apply(this, arguments);

},{}],342:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/checkReactTypeSpec.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactPropTypesSecret = require('./ReactPropTypesSecret');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if (process.env.NODE_ENV !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactPropTypeLocationNames":312,"./ReactPropTypesSecret":313,"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54,"fbjs/lib/warning":61,"react/lib/ReactComponentTreeHook":383}],343:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/createMicrosoftUnsafeLocalFunction.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

/* globals MSApp */

'use strict';

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */

var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

module.exports = createMicrosoftUnsafeLocalFunction;
}).apply(this, arguments);

},{}],344:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/dangerousStyleValue.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var CSSProperty = require('./CSSProperty');
var warning = require('fbjs/lib/warning');

var isUnitlessNumber = CSSProperty.isUnitlessNumber;
var styleWarnings = {};

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @param {ReactDOMComponent} component
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, component, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isCustomProperty || isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
    return '' + value; // cast to string
  }

  if (typeof value === 'string') {
    if (process.env.NODE_ENV !== 'production') {
      // Allow '0' to pass through without warning. 0 is already special and
      // doesn't require units, so we don't need to warn about it.
      if (component && value !== '0') {
        var owner = component._currentElement._owner;
        var ownerName = owner ? owner.getName() : null;
        if (ownerName && !styleWarnings[ownerName]) {
          styleWarnings[ownerName] = {};
        }
        var warned = false;
        if (ownerName) {
          var warnings = styleWarnings[ownerName];
          warned = warnings[name];
          if (!warned) {
            warnings[name] = true;
          }
        }
        if (!warned) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
        }
      }
    }
    value = value.trim();
  }
  return value + 'px';
}

module.exports = dangerousStyleValue;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./CSSProperty":247,"_process":235,"fbjs/lib/warning":61}],345:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/escapeTextContentForBrowser.js", module);
(function(){
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * Based on the escape-html library, which is used under the MIT License below:
 *
 * Copyright (c) 2012-2013 TJ Holowaychuk
 * Copyright (c) 2015 Andreas Lubbe
 * Copyright (c) 2015 Tiancheng "Timothy" Gu
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

'use strict';

// code copied and modified from escape-html
/**
 * Module variables.
 * @private
 */

var matchHtmlRegExp = /["'&<>]/;

/**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */

function escapeHtml(string) {
  var str = '' + string;
  var match = matchHtmlRegExp.exec(str);

  if (!match) {
    return str;
  }

  var escape;
  var html = '';
  var index = 0;
  var lastIndex = 0;

  for (index = match.index; index < str.length; index++) {
    switch (str.charCodeAt(index)) {
      case 34:
        // "
        escape = '&quot;';
        break;
      case 38:
        // &
        escape = '&amp;';
        break;
      case 39:
        // '
        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
        break;
      case 60:
        // <
        escape = '&lt;';
        break;
      case 62:
        // >
        escape = '&gt;';
        break;
      default:
        continue;
    }

    if (lastIndex !== index) {
      html += str.substring(lastIndex, index);
    }

    lastIndex = index + 1;
    html += escape;
  }

  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
}
// end code copied and modified from escape-html

/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextContentForBrowser(text) {
  if (typeof text === 'boolean' || typeof text === 'number') {
    // this shortcircuit helps perf for types that we know will never have
    // special characters, especially given that this function is used often
    // for numeric dom ids.
    return '' + text;
  }
  return escapeHtml(text);
}

module.exports = escapeTextContentForBrowser;
}).apply(this, arguments);

},{}],346:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/findDOMNode.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstanceMap = require('./ReactInstanceMap');

var getHostComponentFromComposite = require('./getHostComponentFromComposite');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Returns the DOM node rendered by this element.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
 *
 * @param {ReactComponent|DOMElement} componentOrElement
 * @return {?DOMElement} The root node of this element.
 */
function findDOMNode(componentOrElement) {
  if (process.env.NODE_ENV !== 'production') {
    var owner = ReactCurrentOwner.current;
    if (owner !== null) {
      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
      owner._warnedAboutRefsInRender = true;
    }
  }
  if (componentOrElement == null) {
    return null;
  }
  if (componentOrElement.nodeType === 1) {
    return componentOrElement;
  }

  var inst = ReactInstanceMap.get(componentOrElement);
  if (inst) {
    inst = getHostComponentFromComposite(inst);
    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
  }

  if (typeof componentOrElement.render === 'function') {
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
  } else {
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
  }
}

module.exports = findDOMNode;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactDOMComponentTree":276,"./ReactInstanceMap":304,"./getHostComponentFromComposite":353,"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54,"fbjs/lib/warning":61,"react/lib/ReactCurrentOwner":384}],347:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/flattenChildren.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var KeyEscapeUtils = require('./KeyEscapeUtils');
var traverseAllChildren = require('./traverseAllChildren');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
}

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 * @param {number=} selfDebugID Optional debugID of the current internal instance.
 */
function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
  // We found a component instance.
  if (traverseContext && typeof traverseContext === 'object') {
    var result = traverseContext;
    var keyUnique = result[name] === undefined;
    if (process.env.NODE_ENV !== 'production') {
      if (!ReactComponentTreeHook) {
        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
      }
      if (!keyUnique) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
      }
    }
    if (keyUnique && child != null) {
      result[name] = child;
    }
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children, selfDebugID) {
  if (children == null) {
    return children;
  }
  var result = {};

  if (process.env.NODE_ENV !== 'production') {
    traverseAllChildren(children, function (traverseContext, child, name) {
      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
    }, result);
  } else {
    traverseAllChildren(children, flattenSingleChildIntoContext, result);
  }
  return result;
}

module.exports = flattenChildren;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./KeyEscapeUtils":265,"./traverseAllChildren":368,"_process":235,"fbjs/lib/warning":61,"react/lib/ReactComponentTreeHook":383}],348:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/forEachAccumulated.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */

function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

module.exports = forEachAccumulated;
}).apply(this, arguments);

},{}],349:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/getEventCharCode.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */

function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

module.exports = getEventCharCode;
}).apply(this, arguments);

},{}],350:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/getEventKey.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var getEventCharCode = require('./getEventCharCode');

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  Esc: 'Escape',
  Spacebar: ' ',
  Left: 'ArrowLeft',
  Up: 'ArrowUp',
  Right: 'ArrowRight',
  Down: 'ArrowDown',
  Del: 'Delete',
  Win: 'OS',
  Menu: 'ContextMenu',
  Apps: 'ContextMenu',
  Scroll: 'ScrollLock',
  MozPrintableKey: 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1',
  113: 'F2',
  114: 'F3',
  115: 'F4',
  116: 'F5',
  117: 'F6',
  118: 'F7',
  119: 'F8',
  120: 'F9',
  121: 'F10',
  122: 'F11',
  123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

module.exports = getEventKey;
}).apply(this, arguments);

},{"./getEventCharCode":349}],351:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/getEventModifierState.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  Alt: 'altKey',
  Control: 'ctrlKey',
  Meta: 'metaKey',
  Shift: 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

module.exports = getEventModifierState;
}).apply(this, arguments);

},{}],352:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/getEventTarget.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;
}).apply(this, arguments);

},{}],353:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/getHostComponentFromComposite.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ReactNodeTypes = require('./ReactNodeTypes');

function getHostComponentFromComposite(inst) {
  var type;

  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
    inst = inst._renderedComponent;
  }

  if (type === ReactNodeTypes.HOST) {
    return inst._renderedComponent;
  } else if (type === ReactNodeTypes.EMPTY) {
    return null;
  }
}

module.exports = getHostComponentFromComposite;
}).apply(this, arguments);

},{"./ReactNodeTypes":310}],354:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/getIteratorFn.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;
}).apply(this, arguments);

},{}],355:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/getNodeForCharacterOffset.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;
}).apply(this, arguments);

},{}],356:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/getTextContentAccessor.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;
}).apply(this, arguments);

},{"fbjs/lib/ExecutionEnvironment":40}],357:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/getVendorPrefixedEventName.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return '';
}

module.exports = getVendorPrefixedEventName;
}).apply(this, arguments);

},{"fbjs/lib/ExecutionEnvironment":40}],358:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/inputValueTracking.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ReactDOMComponentTree = require('./ReactDOMComponentTree');

function isCheckable(elem) {
  var type = elem.type;
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
}

function getTracker(inst) {
  return inst._wrapperState.valueTracker;
}

function attachTracker(inst, tracker) {
  inst._wrapperState.valueTracker = tracker;
}

function detachTracker(inst) {
  inst._wrapperState.valueTracker = null;
}

function getValueFromNode(node) {
  var value;
  if (node) {
    value = isCheckable(node) ? '' + node.checked : node.value;
  }
  return value;
}

var inputValueTracking = {
  // exposed for testing
  _getTrackerFromNode: function (node) {
    return getTracker(ReactDOMComponentTree.getInstanceFromNode(node));
  },


  track: function (inst) {
    if (getTracker(inst)) {
      return;
    }

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var valueField = isCheckable(node) ? 'checked' : 'value';
    var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

    var currentValue = '' + node[valueField];

    // if someone has already defined a value or Safari, then bail
    // and don't track value will cause over reporting of changes,
    // but it's better then a hard failure
    // (needed for certain tests that spyOn input values and Safari)
    if (node.hasOwnProperty(valueField) || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
      return;
    }

    Object.defineProperty(node, valueField, {
      enumerable: descriptor.enumerable,
      configurable: true,
      get: function () {
        return descriptor.get.call(this);
      },
      set: function (value) {
        currentValue = '' + value;
        descriptor.set.call(this, value);
      }
    });

    attachTracker(inst, {
      getValue: function () {
        return currentValue;
      },
      setValue: function (value) {
        currentValue = '' + value;
      },
      stopTracking: function () {
        detachTracker(inst);
        delete node[valueField];
      }
    });
  },

  updateValueIfChanged: function (inst) {
    if (!inst) {
      return false;
    }
    var tracker = getTracker(inst);

    if (!tracker) {
      inputValueTracking.track(inst);
      return true;
    }

    var lastValue = tracker.getValue();
    var nextValue = getValueFromNode(ReactDOMComponentTree.getNodeFromInstance(inst));

    if (nextValue !== lastValue) {
      tracker.setValue(nextValue);
      return true;
    }

    return false;
  },
  stopTracking: function (inst) {
    var tracker = getTracker(inst);
    if (tracker) {
      tracker.stopTracking();
    }
  }
};

module.exports = inputValueTracking;
}).apply(this, arguments);

},{"./ReactDOMComponentTree":276}],359:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/instantiateReactComponent.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var ReactCompositeComponent = require('./ReactCompositeComponent');
var ReactEmptyComponent = require('./ReactEmptyComponent');
var ReactHostComponent = require('./ReactHostComponent');

var getNextDebugID = require('react/lib/getNextDebugID');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

// To avoid a cyclic dependency, we create the final class in this module
var ReactCompositeComponentWrapper = function (element) {
  this.construct(element);
};

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Check if the type reference is a known internal type. I.e. not a user
 * provided composite type.
 *
 * @param {function} type
 * @return {boolean} Returns true if this is a valid internal type.
 */
function isInternalComponentType(type) {
  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
}

/**
 * Given a ReactNode, create an instance that will actually be mounted.
 *
 * @param {ReactNode} node
 * @param {boolean} shouldHaveDebugID
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
function instantiateReactComponent(node, shouldHaveDebugID) {
  var instance;

  if (node === null || node === false) {
    instance = ReactEmptyComponent.create(instantiateReactComponent);
  } else if (typeof node === 'object') {
    var element = node;
    var type = element.type;
    if (typeof type !== 'function' && typeof type !== 'string') {
      var info = '';
      if (process.env.NODE_ENV !== 'production') {
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + "it's defined in.";
        }
      }
      info += getDeclarationErrorAddendum(element._owner);
      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
    }

    // Special case string values
    if (typeof element.type === 'string') {
      instance = ReactHostComponent.createInternalComponent(element);
    } else if (isInternalComponentType(element.type)) {
      // This is temporarily available for custom components that are not string
      // representations. I.e. ART. Once those are updated to use the string
      // representation, we can drop this code path.
      instance = new element.type(element);

      // We renamed this. Allow the old name for compat. :(
      if (!instance.getHostNode) {
        instance.getHostNode = instance.getNativeNode;
      }
    } else {
      instance = new ReactCompositeComponentWrapper(element);
    }
  } else if (typeof node === 'string' || typeof node === 'number') {
    instance = ReactHostComponent.createInstanceForText(node);
  } else {
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
  }

  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
  }

  // These two fields are used by the DOM and ART diffing algorithms
  // respectively. Instead of using expandos on components, we should be
  // storing the state needed by the diffing algorithms elsewhere.
  instance._mountIndex = 0;
  instance._mountImage = null;

  if (process.env.NODE_ENV !== 'production') {
    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
  }

  // Internal instances should fully constructed at this point, so they should
  // not get any new fields added to them at this point.
  if (process.env.NODE_ENV !== 'production') {
    if (Object.preventExtensions) {
      Object.preventExtensions(instance);
    }
  }

  return instance;
}

_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
  _instantiateReactComponent: instantiateReactComponent
});

module.exports = instantiateReactComponent;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactCompositeComponent":272,"./ReactEmptyComponent":295,"./ReactHostComponent":300,"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54,"fbjs/lib/warning":61,"object-assign":232,"react/lib/getNextDebugID":398}],360:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/isEventSupported.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature = document.implementation && document.implementation.hasFeature &&
  // always returns true in newer browsers as per the standard.
  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
  document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;
}).apply(this, arguments);

},{"fbjs/lib/ExecutionEnvironment":40}],361:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/isTextInputElement.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */

var supportedInputTypes = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

module.exports = isTextInputElement;
}).apply(this, arguments);

},{}],362:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/quoteAttributeValueForBrowser.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');

/**
 * Escapes attribute value to prevent scripting attacks.
 *
 * @param {*} value Value to escape.
 * @return {string} An escaped string.
 */
function quoteAttributeValueForBrowser(value) {
  return '"' + escapeTextContentForBrowser(value) + '"';
}

module.exports = quoteAttributeValueForBrowser;
}).apply(this, arguments);

},{"./escapeTextContentForBrowser":345}],363:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/reactProdInvariant.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
'use strict';

/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;
}).apply(this, arguments);

},{}],364:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/renderSubtreeIntoContainer.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ReactMount = require('./ReactMount');

module.exports = ReactMount.renderSubtreeIntoContainer;
}).apply(this, arguments);

},{"./ReactMount":308}],365:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/setInnerHTML.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var DOMNamespaces = require('./DOMNamespaces');

var WHITESPACE_TEST = /^[ \r\n\t\f]/;
var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer;

/**
 * Set the innerHTML property of a node, ensuring that whitespace is preserved
 * even in IE8.
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node
  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var svgNode = reusableSVGContainer.firstChild;
    while (svgNode.firstChild) {
      node.appendChild(svgNode.firstChild);
    }
  } else {
    node.innerHTML = html;
  }
});

if (ExecutionEnvironment.canUseDOM) {
  // IE8: When updating a just created node with innerHTML only leading
  // whitespace is removed. When updating an existing node with innerHTML
  // whitespace in root TextNodes is also collapsed.
  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

  // Feature detection; only IE8 is known to behave improperly like this.
  var testElement = document.createElement('div');
  testElement.innerHTML = ' ';
  if (testElement.innerHTML === '') {
    setInnerHTML = function (node, html) {
      // Magic theory: IE8 supposedly differentiates between added and updated
      // nodes when processing innerHTML, innerHTML on updated nodes suffers
      // from worse whitespace behavior. Re-adding a node like this triggers
      // the initial and more favorable whitespace behavior.
      // TODO: What to do on a detached node?
      if (node.parentNode) {
        node.parentNode.replaceChild(node, node);
      }

      // We also implement a workaround for non-visible tags disappearing into
      // thin air on IE8, this only happens if there is no visible text
      // in-front of the non-visible tags. Piggyback on the whitespace fix
      // and simply check if any non-visible tags appear in the source.
      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
        // in hopes that this is preserved even if "\uFEFF" is transformed to
        // the actual Unicode character (by Babel, for example).
        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
        node.innerHTML = String.fromCharCode(0xfeff) + html;

        // deleteData leaves an empty `TextNode` which offsets the index of all
        // children. Definitely want to avoid this.
        var textNode = node.firstChild;
        if (textNode.data.length === 1) {
          node.removeChild(textNode);
        } else {
          textNode.deleteData(0, 1);
        }
      } else {
        node.innerHTML = html;
      }
    };
  }
  testElement = null;
}

module.exports = setInnerHTML;
}).apply(this, arguments);

},{"./DOMNamespaces":253,"./createMicrosoftUnsafeLocalFunction":343,"fbjs/lib/ExecutionEnvironment":40}],366:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/setTextContent.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var setInnerHTML = require('./setInnerHTML');

/**
 * Set the textContent property of a node, ensuring that whitespace is preserved
 * even in IE8. innerText is a poor substitute for textContent and, among many
 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
 * as it should.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

if (ExecutionEnvironment.canUseDOM) {
  if (!('textContent' in document.documentElement)) {
    setTextContent = function (node, text) {
      if (node.nodeType === 3) {
        node.nodeValue = text;
        return;
      }
      setInnerHTML(node, escapeTextContentForBrowser(text));
    };
  }
}

module.exports = setTextContent;
}).apply(this, arguments);

},{"./escapeTextContentForBrowser":345,"./setInnerHTML":365,"fbjs/lib/ExecutionEnvironment":40}],367:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/shouldUpdateReactComponent.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

/**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */

function shouldUpdateReactComponent(prevElement, nextElement) {
  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;
  if (prevEmpty || nextEmpty) {
    return prevEmpty === nextEmpty;
  }

  var prevType = typeof prevElement;
  var nextType = typeof nextElement;
  if (prevType === 'string' || prevType === 'number') {
    return nextType === 'string' || nextType === 'number';
  } else {
    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
  }
}

module.exports = shouldUpdateReactComponent;
}).apply(this, arguments);

},{}],368:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/traverseAllChildren.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var REACT_ELEMENT_TYPE = require('./ReactElementSymbol');

var getIteratorFn = require('./getIteratorFn');
var invariant = require('fbjs/lib/invariant');
var KeyEscapeUtils = require('./KeyEscapeUtils');
var warning = require('fbjs/lib/warning');

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (process.env.NODE_ENV !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (process.env.NODE_ENV !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./KeyEscapeUtils":265,"./ReactElementSymbol":294,"./getIteratorFn":354,"./reactProdInvariant":363,"_process":235,"fbjs/lib/invariant":54,"fbjs/lib/warning":61,"react/lib/ReactCurrentOwner":384}],369:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-dom/lib/validateDOMNesting.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _assign = require('object-assign');

var emptyFunction = require('fbjs/lib/emptyFunction');
var warning = require('fbjs/lib/warning');

var validateDOMNesting = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo = function (oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  /**
   * Given a ReactCompositeComponent instance, return a list of its recursive
   * owners, starting at the root and ending with the instance itself.
   */
  var findOwnerStack = function (instance) {
    if (!instance) {
      return [];
    }

    var stack = [];
    do {
      stack.push(instance);
    } while (instance = instance._currentElement._owner);
    stack.reverse();
    return stack;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var problematic = invalidParent || invalidAncestor;

    if (problematic) {
      var ancestorTag = problematic.tag;
      var ancestorInstance = problematic.instance;

      var childOwner = childInstance && childInstance._currentElement._owner;
      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

      var childOwners = findOwnerStack(childOwner);
      var ancestorOwners = findOwnerStack(ancestorOwner);

      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
      var i;

      var deepestCommon = -1;
      for (i = 0; i < minStackLen; i++) {
        if (childOwners[i] === ancestorOwners[i]) {
          deepestCommon = i;
        } else {
          break;
        }
      }

      var UNKNOWN = '(unknown)';
      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ownerInfo = [].concat(
      // If the parent and child instances have a common owner ancestor, start
      // with that -- otherwise we just start with the parent's owners.
      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
      // If we're warning about an invalid (non-parent) ancestry, add '...'
      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
      if (didWarn[warnKey]) {
        return;
      }
      didWarn[warnKey] = true;

      var tagDisplayName = childTag;
      var whitespaceInfo = '';
      if (childTag === '#text') {
        if (/\S/.test(childText)) {
          tagDisplayName = 'Text nodes';
        } else {
          tagDisplayName = 'Whitespace text nodes';
          whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
        }
      } else {
        tagDisplayName = '<' + childTag + '>';
      }

      if (invalidParent) {
        var info = '';
        if (ancestorTag === 'table' && childTag === 'tr') {
          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
        }
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
      } else {
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
      }
    }
  };

  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

  // For testing
  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;
    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
  };
}

module.exports = validateDOMNesting;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"_process":235,"fbjs/lib/emptyFunction":46,"fbjs/lib/warning":61,"object-assign":232}],370:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-proxy/modules/bindAutoBindMethods.js", module);
(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = bindAutoBindMethods;
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of React source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * Original:
 * https://github.com/facebook/react/blob/6508b1ad273a6f371e8d90ae676e5390199461b4/src/isomorphic/classic/class/ReactClass.js#L650-L713
 */

function bindAutoBindMethod(component, method) {
  var boundMethod = method.bind(component);

  boundMethod.__reactBoundContext = component;
  boundMethod.__reactBoundMethod = method;
  boundMethod.__reactBoundArguments = null;

  var componentName = component.constructor.displayName,
      _bind = boundMethod.bind;

  boundMethod.bind = function (newThis) {
    var args = Array.prototype.slice.call(arguments, 1);
    if (newThis !== component && newThis !== null) {
      console.warn('bind(): React component methods may only be bound to the ' + 'component instance. See ' + componentName);
    } else if (!args.length) {
      console.warn('bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See ' + componentName);
      return boundMethod;
    }

    var reboundMethod = _bind.apply(boundMethod, arguments);
    reboundMethod.__reactBoundContext = component;
    reboundMethod.__reactBoundMethod = method;
    reboundMethod.__reactBoundArguments = args;

    return reboundMethod;
  };

  return boundMethod;
}

function bindAutoBindMethodsFromMap(component) {
  for (var autoBindKey in component.__reactAutoBindMap) {
    if (!component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
      return;
    }

    // Tweak: skip methods that are already bound.
    // This is to preserve method reference in case it is used
    // as a subscription handler that needs to be detached later.
    if (component.hasOwnProperty(autoBindKey) && component[autoBindKey].__reactBoundContext === component) {
      continue;
    }

    var method = component.__reactAutoBindMap[autoBindKey];
    component[autoBindKey] = bindAutoBindMethod(component, method);
  }
}

function bindAutoBindMethods(component) {
  if (component.__reactAutoBindPairs) {
    bindAutoBindMethodsFromArray(component);
  } else if (component.__reactAutoBindMap) {
    bindAutoBindMethodsFromMap(component);
  }
}

function bindAutoBindMethodsFromArray(component) {
  var pairs = component.__reactAutoBindPairs;

  if (!pairs) {
    return;
  }

  for (var i = 0; i < pairs.length; i += 2) {
    var autoBindKey = pairs[i];

    if (component.hasOwnProperty(autoBindKey) && component[autoBindKey].__reactBoundContext === component) {
      continue;
    }

    var method = pairs[i + 1];

    component[autoBindKey] = bindAutoBindMethod(component, method);
  }
}
}).apply(this, arguments);

},{}],371:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-proxy/modules/createClassProxy.js", module);
(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.default = proxyClass;
exports.default = createClassProxy;

var _find = require('lodash/find');

var _find2 = _interopRequireDefault(_find);

var _createPrototypeProxy = require('./createPrototypeProxy');

var _createPrototypeProxy2 = _interopRequireDefault(_createPrototypeProxy);

var _bindAutoBindMethods = require('./bindAutoBindMethods');

var _bindAutoBindMethods2 = _interopRequireDefault(_bindAutoBindMethods);

var _deleteUnknownAutoBindMethods = require('./deleteUnknownAutoBindMethods');

var _deleteUnknownAutoBindMethods2 = _interopRequireDefault(_deleteUnknownAutoBindMethods);

var _supportsProtoAssignment = require('./supportsProtoAssignment');

var _supportsProtoAssignment2 = _interopRequireDefault(_supportsProtoAssignment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var RESERVED_STATICS = ['length', 'name', 'arguments', 'caller', 'prototype', 'toString'];

function isEqualDescriptor(a, b) {
  if (!a && !b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  for (var key in a) {
    if (a[key] !== b[key]) {
      return false;
    }
  }
  return true;
}

// This was originally a WeakMap but we had issues with React Native:
// https://github.com/gaearon/react-proxy/issues/50#issuecomment-192928066
var allProxies = [];
function findProxy(Component) {
  var pair = (0, _find2.default)(allProxies, function (_ref) {
    var _ref2 = _slicedToArray(_ref, 1);

    var key = _ref2[0];
    return key === Component;
  });
  return pair ? pair[1] : null;
}
function addProxy(Component, proxy) {
  allProxies.push([Component, proxy]);
}

function proxyClass(InitialComponent) {
  // Prevent double wrapping.
  // Given a proxy class, return the existing proxy managing it.
  var existingProxy = findProxy(InitialComponent);
  if (existingProxy) {
    return existingProxy;
  }

  var prototypeProxy = (0, _createPrototypeProxy2.default)();
  var CurrentComponent = undefined;
  var ProxyComponent = undefined;

  var staticDescriptors = {};
  function wasStaticModifiedByUser(key) {
    // Compare the descriptor with the one we previously set ourselves.
    var currentDescriptor = Object.getOwnPropertyDescriptor(ProxyComponent, key);
    return !isEqualDescriptor(staticDescriptors[key], currentDescriptor);
  }

  function instantiate(factory, context, params) {
    var component = factory();

    try {
      return component.apply(context, params);
    } catch (err) {
      (function () {
        // Native ES6 class instantiation
        var instance = new (Function.prototype.bind.apply(component, [null].concat(_toConsumableArray(params))))();

        Object.keys(instance).forEach(function (key) {
          if (RESERVED_STATICS.indexOf(key) > -1) {
            return;
          }
          context[key] = instance[key];
        });
      })();
    }
  }

  try {
    // Create a proxy constructor with matching name
    ProxyComponent = new Function('factory', 'instantiate', 'return function ' + (InitialComponent.name || 'ProxyComponent') + '() {\n         return instantiate(factory, this, arguments);\n      }')(function () {
      return CurrentComponent;
    }, instantiate);
  } catch (err) {
    // Some environments may forbid dynamic evaluation
    ProxyComponent = function ProxyComponent() {
      return instantiate(function () {
        return CurrentComponent;
      }, this, arguments);
    };
  }

  // Point proxy constructor to the proxy prototype
  ProxyComponent.prototype = prototypeProxy.get();

  // Proxy toString() to the current constructor
  ProxyComponent.toString = function toString() {
    return CurrentComponent.toString();
  };

  function update(NextComponent) {
    if (typeof NextComponent !== 'function') {
      throw new Error('Expected a constructor.');
    }

    // Prevent proxy cycles
    var existingProxy = findProxy(NextComponent);
    if (existingProxy) {
      return update(existingProxy.__getCurrent());
    }

    // Save the next constructor so we call it
    CurrentComponent = NextComponent;

    // Update the prototype proxy with new methods
    var mountedInstances = prototypeProxy.update(NextComponent.prototype);

    // Set up the constructor property so accessing the statics work
    ProxyComponent.prototype.constructor = ProxyComponent;

    // Set up the same prototype for inherited statics
    ProxyComponent.__proto__ = NextComponent.__proto__;

    // Copy static methods and properties
    Object.getOwnPropertyNames(NextComponent).forEach(function (key) {
      if (RESERVED_STATICS.indexOf(key) > -1) {
        return;
      }

      var staticDescriptor = _extends({}, Object.getOwnPropertyDescriptor(NextComponent, key), {
        configurable: true
      });

      // Copy static unless user has redefined it at runtime
      if (!wasStaticModifiedByUser(key)) {
        Object.defineProperty(ProxyComponent, key, staticDescriptor);
        staticDescriptors[key] = staticDescriptor;
      }
    });

    // Remove old static methods and properties
    Object.getOwnPropertyNames(ProxyComponent).forEach(function (key) {
      if (RESERVED_STATICS.indexOf(key) > -1) {
        return;
      }

      // Skip statics that exist on the next class
      if (NextComponent.hasOwnProperty(key)) {
        return;
      }

      // Skip non-configurable statics
      var descriptor = Object.getOwnPropertyDescriptor(ProxyComponent, key);
      if (descriptor && !descriptor.configurable) {
        return;
      }

      // Delete static unless user has redefined it at runtime
      if (!wasStaticModifiedByUser(key)) {
        delete ProxyComponent[key];
        delete staticDescriptors[key];
      }
    });

    // Try to infer displayName
    ProxyComponent.displayName = NextComponent.displayName || NextComponent.name;

    // We might have added new methods that need to be auto-bound
    mountedInstances.forEach(_bindAutoBindMethods2.default);
    mountedInstances.forEach(_deleteUnknownAutoBindMethods2.default);

    // Let the user take care of redrawing
    return mountedInstances;
  };

  function get() {
    return ProxyComponent;
  }

  function getCurrent() {
    return CurrentComponent;
  }

  update(InitialComponent);

  var proxy = { get: get, update: update };
  addProxy(ProxyComponent, proxy);

  Object.defineProperty(proxy, '__getCurrent', {
    configurable: false,
    writable: false,
    enumerable: false,
    value: getCurrent
  });

  return proxy;
}

function createFallback(Component) {
  var CurrentComponent = Component;

  return {
    get: function get() {
      return CurrentComponent;
    },
    update: function update(NextComponent) {
      CurrentComponent = NextComponent;
    }
  };
}

function createClassProxy(Component) {
  return Component.__proto__ && (0, _supportsProtoAssignment2.default)() ? proxyClass(Component) : createFallback(Component);
}
}).apply(this, arguments);

},{"./bindAutoBindMethods":370,"./createPrototypeProxy":372,"./deleteUnknownAutoBindMethods":373,"./supportsProtoAssignment":375,"lodash/find":200}],372:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-proxy/modules/createPrototypeProxy.js", module);
(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createPrototypeProxy;

var _assign = require('lodash/assign');

var _assign2 = _interopRequireDefault(_assign);

var _difference = require('lodash/difference');

var _difference2 = _interopRequireDefault(_difference);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createPrototypeProxy() {
  var proxy = {};
  var current = null;
  var mountedInstances = [];

  /**
   * Creates a proxied toString() method pointing to the current version's toString().
   */
  function proxyToString(name) {
    // Wrap to always call the current version
    return function toString() {
      if (typeof current[name] === 'function') {
        return current[name].toString();
      } else {
        return '<method was deleted>';
      }
    };
  }

  /**
   * Creates a proxied method that calls the current version, whenever available.
   */
  function proxyMethod(name) {
    // Wrap to always call the current version
    var proxiedMethod = function proxiedMethod() {
      if (typeof current[name] === 'function') {
        return current[name].apply(this, arguments);
      }
    };

    // Copy properties of the original function, if any
    (0, _assign2.default)(proxiedMethod, current[name]);
    proxiedMethod.toString = proxyToString(name);

    return proxiedMethod;
  }

  /**
   * Augments the original componentDidMount with instance tracking.
   */
  function proxiedComponentDidMount() {
    mountedInstances.push(this);
    if (typeof current.componentDidMount === 'function') {
      return current.componentDidMount.apply(this, arguments);
    }
  }
  proxiedComponentDidMount.toString = proxyToString('componentDidMount');

  /**
   * Augments the original componentWillUnmount with instance tracking.
   */
  function proxiedComponentWillUnmount() {
    var index = mountedInstances.indexOf(this);
    // Unless we're in a weird environment without componentDidMount
    if (index !== -1) {
      mountedInstances.splice(index, 1);
    }
    if (typeof current.componentWillUnmount === 'function') {
      return current.componentWillUnmount.apply(this, arguments);
    }
  }
  proxiedComponentWillUnmount.toString = proxyToString('componentWillUnmount');

  /**
   * Defines a property on the proxy.
   */
  function defineProxyProperty(name, descriptor) {
    Object.defineProperty(proxy, name, descriptor);
  }

  /**
   * Defines a property, attempting to keep the original descriptor configuration.
   */
  function defineProxyPropertyWithValue(name, value) {
    var _ref = Object.getOwnPropertyDescriptor(current, name) || {};

    var _ref$enumerable = _ref.enumerable;
    var enumerable = _ref$enumerable === undefined ? false : _ref$enumerable;
    var _ref$writable = _ref.writable;
    var writable = _ref$writable === undefined ? true : _ref$writable;


    defineProxyProperty(name, {
      configurable: true,
      enumerable: enumerable,
      writable: writable,
      value: value
    });
  }

  /**
   * Creates an auto-bind map mimicking the original map, but directed at proxy.
   */
  function createAutoBindMap() {
    if (!current.__reactAutoBindMap) {
      return;
    }

    var __reactAutoBindMap = {};
    for (var name in current.__reactAutoBindMap) {
      if (typeof proxy[name] === 'function' && current.__reactAutoBindMap.hasOwnProperty(name)) {
        __reactAutoBindMap[name] = proxy[name];
      }
    }

    return __reactAutoBindMap;
  }

  /**
   * Creates an auto-bind map mimicking the original map, but directed at proxy.
   */
  function createAutoBindPairs() {
    var __reactAutoBindPairs = [];

    for (var i = 0; i < current.__reactAutoBindPairs.length; i += 2) {
      var name = current.__reactAutoBindPairs[i];
      var method = proxy[name];

      if (typeof method === 'function') {
        __reactAutoBindPairs.push(name, method);
      }
    }

    return __reactAutoBindPairs;
  }

  /**
   * Applies the updated prototype.
   */
  function update(next) {
    // Save current source of truth
    current = next;

    // Find changed property names
    var currentNames = Object.getOwnPropertyNames(current);
    var previousName = Object.getOwnPropertyNames(proxy);
    var removedNames = (0, _difference2.default)(previousName, currentNames);

    // Remove properties and methods that are no longer there
    removedNames.forEach(function (name) {
      delete proxy[name];
    });

    // Copy every descriptor
    currentNames.forEach(function (name) {
      var descriptor = Object.getOwnPropertyDescriptor(current, name);
      if (typeof descriptor.value === 'function') {
        // Functions require additional wrapping so they can be bound later
        defineProxyPropertyWithValue(name, proxyMethod(name));
      } else {
        // Other values can be copied directly
        defineProxyProperty(name, descriptor);
      }
    });

    // Track mounting and unmounting
    defineProxyPropertyWithValue('componentDidMount', proxiedComponentDidMount);
    defineProxyPropertyWithValue('componentWillUnmount', proxiedComponentWillUnmount);

    if (current.hasOwnProperty('__reactAutoBindMap')) {
      defineProxyPropertyWithValue('__reactAutoBindMap', createAutoBindMap());
    }

    if (current.hasOwnProperty('__reactAutoBindPairs')) {
      defineProxyPropertyWithValue('__reactAutoBindPairs', createAutoBindPairs());
    }

    // Set up the prototype chain
    proxy.__proto__ = next;

    return mountedInstances;
  }

  /**
   * Returns the up-to-date proxy prototype.
   */
  function get() {
    return proxy;
  }

  return {
    update: update,
    get: get
  };
};
}).apply(this, arguments);

},{"lodash/assign":195,"lodash/difference":197}],373:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-proxy/modules/deleteUnknownAutoBindMethods.js", module);
(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = deleteUnknownAutoBindMethods;
function shouldDeleteClassicInstanceMethod(component, name) {
  if (component.__reactAutoBindMap && component.__reactAutoBindMap.hasOwnProperty(name)) {
    // It's a known autobound function, keep it
    return false;
  }

  if (component.__reactAutoBindPairs && component.__reactAutoBindPairs.indexOf(name) >= 0) {
    // It's a known autobound function, keep it
    return false;
  }

  if (component[name].__reactBoundArguments !== null) {
    // It's a function bound to specific args, keep it
    return false;
  }

  // It's a cached bound method for a function
  // that was deleted by user, so we delete it from component.
  return true;
}

function shouldDeleteModernInstanceMethod(component, name) {
  var prototype = component.constructor.prototype;

  var prototypeDescriptor = Object.getOwnPropertyDescriptor(prototype, name);

  if (!prototypeDescriptor || !prototypeDescriptor.get) {
    // This is definitely not an autobinding getter
    return false;
  }

  if (prototypeDescriptor.get().length !== component[name].length) {
    // The length doesn't match, bail out
    return false;
  }

  // This seems like a method bound using an autobinding getter on the prototype
  // Hopefully we won't run into too many false positives.
  return true;
}

function shouldDeleteInstanceMethod(component, name) {
  var descriptor = Object.getOwnPropertyDescriptor(component, name);
  if (typeof descriptor.value !== 'function') {
    // Not a function, or something fancy: bail out
    return;
  }

  if (component.__reactAutoBindMap || component.__reactAutoBindPairs) {
    // Classic
    return shouldDeleteClassicInstanceMethod(component, name);
  } else {
    // Modern
    return shouldDeleteModernInstanceMethod(component, name);
  }
}

/**
 * Deletes autobound methods from the instance.
 *
 * For classic React classes, we only delete the methods that no longer exist in map.
 * This means the user actually deleted them in code.
 *
 * For modern classes, we delete methods that exist on prototype with the same length,
 * and which have getters on prototype, but are normal values on the instance.
 * This is usually an indication that an autobinding decorator is being used,
 * and the getter will re-generate the memoized handler on next access.
 */
function deleteUnknownAutoBindMethods(component) {
  var names = Object.getOwnPropertyNames(component);

  names.forEach(function (name) {
    if (shouldDeleteInstanceMethod(component, name)) {
      delete component[name];
    }
  });
}
}).apply(this, arguments);

},{}],374:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-proxy/modules/index.js", module);
(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getForceUpdate = exports.createProxy = undefined;

var _supportsProtoAssignment = require('./supportsProtoAssignment');

var _supportsProtoAssignment2 = _interopRequireDefault(_supportsProtoAssignment);

var _createClassProxy = require('./createClassProxy');

var _createClassProxy2 = _interopRequireDefault(_createClassProxy);

var _reactDeepForceUpdate = require('react-deep-force-update');

var _reactDeepForceUpdate2 = _interopRequireDefault(_reactDeepForceUpdate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

if (!(0, _supportsProtoAssignment2.default)()) {
  console.warn('This JavaScript environment does not support __proto__. ' + 'This means that react-proxy is unable to proxy React components. ' + 'Features that rely on react-proxy, such as react-transform-hmr, ' + 'will not function as expected.');
}

exports.createProxy = _createClassProxy2.default;
exports.getForceUpdate = _reactDeepForceUpdate2.default;
}).apply(this, arguments);

},{"./createClassProxy":371,"./supportsProtoAssignment":375,"react-deep-force-update":242}],375:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-proxy/modules/supportsProtoAssignment.js", module);
(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = supportsProtoAssignment;
var x = {};
var y = { supports: true };
try {
  x.__proto__ = y;
} catch (err) {}

function supportsProtoAssignment() {
  return x.supports || false;
};
}).apply(this, arguments);

},{}],376:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-transform-catch-errors/lib/index.js", module);
(function(){
'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = catchErrors;
function catchErrors(_ref) {
  var filename = _ref.filename;
  var components = _ref.components;
  var imports = _ref.imports;

  var _imports = _slicedToArray(imports, 3);

  var React = _imports[0];
  var ErrorReporter = _imports[1];
  var reporterOptions = _imports[2];

  if (!React || !React.Component) {
    throw new Error('imports[0] for react-transform-catch-errors does not look like React.');
  }
  if (typeof ErrorReporter !== 'function') {
    throw new Error('imports[1] for react-transform-catch-errors does not look like a React component.');
  }

  return function wrapToCatchErrors(ReactClass, componentId) {
    var originalRender = ReactClass.prototype.render;

    ReactClass.prototype.render = function tryRender() {
      try {
        return originalRender.apply(this, arguments);
      } catch (err) {
        setTimeout(function () {
          if (typeof console.reportErrorsAsExceptions !== 'undefined') {
            var prevReportErrorAsExceptions = console.reportErrorsAsExceptions;
            // We're in React Native. Don't throw.
            // Stop react-native from triggering its own error handler
            console.reportErrorsAsExceptions = false;
            // Log an error
            console.error(err);
            // Reactivate it so other errors are still handled
            console.reportErrorsAsExceptions = prevReportErrorAsExceptions;
          } else {
            throw err;
          }
        });

        return React.createElement(ErrorReporter, _extends({
          error: err,
          filename: filename
        }, reporterOptions));
      }
    };

    return ReactClass;
  };
}
}).apply(this, arguments);

},{}],377:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react-transform-hmr/lib/index.js", module);
(function(){
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

exports['default'] = proxyReactComponents;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _reactProxy = require('react-proxy');

var _globalWindow = require('global/window');

var _globalWindow2 = _interopRequireDefault(_globalWindow);

var componentProxies = undefined;
if (_globalWindow2['default'].__reactComponentProxies) {
  componentProxies = _globalWindow2['default'].__reactComponentProxies;
} else {
  componentProxies = {};
  Object.defineProperty(_globalWindow2['default'], '__reactComponentProxies', {
    configurable: true,
    enumerable: false,
    writable: false,
    value: componentProxies
  });
}

function proxyReactComponents(_ref) {
  var filename = _ref.filename;
  var components = _ref.components;
  var imports = _ref.imports;
  var locals = _ref.locals;

  var _imports = _slicedToArray(imports, 1);

  var React = _imports[0];

  var _locals = _slicedToArray(locals, 1);

  var hot = _locals[0].hot;

  if (!React.Component) {
    throw new Error('imports[0] for react-transform-hmr does not look like React.');
  }

  if (!hot || typeof hot.accept !== 'function') {
    throw new Error('locals[0] does not appear to be a `module` object with Hot Module ' + 'replacement API enabled. You should disable react-transform-hmr in ' + 'production by using `env` section in Babel configuration. See the ' + 'example in README: https://github.com/gaearon/react-transform-hmr');
  }

  if (Object.keys(components).some(function (key) {
    return !components[key].isInFunction;
  })) {
    hot.accept(function (err) {
      if (err) {
        console.warn('[React Transform HMR] There was an error updating ' + filename + ':');
        console.error(err);
      }
    });
  }

  var forceUpdate = (0, _reactProxy.getForceUpdate)(React);

  return function wrapWithProxy(ReactClass, uniqueId) {
    var _components$uniqueId = components[uniqueId];
    var _components$uniqueId$isInFunction = _components$uniqueId.isInFunction;
    var isInFunction = _components$uniqueId$isInFunction === undefined ? false : _components$uniqueId$isInFunction;
    var _components$uniqueId$displayName = _components$uniqueId.displayName;
    var displayName = _components$uniqueId$displayName === undefined ? uniqueId : _components$uniqueId$displayName;

    if (isInFunction) {
      return ReactClass;
    }

    var globalUniqueId = filename + '$' + uniqueId;
    if (componentProxies[globalUniqueId]) {
      (function () {
        console.info('[React Transform HMR] Patching ' + displayName);
        var instances = componentProxies[globalUniqueId].update(ReactClass);
        setTimeout(function () {
          return instances.forEach(forceUpdate);
        });
      })();
    } else {
      componentProxies[globalUniqueId] = (0, _reactProxy.createProxy)(ReactClass);
    }

    return componentProxies[globalUniqueId].get();
  };
}

module.exports = exports['default'];
}).apply(this, arguments);

},{"global/window":62,"react-proxy":374}],378:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/KeyEscapeUtils.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;
}).apply(this, arguments);

},{}],379:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/PooledClass.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./reactProdInvariant":401,"_process":235,"fbjs/lib/invariant":54}],380:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/React.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _assign = require('object-assign');

var ReactBaseClasses = require('./ReactBaseClasses');
var ReactChildren = require('./ReactChildren');
var ReactDOMFactories = require('./ReactDOMFactories');
var ReactElement = require('./ReactElement');
var ReactPropTypes = require('./ReactPropTypes');
var ReactVersion = require('./ReactVersion');

var createReactClass = require('./createClass');
var onlyChild = require('./onlyChild');

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if (process.env.NODE_ENV !== 'production') {
  var lowPriorityWarning = require('./lowPriorityWarning');
  var canDefineProperty = require('./canDefineProperty');
  var ReactElementValidator = require('./ReactElementValidator');
  var didWarnPropTypesDeprecated = false;
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var __spread = _assign;
var createMixin = function (mixin) {
  return mixin;
};

if (process.env.NODE_ENV !== 'production') {
  var warnedForSpread = false;
  var warnedForCreateMixin = false;
  __spread = function () {
    lowPriorityWarning(warnedForSpread, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.');
    warnedForSpread = true;
    return _assign.apply(null, arguments);
  };

  createMixin = function (mixin) {
    lowPriorityWarning(warnedForCreateMixin, 'React.createMixin is deprecated and should not be used. ' + 'In React v16.0, it will be removed. ' + 'You can use this mixin directly instead. ' + 'See https://fb.me/createmixin-was-never-implemented for more info.');
    warnedForCreateMixin = true;
    return mixin;
  };
}

var React = {
  // Modern

  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    toArray: ReactChildren.toArray,
    only: onlyChild
  },

  Component: ReactBaseClasses.Component,
  PureComponent: ReactBaseClasses.PureComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement.isValidElement,

  // Classic

  PropTypes: ReactPropTypes,
  createClass: createReactClass,
  createFactory: createFactory,
  createMixin: createMixin,

  // This looks DOM specific but these are actually isomorphic helpers
  // since they are just generating DOM strings.
  DOM: ReactDOMFactories,

  version: ReactVersion,

  // Deprecated hook for JSX spread, don't use this for anything.
  __spread: __spread
};

if (process.env.NODE_ENV !== 'production') {
  var warnedForCreateClass = false;
  if (canDefineProperty) {
    Object.defineProperty(React, 'PropTypes', {
      get: function () {
        lowPriorityWarning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated,' + ' and will be removed in  React v16.0.' + ' Use the latest available v15.* prop-types package from npm instead.' + ' For info on usage, compatibility, migration and more, see ' + 'https://fb.me/prop-types-docs');
        didWarnPropTypesDeprecated = true;
        return ReactPropTypes;
      }
    });

    Object.defineProperty(React, 'createClass', {
      get: function () {
        lowPriorityWarning(warnedForCreateClass, 'Accessing createClass via the main React package is deprecated,' + ' and will be removed in React v16.0.' + " Use a plain JavaScript class instead. If you're not yet " + 'ready to migrate, create-react-class v15.* is available ' + 'on npm as a temporary, drop-in replacement. ' + 'For more info see https://fb.me/react-create-class');
        warnedForCreateClass = true;
        return createReactClass;
      }
    });
  }

  // React.DOM factories are deprecated. Wrap these methods so that
  // invocations of the React.DOM namespace and alert users to switch
  // to the `react-dom-factories` package.
  React.DOM = {};
  var warnedForFactories = false;
  Object.keys(ReactDOMFactories).forEach(function (factory) {
    React.DOM[factory] = function () {
      if (!warnedForFactories) {
        lowPriorityWarning(false, 'Accessing factories like React.DOM.%s has been deprecated ' + 'and will be removed in v16.0+. Use the ' + 'react-dom-factories package instead. ' + ' Version 1.0 provides a drop-in replacement.' + ' For more info, see https://fb.me/react-dom-factories', factory);
        warnedForFactories = true;
      }
      return ReactDOMFactories[factory].apply(ReactDOMFactories, arguments);
    };
  });
}

module.exports = React;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactBaseClasses":381,"./ReactChildren":382,"./ReactDOMFactories":385,"./ReactElement":386,"./ReactElementValidator":388,"./ReactPropTypes":391,"./ReactVersion":393,"./canDefineProperty":394,"./createClass":396,"./lowPriorityWarning":399,"./onlyChild":400,"_process":235,"object-assign":232}],381:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/ReactBaseClasses.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');

var canDefineProperty = require('./canDefineProperty');
var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var lowPriorityWarning = require('./lowPriorityWarning');

/**
 * Base class helpers for the updating state of a component.
 */
function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

ReactComponent.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
ReactComponent.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
  this.updater.enqueueSetState(this, partialState);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'setState');
  }
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'forceUpdate');
  }
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
if (process.env.NODE_ENV !== 'production') {
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    if (canDefineProperty) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function () {
          lowPriorityWarning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

/**
 * Base class helpers for the updating state of a component.
 */
function ReactPureComponent(props, context, updater) {
  // Duplicated from ReactComponent.
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

function ComponentDummy() {}
ComponentDummy.prototype = ReactComponent.prototype;
ReactPureComponent.prototype = new ComponentDummy();
ReactPureComponent.prototype.constructor = ReactPureComponent;
// Avoid an extra prototype jump for these methods.
_assign(ReactPureComponent.prototype, ReactComponent.prototype);
ReactPureComponent.prototype.isPureReactComponent = true;

module.exports = {
  Component: ReactComponent,
  PureComponent: ReactPureComponent
};
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactNoopUpdateQueue":389,"./canDefineProperty":394,"./lowPriorityWarning":399,"./reactProdInvariant":401,"_process":235,"fbjs/lib/emptyObject":47,"fbjs/lib/invariant":54,"object-assign":232}],382:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/ReactChildren.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var PooledClass = require('./PooledClass');
var ReactElement = require('./ReactElement');

var emptyFunction = require('fbjs/lib/emptyFunction');
var traverseAllChildren = require('./traverseAllChildren');

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var fourArgumentPooler = PooledClass.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement.isValidElement(mappedChild)) {
      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

module.exports = ReactChildren;
}).apply(this, arguments);

},{"./PooledClass":379,"./ReactElement":386,"./traverseAllChildren":402,"fbjs/lib/emptyFunction":46}],383:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/ReactComponentTreeHook.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2016-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('./ReactCurrentOwner');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

function isNative(fn) {
  // Based on isNative() from Lodash
  var funcToString = Function.prototype.toString;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var reIsNative = RegExp('^' + funcToString
  // Take an example native function source for comparison
  .call(hasOwnProperty
  // Strip regex characters so we can use it for regex
  ).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&'
  // Remove hasOwnProperty from the template to make it generic
  ).replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
  try {
    var source = funcToString.call(fn);
    return reIsNative.test(source);
  } catch (err) {
    return false;
  }
}

var canUseCollections =
// Array.from
typeof Array.from === 'function' &&
// Map
typeof Map === 'function' && isNative(Map) &&
// Map.prototype.keys
Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
// Set
typeof Set === 'function' && isNative(Set) &&
// Set.prototype.keys
Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

var setItem;
var getItem;
var removeItem;
var getItemIDs;
var addRoot;
var removeRoot;
var getRootIDs;

if (canUseCollections) {
  var itemMap = new Map();
  var rootIDSet = new Set();

  setItem = function (id, item) {
    itemMap.set(id, item);
  };
  getItem = function (id) {
    return itemMap.get(id);
  };
  removeItem = function (id) {
    itemMap['delete'](id);
  };
  getItemIDs = function () {
    return Array.from(itemMap.keys());
  };

  addRoot = function (id) {
    rootIDSet.add(id);
  };
  removeRoot = function (id) {
    rootIDSet['delete'](id);
  };
  getRootIDs = function () {
    return Array.from(rootIDSet.keys());
  };
} else {
  var itemByKey = {};
  var rootByKey = {};

  // Use non-numeric keys to prevent V8 performance issues:
  // https://github.com/facebook/react/pull/7232
  var getKeyFromID = function (id) {
    return '.' + id;
  };
  var getIDFromKey = function (key) {
    return parseInt(key.substr(1), 10);
  };

  setItem = function (id, item) {
    var key = getKeyFromID(id);
    itemByKey[key] = item;
  };
  getItem = function (id) {
    var key = getKeyFromID(id);
    return itemByKey[key];
  };
  removeItem = function (id) {
    var key = getKeyFromID(id);
    delete itemByKey[key];
  };
  getItemIDs = function () {
    return Object.keys(itemByKey).map(getIDFromKey);
  };

  addRoot = function (id) {
    var key = getKeyFromID(id);
    rootByKey[key] = true;
  };
  removeRoot = function (id) {
    var key = getKeyFromID(id);
    delete rootByKey[key];
  };
  getRootIDs = function () {
    return Object.keys(rootByKey).map(getIDFromKey);
  };
}

var unmountedIDs = [];

function purgeDeep(id) {
  var item = getItem(id);
  if (item) {
    var childIDs = item.childIDs;

    removeItem(id);
    childIDs.forEach(purgeDeep);
  }
}

function describeComponentFrame(name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
}

function getDisplayName(element) {
  if (element == null) {
    return '#empty';
  } else if (typeof element === 'string' || typeof element === 'number') {
    return '#text';
  } else if (typeof element.type === 'string') {
    return element.type;
  } else {
    return element.type.displayName || element.type.name || 'Unknown';
  }
}

function describeID(id) {
  var name = ReactComponentTreeHook.getDisplayName(id);
  var element = ReactComponentTreeHook.getElement(id);
  var ownerID = ReactComponentTreeHook.getOwnerID(id);
  var ownerName;
  if (ownerID) {
    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
  }
  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
  return describeComponentFrame(name, element && element._source, ownerName);
}

var ReactComponentTreeHook = {
  onSetChildren: function (id, nextChildIDs) {
    var item = getItem(id);
    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.childIDs = nextChildIDs;

    for (var i = 0; i < nextChildIDs.length; i++) {
      var nextChildID = nextChildIDs[i];
      var nextChild = getItem(nextChildID);
      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
      if (nextChild.parentID == null) {
        nextChild.parentID = id;
        // TODO: This shouldn't be necessary but mounting a new root during in
        // componentWillMount currently causes not-yet-mounted components to
        // be purged from our tree data so their parent id is missing.
      }
      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
    }
  },
  onBeforeMountComponent: function (id, element, parentID) {
    var item = {
      element: element,
      parentID: parentID,
      text: null,
      childIDs: [],
      isMounted: false,
      updateCount: 0
    };
    setItem(id, item);
  },
  onBeforeUpdateComponent: function (id, element) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.element = element;
  },
  onMountComponent: function (id) {
    var item = getItem(id);
    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.isMounted = true;
    var isRoot = item.parentID === 0;
    if (isRoot) {
      addRoot(id);
    }
  },
  onUpdateComponent: function (id) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.updateCount++;
  },
  onUnmountComponent: function (id) {
    var item = getItem(id);
    if (item) {
      // We need to check if it exists.
      // `item` might not exist if it is inside an error boundary, and a sibling
      // error boundary child threw while mounting. Then this instance never
      // got a chance to mount, but it still gets an unmounting event during
      // the error boundary cleanup.
      item.isMounted = false;
      var isRoot = item.parentID === 0;
      if (isRoot) {
        removeRoot(id);
      }
    }
    unmountedIDs.push(id);
  },
  purgeUnmountedComponents: function () {
    if (ReactComponentTreeHook._preventPurging) {
      // Should only be used for testing.
      return;
    }

    for (var i = 0; i < unmountedIDs.length; i++) {
      var id = unmountedIDs[i];
      purgeDeep(id);
    }
    unmountedIDs.length = 0;
  },
  isMounted: function (id) {
    var item = getItem(id);
    return item ? item.isMounted : false;
  },
  getCurrentStackAddendum: function (topElement) {
    var info = '';
    if (topElement) {
      var name = getDisplayName(topElement);
      var owner = topElement._owner;
      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
    }

    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    info += ReactComponentTreeHook.getStackAddendumByID(id);
    return info;
  },
  getStackAddendumByID: function (id) {
    var info = '';
    while (id) {
      info += describeID(id);
      id = ReactComponentTreeHook.getParentID(id);
    }
    return info;
  },
  getChildIDs: function (id) {
    var item = getItem(id);
    return item ? item.childIDs : [];
  },
  getDisplayName: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element) {
      return null;
    }
    return getDisplayName(element);
  },
  getElement: function (id) {
    var item = getItem(id);
    return item ? item.element : null;
  },
  getOwnerID: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element || !element._owner) {
      return null;
    }
    return element._owner._debugID;
  },
  getParentID: function (id) {
    var item = getItem(id);
    return item ? item.parentID : null;
  },
  getSource: function (id) {
    var item = getItem(id);
    var element = item ? item.element : null;
    var source = element != null ? element._source : null;
    return source;
  },
  getText: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (typeof element === 'string') {
      return element;
    } else if (typeof element === 'number') {
      return '' + element;
    } else {
      return null;
    }
  },
  getUpdateCount: function (id) {
    var item = getItem(id);
    return item ? item.updateCount : 0;
  },


  getRootIDs: getRootIDs,
  getRegisteredIDs: getItemIDs,

  pushNonStandardWarningStack: function (isCreatingElement, currentSource) {
    if (typeof console.reactStack !== 'function') {
      return;
    }

    var stack = [];
    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    try {
      if (isCreatingElement) {
        stack.push({
          name: id ? ReactComponentTreeHook.getDisplayName(id) : null,
          fileName: currentSource ? currentSource.fileName : null,
          lineNumber: currentSource ? currentSource.lineNumber : null
        });
      }

      while (id) {
        var element = ReactComponentTreeHook.getElement(id);
        var parentID = ReactComponentTreeHook.getParentID(id);
        var ownerID = ReactComponentTreeHook.getOwnerID(id);
        var ownerName = ownerID ? ReactComponentTreeHook.getDisplayName(ownerID) : null;
        var source = element && element._source;
        stack.push({
          name: ownerName,
          fileName: source ? source.fileName : null,
          lineNumber: source ? source.lineNumber : null
        });
        id = parentID;
      }
    } catch (err) {
      // Internal state is messed up.
      // Stop building the stack (it's just a nice to have).
    }

    console.reactStack(stack);
  },
  popNonStandardWarningStack: function () {
    if (typeof console.reactStackEnd !== 'function') {
      return;
    }
    console.reactStackEnd();
  }
};

module.exports = ReactComponentTreeHook;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactCurrentOwner":384,"./reactProdInvariant":401,"_process":235,"fbjs/lib/invariant":54,"fbjs/lib/warning":61}],384:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/ReactCurrentOwner.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

module.exports = ReactCurrentOwner;
}).apply(this, arguments);

},{}],385:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/ReactDOMFactories.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var ReactElement = require('./ReactElement');

/**
 * Create a factory that creates HTML tag elements.
 *
 * @private
 */
var createDOMFactory = ReactElement.createFactory;
if (process.env.NODE_ENV !== 'production') {
  var ReactElementValidator = require('./ReactElementValidator');
  createDOMFactory = ReactElementValidator.createFactory;
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 *
 * @public
 */
var ReactDOMFactories = {
  a: createDOMFactory('a'),
  abbr: createDOMFactory('abbr'),
  address: createDOMFactory('address'),
  area: createDOMFactory('area'),
  article: createDOMFactory('article'),
  aside: createDOMFactory('aside'),
  audio: createDOMFactory('audio'),
  b: createDOMFactory('b'),
  base: createDOMFactory('base'),
  bdi: createDOMFactory('bdi'),
  bdo: createDOMFactory('bdo'),
  big: createDOMFactory('big'),
  blockquote: createDOMFactory('blockquote'),
  body: createDOMFactory('body'),
  br: createDOMFactory('br'),
  button: createDOMFactory('button'),
  canvas: createDOMFactory('canvas'),
  caption: createDOMFactory('caption'),
  cite: createDOMFactory('cite'),
  code: createDOMFactory('code'),
  col: createDOMFactory('col'),
  colgroup: createDOMFactory('colgroup'),
  data: createDOMFactory('data'),
  datalist: createDOMFactory('datalist'),
  dd: createDOMFactory('dd'),
  del: createDOMFactory('del'),
  details: createDOMFactory('details'),
  dfn: createDOMFactory('dfn'),
  dialog: createDOMFactory('dialog'),
  div: createDOMFactory('div'),
  dl: createDOMFactory('dl'),
  dt: createDOMFactory('dt'),
  em: createDOMFactory('em'),
  embed: createDOMFactory('embed'),
  fieldset: createDOMFactory('fieldset'),
  figcaption: createDOMFactory('figcaption'),
  figure: createDOMFactory('figure'),
  footer: createDOMFactory('footer'),
  form: createDOMFactory('form'),
  h1: createDOMFactory('h1'),
  h2: createDOMFactory('h2'),
  h3: createDOMFactory('h3'),
  h4: createDOMFactory('h4'),
  h5: createDOMFactory('h5'),
  h6: createDOMFactory('h6'),
  head: createDOMFactory('head'),
  header: createDOMFactory('header'),
  hgroup: createDOMFactory('hgroup'),
  hr: createDOMFactory('hr'),
  html: createDOMFactory('html'),
  i: createDOMFactory('i'),
  iframe: createDOMFactory('iframe'),
  img: createDOMFactory('img'),
  input: createDOMFactory('input'),
  ins: createDOMFactory('ins'),
  kbd: createDOMFactory('kbd'),
  keygen: createDOMFactory('keygen'),
  label: createDOMFactory('label'),
  legend: createDOMFactory('legend'),
  li: createDOMFactory('li'),
  link: createDOMFactory('link'),
  main: createDOMFactory('main'),
  map: createDOMFactory('map'),
  mark: createDOMFactory('mark'),
  menu: createDOMFactory('menu'),
  menuitem: createDOMFactory('menuitem'),
  meta: createDOMFactory('meta'),
  meter: createDOMFactory('meter'),
  nav: createDOMFactory('nav'),
  noscript: createDOMFactory('noscript'),
  object: createDOMFactory('object'),
  ol: createDOMFactory('ol'),
  optgroup: createDOMFactory('optgroup'),
  option: createDOMFactory('option'),
  output: createDOMFactory('output'),
  p: createDOMFactory('p'),
  param: createDOMFactory('param'),
  picture: createDOMFactory('picture'),
  pre: createDOMFactory('pre'),
  progress: createDOMFactory('progress'),
  q: createDOMFactory('q'),
  rp: createDOMFactory('rp'),
  rt: createDOMFactory('rt'),
  ruby: createDOMFactory('ruby'),
  s: createDOMFactory('s'),
  samp: createDOMFactory('samp'),
  script: createDOMFactory('script'),
  section: createDOMFactory('section'),
  select: createDOMFactory('select'),
  small: createDOMFactory('small'),
  source: createDOMFactory('source'),
  span: createDOMFactory('span'),
  strong: createDOMFactory('strong'),
  style: createDOMFactory('style'),
  sub: createDOMFactory('sub'),
  summary: createDOMFactory('summary'),
  sup: createDOMFactory('sup'),
  table: createDOMFactory('table'),
  tbody: createDOMFactory('tbody'),
  td: createDOMFactory('td'),
  textarea: createDOMFactory('textarea'),
  tfoot: createDOMFactory('tfoot'),
  th: createDOMFactory('th'),
  thead: createDOMFactory('thead'),
  time: createDOMFactory('time'),
  title: createDOMFactory('title'),
  tr: createDOMFactory('tr'),
  track: createDOMFactory('track'),
  u: createDOMFactory('u'),
  ul: createDOMFactory('ul'),
  'var': createDOMFactory('var'),
  video: createDOMFactory('video'),
  wbr: createDOMFactory('wbr'),

  // SVG
  circle: createDOMFactory('circle'),
  clipPath: createDOMFactory('clipPath'),
  defs: createDOMFactory('defs'),
  ellipse: createDOMFactory('ellipse'),
  g: createDOMFactory('g'),
  image: createDOMFactory('image'),
  line: createDOMFactory('line'),
  linearGradient: createDOMFactory('linearGradient'),
  mask: createDOMFactory('mask'),
  path: createDOMFactory('path'),
  pattern: createDOMFactory('pattern'),
  polygon: createDOMFactory('polygon'),
  polyline: createDOMFactory('polyline'),
  radialGradient: createDOMFactory('radialGradient'),
  rect: createDOMFactory('rect'),
  stop: createDOMFactory('stop'),
  svg: createDOMFactory('svg'),
  text: createDOMFactory('text'),
  tspan: createDOMFactory('tspan')
};

module.exports = ReactDOMFactories;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactElement":386,"./ReactElementValidator":388,"_process":235}],386:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/ReactElement.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _assign = require('object-assign');

var ReactCurrentOwner = require('./ReactCurrentOwner');

var warning = require('fbjs/lib/warning');
var canDefineProperty = require('./canDefineProperty');
var hasOwnProperty = Object.prototype.hasOwnProperty;

var REACT_ELEMENT_TYPE = require('./ReactElementSymbol');

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown, specialPropRefWarningShown;

function hasValidRef(config) {
  if (process.env.NODE_ENV !== 'production') {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  if (process.env.NODE_ENV !== 'production') {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allow us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  if (process.env.NODE_ENV !== 'production') {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    if (canDefineProperty) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });
      // self and source are DEV only properties.
      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });
      // Two elements created in two different places should be considered
      // equal for testing purposes and therefore we hide it from enumeration.
      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
 */
ReactElement.createElement = function (type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    if (process.env.NODE_ENV !== 'production') {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  if (process.env.NODE_ENV !== 'production') {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
};

/**
 * Return a function that produces ReactElements of a given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
 */
ReactElement.createFactory = function (type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  // Legacy hook TODO: Warn if this is accessed
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
 */
ReactElement.cloneElement = function (element, config, children) {
  var propName;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

/**
 * Verifies the object is a ReactElement.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
};

module.exports = ReactElement;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactCurrentOwner":384,"./ReactElementSymbol":387,"./canDefineProperty":394,"_process":235,"fbjs/lib/warning":61,"object-assign":232}],387:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/ReactElementSymbol.js", module);
(function(){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;
}).apply(this, arguments);

},{}],388:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/ReactElementValidator.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

'use strict';

var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactComponentTreeHook = require('./ReactComponentTreeHook');
var ReactElement = require('./ReactElement');

var checkReactTypeSpec = require('./checkReactTypeSpec');

var canDefineProperty = require('./canDefineProperty');
var getIteratorFn = require('./getIteratorFn');
var warning = require('fbjs/lib/warning');
var lowPriorityWarning = require('./lowPriorityWarning');

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = ReactCurrentOwner.current.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

function getSourceInfoErrorAddendum(elementProps) {
  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
    var source = elementProps.__source;
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return ' Check your code at ' + fileName + ':' + lineNumber + '.';
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = ' Check the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (memoizer[currentComponentErrorInfo]) {
    return;
  }
  memoizer[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
  }

  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    // Entry iterators provide implicit keys.
    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  if (componentClass.propTypes) {
    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

var ReactElementValidator = {
  createElement: function (type, props, children) {
    var validType = typeof type === 'string' || typeof type === 'function';
    // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.
    if (!validType) {
      if (typeof type !== 'function' && typeof type !== 'string') {
        var info = '';
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + "it's defined in.";
        }

        var sourceInfo = getSourceInfoErrorAddendum(props);
        if (sourceInfo) {
          info += sourceInfo;
        } else {
          info += getDeclarationErrorAddendum();
        }

        info += ReactComponentTreeHook.getCurrentStackAddendum();

        var currentSource = props !== null && props !== undefined && props.__source !== undefined ? props.__source : null;
        ReactComponentTreeHook.pushNonStandardWarningStack(true, currentSource);
        process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
        ReactComponentTreeHook.popNonStandardWarningStack();
      }
    }

    var element = ReactElement.createElement.apply(this, arguments);

    // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.
    if (element == null) {
      return element;
    }

    // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)
    if (validType) {
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], type);
      }
    }

    validatePropTypes(element);

    return element;
  },

  createFactory: function (type) {
    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
    // Legacy hook TODO: Warn if this is accessed
    validatedFactory.type = type;

    if (process.env.NODE_ENV !== 'production') {
      if (canDefineProperty) {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function () {
            lowPriorityWarning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
    }

    return validatedFactory;
  },

  cloneElement: function (element, props, children) {
    var newElement = ReactElement.cloneElement.apply(this, arguments);
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    return newElement;
  }
};

module.exports = ReactElementValidator;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactComponentTreeHook":383,"./ReactCurrentOwner":384,"./ReactElement":386,"./canDefineProperty":394,"./checkReactTypeSpec":395,"./getIteratorFn":397,"./lowPriorityWarning":399,"_process":235,"fbjs/lib/warning":61}],389:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/ReactNoopUpdateQueue.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var warning = require('fbjs/lib/warning');

function warnNoop(publicInstance, callerName) {
  if (process.env.NODE_ENV !== 'production') {
    var constructor = publicInstance.constructor;
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback) {},

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    warnNoop(publicInstance, 'setState');
  }
};

module.exports = ReactNoopUpdateQueue;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"_process":235,"fbjs/lib/warning":61}],390:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/ReactPropTypeLocationNames.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var ReactPropTypeLocationNames = {};

if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"_process":235}],391:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/ReactPropTypes.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _require = require('./ReactElement'),
    isValidElement = _require.isValidElement;

var factory = require('prop-types/factory');

module.exports = factory(isValidElement);
}).apply(this, arguments);

},{"./ReactElement":386,"prop-types/factory":237}],392:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/ReactPropTypesSecret.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
}).apply(this, arguments);

},{}],393:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/ReactVersion.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

module.exports = '15.6.2';
}).apply(this, arguments);

},{}],394:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/canDefineProperty.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var canDefineProperty = false;
if (process.env.NODE_ENV !== 'production') {
  try {
    // $FlowFixMe https://github.com/facebook/flow/issues/285
    Object.defineProperty({}, 'x', { get: function () {} });
    canDefineProperty = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

module.exports = canDefineProperty;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"_process":235}],395:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/checkReactTypeSpec.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactPropTypesSecret = require('./ReactPropTypesSecret');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('./ReactComponentTreeHook');
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if (process.env.NODE_ENV !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = require('./ReactComponentTreeHook');
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactComponentTreeHook":383,"./ReactPropTypeLocationNames":390,"./ReactPropTypesSecret":392,"./reactProdInvariant":401,"_process":235,"fbjs/lib/invariant":54,"fbjs/lib/warning":61}],396:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/createClass.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _require = require('./ReactBaseClasses'),
    Component = _require.Component;

var _require2 = require('./ReactElement'),
    isValidElement = _require2.isValidElement;

var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');
var factory = require('create-react-class/factory');

module.exports = factory(Component, isValidElement, ReactNoopUpdateQueue);
}).apply(this, arguments);

},{"./ReactBaseClasses":381,"./ReactElement":386,"./ReactNoopUpdateQueue":389,"create-react-class/factory":20}],397:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/getIteratorFn.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;
}).apply(this, arguments);

},{}],398:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/getNextDebugID.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

'use strict';

var nextDebugID = 1;

function getNextDebugID() {
  return nextDebugID++;
}

module.exports = getNextDebugID;
}).apply(this, arguments);

},{}],399:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/lowPriorityWarning.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

if (process.env.NODE_ENV !== 'production') {
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = lowPriorityWarning;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"_process":235}],400:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/onlyChild.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactElement = require('./ReactElement');

var invariant = require('fbjs/lib/invariant');

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
  return children;
}

module.exports = onlyChild;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./ReactElement":386,"./reactProdInvariant":401,"_process":235,"fbjs/lib/invariant":54}],401:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/reactProdInvariant.js", module);
(function(){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
'use strict';

/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;
}).apply(this, arguments);

},{}],402:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/lib/traverseAllChildren.js", module);
(function(){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('./ReactCurrentOwner');
var REACT_ELEMENT_TYPE = require('./ReactElementSymbol');

var getIteratorFn = require('./getIteratorFn');
var invariant = require('fbjs/lib/invariant');
var KeyEscapeUtils = require('./KeyEscapeUtils');
var warning = require('fbjs/lib/warning');

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (process.env.NODE_ENV !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (process.env.NODE_ENV !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
}).call(this,require('_process'))
}).apply(this, arguments);

},{"./KeyEscapeUtils":378,"./ReactCurrentOwner":384,"./ReactElementSymbol":387,"./getIteratorFn":397,"./reactProdInvariant":401,"_process":235,"fbjs/lib/invariant":54,"fbjs/lib/warning":61}],403:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/react/react.js", module);
(function(){
'use strict';

module.exports = require('./lib/React');

}).apply(this, arguments);

},{"./lib/React":380}],404:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/redbox-react/lib/index.js", module);
(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = exports.RedBoxError = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _style = require('./style.js');

var _style2 = _interopRequireDefault(_style);

var _errorStackParser = require('error-stack-parser');

var _errorStackParser2 = _interopRequireDefault(_errorStackParser);

var _objectAssign = require('object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _lib = require('./lib');

var _sourcemappedStacktrace = require('sourcemapped-stacktrace');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RedBoxError = exports.RedBoxError = function (_get__2) {
  _inherits(RedBoxError, _get__2);

  function RedBoxError(props) {
    _classCallCheck(this, RedBoxError);

    var _this = _possibleConstructorReturn(this, (RedBoxError.__proto__ || Object.getPrototypeOf(RedBoxError)).call(this, props));

    _this.state = {
      error: null,
      mapped: false
    };

    _this.mapOnConstruction(props.error);
    return _this;
  }

  // State is used to store the error mapped to the source map.


  _createClass(RedBoxError, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (!this.state.mapped) this.mapError(this.props.error);
    }

    // Try to map the error when the component gets constructed, this is possible
    // in some cases like evals.

  }, {
    key: 'mapOnConstruction',
    value: function mapOnConstruction(error) {
      var stackLines = error.stack.split('\n');

      // There's no stack, only the error message.
      if (stackLines.length < 2) {
        this.state = { error: error, mapped: true };
        return;
      }

      // Using the “eval” setting on webpack already gives the correct location.
      var isWebpackEval = stackLines[1].search(/\(webpack:\/{3}/) !== -1;
      if (isWebpackEval) {
        // No changes are needed here.
        this.state = { error: error, mapped: true };
        return;
      }

      // Other eval follow a specific pattern and can be easily parsed.
      var isEval = stackLines[1].search(/\(eval at/) !== -1;
      if (!isEval) {
        // mapping will be deferred until `componentDidMount`
        this.state = { error: error, mapped: false };
        return;
      }

      // The first line is the error message.
      var fixedLines = [stackLines.shift()];
      // The rest needs to be fixed.
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = stackLines[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var stackLine = _step.value;

          var evalStackLine = stackLine.match(/(.+)\(eval at (.+) \(.+?\), .+(\:[0-9]+\:[0-9]+)\)/);
          if (evalStackLine) {
            var _evalStackLine = _slicedToArray(evalStackLine, 4),
                atSomething = _evalStackLine[1],
                file = _evalStackLine[2],
                rowColumn = _evalStackLine[3];

            fixedLines.push(atSomething + ' (' + file + rowColumn + ')');
          } else {
            // TODO: When stack frames of different types are detected, try to load the additional source maps
            fixedLines.push(stackLine);
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      error.stack = fixedLines.join('\n');
      this.state = { error: error, mapped: true };
    }
  }, {
    key: 'mapError',
    value: function mapError(error) {
      var _this2 = this;

      _get__('mapStackTrace')(error.stack, function (mappedStack) {
        error.stack = mappedStack.join('\n');
        _this2.setState({ error: error, mapped: true });
      });
    }
  }, {
    key: 'renderFrames',
    value: function renderFrames(frames) {
      var _props = this.props,
          filename = _props.filename,
          editorScheme = _props.editorScheme,
          useLines = _props.useLines,
          useColumns = _props.useColumns;

      var _get__3 = _get__('assign')({}, _get__('style'), this.props.style),
          frame = _get__3.frame,
          file = _get__3.file,
          linkToFile = _get__3.linkToFile;

      return frames.map(function (f, index) {
        var text = void 0;
        var url = void 0;

        if (index === 0 && filename && !_get__('isFilenameAbsolute')(f.fileName)) {
          url = _get__('makeUrl')(filename, editorScheme);
          text = _get__('makeLinkText')(filename);
        } else {
          var lines = useLines ? f.lineNumber : null;
          var columns = useColumns ? f.columnNumber : null;
          url = _get__('makeUrl')(f.fileName, editorScheme, lines, columns);
          text = _get__('makeLinkText')(f.fileName, lines, columns);
        }

        return _get__('React').createElement(
          'div',
          { style: frame, key: index },
          _get__('React').createElement(
            'div',
            null,
            f.functionName
          ),
          _get__('React').createElement(
            'div',
            { style: file },
            _get__('React').createElement(
              'a',
              { href: url, style: linkToFile },
              text
            )
          )
        );
      });
    }
  }, {
    key: 'render',
    value: function render() {
      // The error is received as a property to initialize state.error, which may
      // be updated when it is mapped to the source map.
      var error = this.state.error;
      var className = this.props.className;

      var _get__4 = _get__('assign')({}, _get__('style'), this.props.style),
          redbox = _get__4.redbox,
          message = _get__4.message,
          stack = _get__4.stack,
          frame = _get__4.frame;

      var frames = void 0;
      var parseError = void 0;
      try {
        frames = _get__('ErrorStackParser').parse(error);
      } catch (e) {
        parseError = new Error('Failed to parse stack trace. Stack trace information unavailable.');
      }

      if (parseError) {
        frames = _get__('React').createElement(
          'div',
          { style: frame, key: 0 },
          _get__('React').createElement(
            'div',
            null,
            parseError.message
          )
        );
      } else {
        frames = this.renderFrames(frames);
      }

      return _get__('React').createElement(
        'div',
        { style: redbox, className: className },
        _get__('React').createElement(
          'div',
          { style: message },
          error.name,
          ': ',
          error.message
        ),
        _get__('React').createElement(
          'div',
          { style: stack },
          frames
        )
      );
    }
  }]);

  return RedBoxError;
}(_get__('Component'));

// "Portal" component for actual RedBoxError component to
// render to (directly under body). Prevents bugs as in #27.


RedBoxError.propTypes = {
  error: _get__('PropTypes').instanceOf(Error).isRequired,
  filename: _get__('PropTypes').string,
  editorScheme: _get__('PropTypes').string,
  useLines: _get__('PropTypes').bool,
  useColumns: _get__('PropTypes').bool,
  style: _get__('PropTypes').object,
  className: _get__('PropTypes').string
};
RedBoxError.displayName = 'RedBoxError';
RedBoxError.defaultProps = {
  useLines: true,
  useColumns: true };

var RedBox = function (_get__5) {
  _inherits(RedBox, _get__5);

  function RedBox() {
    _classCallCheck(this, RedBox);

    return _possibleConstructorReturn(this, (RedBox.__proto__ || Object.getPrototypeOf(RedBox)).apply(this, arguments));
  }

  _createClass(RedBox, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.el = document.createElement('div');
      document.body.appendChild(this.el);
      this.renderRedBoxError();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.renderRedBoxError();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      _get__('ReactDOM').unmountComponentAtNode(this.el);
      document.body.removeChild(this.el);
      this.el = null;
    }
  }, {
    key: 'renderRedBoxError',
    value: function renderRedBoxError() {
      _get__('ReactDOM').render(_get__('React').createElement(_get__('RedBoxError'), this.props), this.el);
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }]);

  return RedBox;
}(_get__('Component'));

RedBox.propTypes = {
  error: _get__('PropTypes').instanceOf(Error).isRequired
};
RedBox.displayName = 'RedBox';
exports.default = RedBox;

var _RewiredData__ = Object.create(null);

var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
var _RewireAPI__ = {};

(function () {
  function addPropertyToAPIObject(name, value) {
    Object.defineProperty(_RewireAPI__, name, {
      value: value,
      enumerable: false,
      configurable: true
    });
  }

  addPropertyToAPIObject('__get__', _get__);
  addPropertyToAPIObject('__GetDependency__', _get__);
  addPropertyToAPIObject('__Rewire__', _set__);
  addPropertyToAPIObject('__set__', _set__);
  addPropertyToAPIObject('__reset__', _reset__);
  addPropertyToAPIObject('__ResetDependency__', _reset__);
  addPropertyToAPIObject('__with__', _with__);
})();

function _get__(variableName) {
  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
    return _get_original__(variableName);
  } else {
    var value = _RewiredData__[variableName];

    if (value === INTENTIONAL_UNDEFINED) {
      return undefined;
    } else {
      return value;
    }
  }
}

function _get_original__(variableName) {
  switch (variableName) {
    case 'PropTypes':
      return _propTypes2.default;

    case 'mapStackTrace':
      return _sourcemappedStacktrace.mapStackTrace;

    case 'assign':
      return _objectAssign2.default;

    case 'style':
      return _style2.default;

    case 'isFilenameAbsolute':
      return _lib.isFilenameAbsolute;

    case 'makeUrl':
      return _lib.makeUrl;

    case 'makeLinkText':
      return _lib.makeLinkText;

    case 'ErrorStackParser':
      return _errorStackParser2.default;

    case 'Component':
      return _react.Component;

    case 'ReactDOM':
      return _reactDom2.default;

    case 'React':
      return _react2.default;

    case 'RedBoxError':
      return RedBoxError;
  }

  return undefined;
}

function _assign__(variableName, value) {
  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
    return _set_original__(variableName, value);
  } else {
    return _RewiredData__[variableName] = value;
  }
}

function _set_original__(variableName, _value) {
  switch (variableName) {}

  return undefined;
}

function _update_operation__(operation, variableName, prefix) {
  var oldValue = _get__(variableName);

  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

  _assign__(variableName, newValue);

  return prefix ? newValue : oldValue;
}

function _set__(variableName, value) {
  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
    Object.keys(variableName).forEach(function (name) {
      _RewiredData__[name] = variableName[name];
    });
  } else {
    if (value === undefined) {
      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
    } else {
      _RewiredData__[variableName] = value;
    }

    return function () {
      _reset__(variableName);
    };
  }
}

function _reset__(variableName) {
  delete _RewiredData__[variableName];
}

function _with__(object) {
  var rewiredVariableNames = Object.keys(object);
  var previousValues = {};

  function reset() {
    rewiredVariableNames.forEach(function (variableName) {
      _RewiredData__[variableName] = previousValues[variableName];
    });
  }

  return function (callback) {
    rewiredVariableNames.forEach(function (variableName) {
      previousValues[variableName] = _RewiredData__[variableName];
      _RewiredData__[variableName] = object[variableName];
    });
    var result = callback();

    if (!!result && typeof result.then == 'function') {
      result.then(reset).catch(reset);
    } else {
      reset();
    }

    return result;
  };
}

var _typeOfOriginalExport = typeof RedBox === 'undefined' ? 'undefined' : _typeof(RedBox);

function addNonEnumerableProperty(name, value) {
  Object.defineProperty(RedBox, name, {
    value: value,
    enumerable: false,
    configurable: true
  });
}

if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(RedBox)) {
  addNonEnumerableProperty('__get__', _get__);
  addNonEnumerableProperty('__GetDependency__', _get__);
  addNonEnumerableProperty('__Rewire__', _set__);
  addNonEnumerableProperty('__set__', _set__);
  addNonEnumerableProperty('__reset__', _reset__);
  addNonEnumerableProperty('__ResetDependency__', _reset__);
  addNonEnumerableProperty('__with__', _with__);
  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
}

exports.__get__ = _get__;
exports.__GetDependency__ = _get__;
exports.__Rewire__ = _set__;
exports.__set__ = _set__;
exports.__ResetDependency__ = _reset__;
exports.__RewireAPI__ = _RewireAPI__;
}).apply(this, arguments);

},{"./lib":405,"./style.js":406,"error-stack-parser":38,"object-assign":232,"prop-types":240,"react":403,"react-dom":243,"sourcemapped-stacktrace":420}],405:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/redbox-react/lib/lib.js", module);
(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var filenameWithoutLoaders = exports.filenameWithoutLoaders = function filenameWithoutLoaders() {
  var filename = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

  var index = filename.lastIndexOf('!');

  return index < 0 ? filename : filename.substr(index + 1);
};

var filenameHasLoaders = exports.filenameHasLoaders = function filenameHasLoaders(filename) {
  var actualFilename = _get__('filenameWithoutLoaders')(filename);

  return actualFilename !== filename;
};

var filenameHasSchema = exports.filenameHasSchema = function filenameHasSchema(filename) {
  return (/^[\w]+\:/.test(filename)
  );
};

var isFilenameAbsolute = exports.isFilenameAbsolute = function isFilenameAbsolute(filename) {
  var actualFilename = _get__('filenameWithoutLoaders')(filename);

  if (actualFilename.indexOf('/') === 0) {
    return true;
  }

  return false;
};

var makeUrl = exports.makeUrl = function makeUrl(filename, scheme, line, column) {
  var actualFilename = _get__('filenameWithoutLoaders')(filename);

  if (_get__('filenameHasSchema')(filename)) {
    return actualFilename;
  }

  var url = 'file://' + actualFilename;

  if (scheme === 'vscode') {
    url = scheme + '://file/' + url;
    url = url.replace(/file:\/\/\//, ''); // visual studio code does not need file:/// in its scheme
    if (line && actualFilename === filename) {
      url = url + ':' + line;

      if (column) {
        url = url + ':' + column;
      }
    }
  } else if (scheme) {
    url = scheme + '://open?url=' + url;

    if (line && actualFilename === filename) {
      url = url + '&line=' + line;

      if (column) {
        url = url + '&column=' + column;
      }
    }
  }

  return url;
};

var makeLinkText = exports.makeLinkText = function makeLinkText(filename, line, column) {
  var text = _get__('filenameWithoutLoaders')(filename);

  if (line && text === filename) {
    text = text + ':' + line;

    if (column) {
      text = text + ':' + column;
    }
  }

  return text;
};

var _RewiredData__ = Object.create(null);

var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
var _RewireAPI__ = {};

(function () {
  function addPropertyToAPIObject(name, value) {
    Object.defineProperty(_RewireAPI__, name, {
      value: value,
      enumerable: false,
      configurable: true
    });
  }

  addPropertyToAPIObject('__get__', _get__);
  addPropertyToAPIObject('__GetDependency__', _get__);
  addPropertyToAPIObject('__Rewire__', _set__);
  addPropertyToAPIObject('__set__', _set__);
  addPropertyToAPIObject('__reset__', _reset__);
  addPropertyToAPIObject('__ResetDependency__', _reset__);
  addPropertyToAPIObject('__with__', _with__);
})();

function _get__(variableName) {
  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
    return _get_original__(variableName);
  } else {
    var value = _RewiredData__[variableName];

    if (value === INTENTIONAL_UNDEFINED) {
      return undefined;
    } else {
      return value;
    }
  }
}

function _get_original__(variableName) {
  switch (variableName) {
    case 'filenameWithoutLoaders':
      return filenameWithoutLoaders;

    case 'filenameHasSchema':
      return filenameHasSchema;
  }

  return undefined;
}

function _assign__(variableName, value) {
  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
    return _set_original__(variableName, value);
  } else {
    return _RewiredData__[variableName] = value;
  }
}

function _set_original__(variableName, _value) {
  switch (variableName) {}

  return undefined;
}

function _update_operation__(operation, variableName, prefix) {
  var oldValue = _get__(variableName);

  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

  _assign__(variableName, newValue);

  return prefix ? newValue : oldValue;
}

function _set__(variableName, value) {
  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
    Object.keys(variableName).forEach(function (name) {
      _RewiredData__[name] = variableName[name];
    });
  } else {
    if (value === undefined) {
      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
    } else {
      _RewiredData__[variableName] = value;
    }

    return function () {
      _reset__(variableName);
    };
  }
}

function _reset__(variableName) {
  delete _RewiredData__[variableName];
}

function _with__(object) {
  var rewiredVariableNames = Object.keys(object);
  var previousValues = {};

  function reset() {
    rewiredVariableNames.forEach(function (variableName) {
      _RewiredData__[variableName] = previousValues[variableName];
    });
  }

  return function (callback) {
    rewiredVariableNames.forEach(function (variableName) {
      previousValues[variableName] = _RewiredData__[variableName];
      _RewiredData__[variableName] = object[variableName];
    });
    var result = callback();

    if (!!result && typeof result.then == 'function') {
      result.then(reset).catch(reset);
    } else {
      reset();
    }

    return result;
  };
}

exports.__get__ = _get__;
exports.__GetDependency__ = _get__;
exports.__Rewire__ = _set__;
exports.__set__ = _set__;
exports.__ResetDependency__ = _reset__;
exports.__RewireAPI__ = _RewireAPI__;
exports.default = _RewireAPI__;
}).apply(this, arguments);

},{}],406:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/redbox-react/lib/style.js", module);
(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _DefaultExportValue = {
  redbox: {
    boxSizing: 'border-box',
    fontFamily: 'sans-serif',
    position: 'fixed',
    padding: 10,
    top: '0px',
    left: '0px',
    bottom: '0px',
    right: '0px',
    width: '100%',
    background: 'rgb(204, 0, 0)',
    color: 'white',
    zIndex: 2147483647,
    textAlign: 'left',
    fontSize: '16px',
    lineHeight: 1.2,
    overflow: 'auto'
  },
  message: {
    fontWeight: 'bold'
  },
  stack: {
    fontFamily: 'monospace',
    marginTop: '2em'
  },
  frame: {
    marginTop: '1em'
  },
  file: {
    fontSize: '0.8em',
    color: 'rgba(255, 255, 255, 0.7)'
  },
  linkToFile: {
    textDecoration: 'none',
    color: 'rgba(255, 255, 255, 0.7)'
  }
};
exports.default = _DefaultExportValue;
}).apply(this, arguments);

},{}],407:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/socket.io-client/lib/index.js", module);
(function(){

/**
 * Module dependencies.
 */

var url = require('./url');
var parser = require('socket.io-parser');
var Manager = require('./manager');
var debug = require('debug')('socket.io-client');

/**
 * Module exports.
 */

module.exports = exports = lookup;

/**
 * Managers cache.
 */

var cache = exports.managers = {};

/**
 * Looks up an existing `Manager` for multiplexing.
 * If the user summons:
 *
 *   `io('http://localhost/a');`
 *   `io('http://localhost/b');`
 *
 * We reuse the existing instance based on same scheme/port/host,
 * and we initialize sockets for each namespace.
 *
 * @api public
 */

function lookup (uri, opts) {
  if (typeof uri === 'object') {
    opts = uri;
    uri = undefined;
  }

  opts = opts || {};

  var parsed = url(uri);
  var source = parsed.source;
  var id = parsed.id;
  var path = parsed.path;
  var sameNamespace = cache[id] && path in cache[id].nsps;
  var newConnection = opts.forceNew || opts['force new connection'] ||
                      false === opts.multiplex || sameNamespace;

  var io;

  if (newConnection) {
    debug('ignoring socket cache for %s', source);
    io = Manager(source, opts);
  } else {
    if (!cache[id]) {
      debug('new io instance for %s', source);
      cache[id] = Manager(source, opts);
    }
    io = cache[id];
  }
  if (parsed.query && !opts.query) {
    opts.query = parsed.query;
  }
  return io.socket(parsed.path, opts);
}

/**
 * Protocol version.
 *
 * @api public
 */

exports.protocol = parser.protocol;

/**
 * `connect`.
 *
 * @param {String} uri
 * @api public
 */

exports.connect = lookup;

/**
 * Expose constructors for standalone build.
 *
 * @api public
 */

exports.Manager = require('./manager');
exports.Socket = require('./socket');

}).apply(this, arguments);

},{"./manager":408,"./socket":410,"./url":411,"debug":412,"socket.io-parser":415}],408:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/socket.io-client/lib/manager.js", module);
(function(){

/**
 * Module dependencies.
 */

var eio = require('engine.io-client');
var Socket = require('./socket');
var Emitter = require('component-emitter');
var parser = require('socket.io-parser');
var on = require('./on');
var bind = require('component-bind');
var debug = require('debug')('socket.io-client:manager');
var indexOf = require('indexof');
var Backoff = require('backo2');

/**
 * IE6+ hasOwnProperty
 */

var has = Object.prototype.hasOwnProperty;

/**
 * Module exports
 */

module.exports = Manager;

/**
 * `Manager` constructor.
 *
 * @param {String} engine instance or engine uri/opts
 * @param {Object} options
 * @api public
 */

function Manager (uri, opts) {
  if (!(this instanceof Manager)) return new Manager(uri, opts);
  if (uri && ('object' === typeof uri)) {
    opts = uri;
    uri = undefined;
  }
  opts = opts || {};

  opts.path = opts.path || '/socket.io';
  this.nsps = {};
  this.subs = [];
  this.opts = opts;
  this.reconnection(opts.reconnection !== false);
  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);
  this.reconnectionDelay(opts.reconnectionDelay || 1000);
  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);
  this.randomizationFactor(opts.randomizationFactor || 0.5);
  this.backoff = new Backoff({
    min: this.reconnectionDelay(),
    max: this.reconnectionDelayMax(),
    jitter: this.randomizationFactor()
  });
  this.timeout(null == opts.timeout ? 20000 : opts.timeout);
  this.readyState = 'closed';
  this.uri = uri;
  this.connecting = [];
  this.lastPing = null;
  this.encoding = false;
  this.packetBuffer = [];
  var _parser = opts.parser || parser;
  this.encoder = new _parser.Encoder();
  this.decoder = new _parser.Decoder();
  this.autoConnect = opts.autoConnect !== false;
  if (this.autoConnect) this.open();
}

/**
 * Propagate given event to sockets and emit on `this`
 *
 * @api private
 */

Manager.prototype.emitAll = function () {
  this.emit.apply(this, arguments);
  for (var nsp in this.nsps) {
    if (has.call(this.nsps, nsp)) {
      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);
    }
  }
};

/**
 * Update `socket.id` of all sockets
 *
 * @api private
 */

Manager.prototype.updateSocketIds = function () {
  for (var nsp in this.nsps) {
    if (has.call(this.nsps, nsp)) {
      this.nsps[nsp].id = this.generateId(nsp);
    }
  }
};

/**
 * generate `socket.id` for the given `nsp`
 *
 * @param {String} nsp
 * @return {String}
 * @api private
 */

Manager.prototype.generateId = function (nsp) {
  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;
};

/**
 * Mix in `Emitter`.
 */

Emitter(Manager.prototype);

/**
 * Sets the `reconnection` config.
 *
 * @param {Boolean} true/false if it should automatically reconnect
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnection = function (v) {
  if (!arguments.length) return this._reconnection;
  this._reconnection = !!v;
  return this;
};

/**
 * Sets the reconnection attempts config.
 *
 * @param {Number} max reconnection attempts before giving up
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnectionAttempts = function (v) {
  if (!arguments.length) return this._reconnectionAttempts;
  this._reconnectionAttempts = v;
  return this;
};

/**
 * Sets the delay between reconnections.
 *
 * @param {Number} delay
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnectionDelay = function (v) {
  if (!arguments.length) return this._reconnectionDelay;
  this._reconnectionDelay = v;
  this.backoff && this.backoff.setMin(v);
  return this;
};

Manager.prototype.randomizationFactor = function (v) {
  if (!arguments.length) return this._randomizationFactor;
  this._randomizationFactor = v;
  this.backoff && this.backoff.setJitter(v);
  return this;
};

/**
 * Sets the maximum delay between reconnections.
 *
 * @param {Number} delay
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnectionDelayMax = function (v) {
  if (!arguments.length) return this._reconnectionDelayMax;
  this._reconnectionDelayMax = v;
  this.backoff && this.backoff.setMax(v);
  return this;
};

/**
 * Sets the connection timeout. `false` to disable
 *
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.timeout = function (v) {
  if (!arguments.length) return this._timeout;
  this._timeout = v;
  return this;
};

/**
 * Starts trying to reconnect if reconnection is enabled and we have not
 * started reconnecting yet
 *
 * @api private
 */

Manager.prototype.maybeReconnectOnOpen = function () {
  // Only try to reconnect if it's the first time we're connecting
  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {
    // keeps reconnection from firing twice for the same reconnection loop
    this.reconnect();
  }
};

/**
 * Sets the current transport `socket`.
 *
 * @param {Function} optional, callback
 * @return {Manager} self
 * @api public
 */

Manager.prototype.open =
Manager.prototype.connect = function (fn, opts) {
  debug('readyState %s', this.readyState);
  if (~this.readyState.indexOf('open')) return this;

  debug('opening %s', this.uri);
  this.engine = eio(this.uri, this.opts);
  var socket = this.engine;
  var self = this;
  this.readyState = 'opening';
  this.skipReconnect = false;

  // emit `open`
  var openSub = on(socket, 'open', function () {
    self.onopen();
    fn && fn();
  });

  // emit `connect_error`
  var errorSub = on(socket, 'error', function (data) {
    debug('connect_error');
    self.cleanup();
    self.readyState = 'closed';
    self.emitAll('connect_error', data);
    if (fn) {
      var err = new Error('Connection error');
      err.data = data;
      fn(err);
    } else {
      // Only do this if there is no fn to handle the error
      self.maybeReconnectOnOpen();
    }
  });

  // emit `connect_timeout`
  if (false !== this._timeout) {
    var timeout = this._timeout;
    debug('connect attempt will timeout after %d', timeout);

    // set timer
    var timer = setTimeout(function () {
      debug('connect attempt timed out after %d', timeout);
      openSub.destroy();
      socket.close();
      socket.emit('error', 'timeout');
      self.emitAll('connect_timeout', timeout);
    }, timeout);

    this.subs.push({
      destroy: function () {
        clearTimeout(timer);
      }
    });
  }

  this.subs.push(openSub);
  this.subs.push(errorSub);

  return this;
};

/**
 * Called upon transport open.
 *
 * @api private
 */

Manager.prototype.onopen = function () {
  debug('open');

  // clear old subs
  this.cleanup();

  // mark as open
  this.readyState = 'open';
  this.emit('open');

  // add new subs
  var socket = this.engine;
  this.subs.push(on(socket, 'data', bind(this, 'ondata')));
  this.subs.push(on(socket, 'ping', bind(this, 'onping')));
  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));
  this.subs.push(on(socket, 'error', bind(this, 'onerror')));
  this.subs.push(on(socket, 'close', bind(this, 'onclose')));
  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));
};

/**
 * Called upon a ping.
 *
 * @api private
 */

Manager.prototype.onping = function () {
  this.lastPing = new Date();
  this.emitAll('ping');
};

/**
 * Called upon a packet.
 *
 * @api private
 */

Manager.prototype.onpong = function () {
  this.emitAll('pong', new Date() - this.lastPing);
};

/**
 * Called with data.
 *
 * @api private
 */

Manager.prototype.ondata = function (data) {
  this.decoder.add(data);
};

/**
 * Called when parser fully decodes a packet.
 *
 * @api private
 */

Manager.prototype.ondecoded = function (packet) {
  this.emit('packet', packet);
};

/**
 * Called upon socket error.
 *
 * @api private
 */

Manager.prototype.onerror = function (err) {
  debug('error', err);
  this.emitAll('error', err);
};

/**
 * Creates a new socket for the given `nsp`.
 *
 * @return {Socket}
 * @api public
 */

Manager.prototype.socket = function (nsp, opts) {
  var socket = this.nsps[nsp];
  if (!socket) {
    socket = new Socket(this, nsp, opts);
    this.nsps[nsp] = socket;
    var self = this;
    socket.on('connecting', onConnecting);
    socket.on('connect', function () {
      socket.id = self.generateId(nsp);
    });

    if (this.autoConnect) {
      // manually call here since connecting event is fired before listening
      onConnecting();
    }
  }

  function onConnecting () {
    if (!~indexOf(self.connecting, socket)) {
      self.connecting.push(socket);
    }
  }

  return socket;
};

/**
 * Called upon a socket close.
 *
 * @param {Socket} socket
 */

Manager.prototype.destroy = function (socket) {
  var index = indexOf(this.connecting, socket);
  if (~index) this.connecting.splice(index, 1);
  if (this.connecting.length) return;

  this.close();
};

/**
 * Writes a packet.
 *
 * @param {Object} packet
 * @api private
 */

Manager.prototype.packet = function (packet) {
  debug('writing packet %j', packet);
  var self = this;
  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;

  if (!self.encoding) {
    // encode, then write to engine with result
    self.encoding = true;
    this.encoder.encode(packet, function (encodedPackets) {
      for (var i = 0; i < encodedPackets.length; i++) {
        self.engine.write(encodedPackets[i], packet.options);
      }
      self.encoding = false;
      self.processPacketQueue();
    });
  } else { // add packet to the queue
    self.packetBuffer.push(packet);
  }
};

/**
 * If packet buffer is non-empty, begins encoding the
 * next packet in line.
 *
 * @api private
 */

Manager.prototype.processPacketQueue = function () {
  if (this.packetBuffer.length > 0 && !this.encoding) {
    var pack = this.packetBuffer.shift();
    this.packet(pack);
  }
};

/**
 * Clean up transport subscriptions and packet buffer.
 *
 * @api private
 */

Manager.prototype.cleanup = function () {
  debug('cleanup');

  var subsLength = this.subs.length;
  for (var i = 0; i < subsLength; i++) {
    var sub = this.subs.shift();
    sub.destroy();
  }

  this.packetBuffer = [];
  this.encoding = false;
  this.lastPing = null;

  this.decoder.destroy();
};

/**
 * Close the current socket.
 *
 * @api private
 */

Manager.prototype.close =
Manager.prototype.disconnect = function () {
  debug('disconnect');
  this.skipReconnect = true;
  this.reconnecting = false;
  if ('opening' === this.readyState) {
    // `onclose` will not fire because
    // an open event never happened
    this.cleanup();
  }
  this.backoff.reset();
  this.readyState = 'closed';
  if (this.engine) this.engine.close();
};

/**
 * Called upon engine close.
 *
 * @api private
 */

Manager.prototype.onclose = function (reason) {
  debug('onclose');

  this.cleanup();
  this.backoff.reset();
  this.readyState = 'closed';
  this.emit('close', reason);

  if (this._reconnection && !this.skipReconnect) {
    this.reconnect();
  }
};

/**
 * Attempt a reconnection.
 *
 * @api private
 */

Manager.prototype.reconnect = function () {
  if (this.reconnecting || this.skipReconnect) return this;

  var self = this;

  if (this.backoff.attempts >= this._reconnectionAttempts) {
    debug('reconnect failed');
    this.backoff.reset();
    this.emitAll('reconnect_failed');
    this.reconnecting = false;
  } else {
    var delay = this.backoff.duration();
    debug('will wait %dms before reconnect attempt', delay);

    this.reconnecting = true;
    var timer = setTimeout(function () {
      if (self.skipReconnect) return;

      debug('attempting reconnect');
      self.emitAll('reconnect_attempt', self.backoff.attempts);
      self.emitAll('reconnecting', self.backoff.attempts);

      // check again for the case socket closed in above events
      if (self.skipReconnect) return;

      self.open(function (err) {
        if (err) {
          debug('reconnect attempt error');
          self.reconnecting = false;
          self.reconnect();
          self.emitAll('reconnect_error', err.data);
        } else {
          debug('reconnect success');
          self.onreconnect();
        }
      });
    }, delay);

    this.subs.push({
      destroy: function () {
        clearTimeout(timer);
      }
    });
  }
};

/**
 * Called upon successful reconnect.
 *
 * @api private
 */

Manager.prototype.onreconnect = function () {
  var attempt = this.backoff.attempts;
  this.reconnecting = false;
  this.backoff.reset();
  this.updateSocketIds();
  this.emitAll('reconnect', attempt);
};

}).apply(this, arguments);

},{"./on":409,"./socket":410,"backo2":9,"component-bind":17,"component-emitter":18,"debug":412,"engine.io-client":24,"indexof":67,"socket.io-parser":415}],409:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/socket.io-client/lib/on.js", module);
(function(){

/**
 * Module exports.
 */

module.exports = on;

/**
 * Helper for subscriptions.
 *
 * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`
 * @param {String} event name
 * @param {Function} callback
 * @api public
 */

function on (obj, ev, fn) {
  obj.on(ev, fn);
  return {
    destroy: function () {
      obj.removeListener(ev, fn);
    }
  };
}

}).apply(this, arguments);

},{}],410:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/socket.io-client/lib/socket.js", module);
(function(){

/**
 * Module dependencies.
 */

var parser = require('socket.io-parser');
var Emitter = require('component-emitter');
var toArray = require('to-array');
var on = require('./on');
var bind = require('component-bind');
var debug = require('debug')('socket.io-client:socket');
var parseqs = require('parseqs');
var hasBin = require('has-binary2');

/**
 * Module exports.
 */

module.exports = exports = Socket;

/**
 * Internal events (blacklisted).
 * These events can't be emitted by the user.
 *
 * @api private
 */

var events = {
  connect: 1,
  connect_error: 1,
  connect_timeout: 1,
  connecting: 1,
  disconnect: 1,
  error: 1,
  reconnect: 1,
  reconnect_attempt: 1,
  reconnect_failed: 1,
  reconnect_error: 1,
  reconnecting: 1,
  ping: 1,
  pong: 1
};

/**
 * Shortcut to `Emitter#emit`.
 */

var emit = Emitter.prototype.emit;

/**
 * `Socket` constructor.
 *
 * @api public
 */

function Socket (io, nsp, opts) {
  this.io = io;
  this.nsp = nsp;
  this.json = this; // compat
  this.ids = 0;
  this.acks = {};
  this.receiveBuffer = [];
  this.sendBuffer = [];
  this.connected = false;
  this.disconnected = true;
  this.flags = {};
  if (opts && opts.query) {
    this.query = opts.query;
  }
  if (this.io.autoConnect) this.open();
}

/**
 * Mix in `Emitter`.
 */

Emitter(Socket.prototype);

/**
 * Subscribe to open, close and packet events
 *
 * @api private
 */

Socket.prototype.subEvents = function () {
  if (this.subs) return;

  var io = this.io;
  this.subs = [
    on(io, 'open', bind(this, 'onopen')),
    on(io, 'packet', bind(this, 'onpacket')),
    on(io, 'close', bind(this, 'onclose'))
  ];
};

/**
 * "Opens" the socket.
 *
 * @api public
 */

Socket.prototype.open =
Socket.prototype.connect = function () {
  if (this.connected) return this;

  this.subEvents();
  this.io.open(); // ensure open
  if ('open' === this.io.readyState) this.onopen();
  this.emit('connecting');
  return this;
};

/**
 * Sends a `message` event.
 *
 * @return {Socket} self
 * @api public
 */

Socket.prototype.send = function () {
  var args = toArray(arguments);
  args.unshift('message');
  this.emit.apply(this, args);
  return this;
};

/**
 * Override `emit`.
 * If the event is in `events`, it's emitted normally.
 *
 * @param {String} event name
 * @return {Socket} self
 * @api public
 */

Socket.prototype.emit = function (ev) {
  if (events.hasOwnProperty(ev)) {
    emit.apply(this, arguments);
    return this;
  }

  var args = toArray(arguments);
  var packet = {
    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,
    data: args
  };

  packet.options = {};
  packet.options.compress = !this.flags || false !== this.flags.compress;

  // event ack callback
  if ('function' === typeof args[args.length - 1]) {
    debug('emitting packet with ack id %d', this.ids);
    this.acks[this.ids] = args.pop();
    packet.id = this.ids++;
  }

  if (this.connected) {
    this.packet(packet);
  } else {
    this.sendBuffer.push(packet);
  }

  this.flags = {};

  return this;
};

/**
 * Sends a packet.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.packet = function (packet) {
  packet.nsp = this.nsp;
  this.io.packet(packet);
};

/**
 * Called upon engine `open`.
 *
 * @api private
 */

Socket.prototype.onopen = function () {
  debug('transport is open - connecting');

  // write connect packet if necessary
  if ('/' !== this.nsp) {
    if (this.query) {
      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;
      debug('sending connect packet with query %s', query);
      this.packet({type: parser.CONNECT, query: query});
    } else {
      this.packet({type: parser.CONNECT});
    }
  }
};

/**
 * Called upon engine `close`.
 *
 * @param {String} reason
 * @api private
 */

Socket.prototype.onclose = function (reason) {
  debug('close (%s)', reason);
  this.connected = false;
  this.disconnected = true;
  delete this.id;
  this.emit('disconnect', reason);
};

/**
 * Called with socket packet.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.onpacket = function (packet) {
  var sameNamespace = packet.nsp === this.nsp;
  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';

  if (!sameNamespace && !rootNamespaceError) return;

  switch (packet.type) {
    case parser.CONNECT:
      this.onconnect();
      break;

    case parser.EVENT:
      this.onevent(packet);
      break;

    case parser.BINARY_EVENT:
      this.onevent(packet);
      break;

    case parser.ACK:
      this.onack(packet);
      break;

    case parser.BINARY_ACK:
      this.onack(packet);
      break;

    case parser.DISCONNECT:
      this.ondisconnect();
      break;

    case parser.ERROR:
      this.emit('error', packet.data);
      break;
  }
};

/**
 * Called upon a server event.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.onevent = function (packet) {
  var args = packet.data || [];
  debug('emitting event %j', args);

  if (null != packet.id) {
    debug('attaching ack callback to event');
    args.push(this.ack(packet.id));
  }

  if (this.connected) {
    emit.apply(this, args);
  } else {
    this.receiveBuffer.push(args);
  }
};

/**
 * Produces an ack callback to emit with an event.
 *
 * @api private
 */

Socket.prototype.ack = function (id) {
  var self = this;
  var sent = false;
  return function () {
    // prevent double callbacks
    if (sent) return;
    sent = true;
    var args = toArray(arguments);
    debug('sending ack %j', args);

    self.packet({
      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,
      id: id,
      data: args
    });
  };
};

/**
 * Called upon a server acknowlegement.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.onack = function (packet) {
  var ack = this.acks[packet.id];
  if ('function' === typeof ack) {
    debug('calling ack %s with %j', packet.id, packet.data);
    ack.apply(this, packet.data);
    delete this.acks[packet.id];
  } else {
    debug('bad ack %s', packet.id);
  }
};

/**
 * Called upon server connect.
 *
 * @api private
 */

Socket.prototype.onconnect = function () {
  this.connected = true;
  this.disconnected = false;
  this.emit('connect');
  this.emitBuffered();
};

/**
 * Emit buffered events (received and emitted).
 *
 * @api private
 */

Socket.prototype.emitBuffered = function () {
  var i;
  for (i = 0; i < this.receiveBuffer.length; i++) {
    emit.apply(this, this.receiveBuffer[i]);
  }
  this.receiveBuffer = [];

  for (i = 0; i < this.sendBuffer.length; i++) {
    this.packet(this.sendBuffer[i]);
  }
  this.sendBuffer = [];
};

/**
 * Called upon server disconnect.
 *
 * @api private
 */

Socket.prototype.ondisconnect = function () {
  debug('server disconnect (%s)', this.nsp);
  this.destroy();
  this.onclose('io server disconnect');
};

/**
 * Called upon forced client/server side disconnections,
 * this method ensures the manager stops tracking us and
 * that reconnections don't get triggered for this.
 *
 * @api private.
 */

Socket.prototype.destroy = function () {
  if (this.subs) {
    // clean subscriptions to avoid reconnections
    for (var i = 0; i < this.subs.length; i++) {
      this.subs[i].destroy();
    }
    this.subs = null;
  }

  this.io.destroy(this);
};

/**
 * Disconnects the socket manually.
 *
 * @return {Socket} self
 * @api public
 */

Socket.prototype.close =
Socket.prototype.disconnect = function () {
  if (this.connected) {
    debug('performing disconnect (%s)', this.nsp);
    this.packet({ type: parser.DISCONNECT });
  }

  // remove socket from pool
  this.destroy();

  if (this.connected) {
    // fire events
    this.onclose('io client disconnect');
  }
  return this;
};

/**
 * Sets the compress flag.
 *
 * @param {Boolean} if `true`, compresses the sending data
 * @return {Socket} self
 * @api public
 */

Socket.prototype.compress = function (compress) {
  this.flags.compress = compress;
  return this;
};

/**
 * Sets the binary flag
 *
 * @param {Boolean} whether the emitted data contains binary
 * @return {Socket} self
 * @api public
 */

Socket.prototype.binary = function (binary) {
  this.flags.binary = binary;
  return this;
};

}).apply(this, arguments);

},{"./on":409,"component-bind":17,"component-emitter":18,"debug":412,"has-binary2":63,"parseqs":233,"socket.io-parser":415,"to-array":422}],411:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/socket.io-client/lib/url.js", module);
(function(){

/**
 * Module dependencies.
 */

var parseuri = require('parseuri');
var debug = require('debug')('socket.io-client:url');

/**
 * Module exports.
 */

module.exports = url;

/**
 * URL parser.
 *
 * @param {String} url
 * @param {Object} An object meant to mimic window.location.
 *                 Defaults to window.location.
 * @api public
 */

function url (uri, loc) {
  var obj = uri;

  // default to window.location
  loc = loc || (typeof location !== 'undefined' && location);
  if (null == uri) uri = loc.protocol + '//' + loc.host;

  // relative path support
  if ('string' === typeof uri) {
    if ('/' === uri.charAt(0)) {
      if ('/' === uri.charAt(1)) {
        uri = loc.protocol + uri;
      } else {
        uri = loc.host + uri;
      }
    }

    if (!/^(https?|wss?):\/\//.test(uri)) {
      debug('protocol-less url %s', uri);
      if ('undefined' !== typeof loc) {
        uri = loc.protocol + '//' + uri;
      } else {
        uri = 'https://' + uri;
      }
    }

    // parse
    debug('parse %s', uri);
    obj = parseuri(uri);
  }

  // make sure we treat `localhost:80` and `localhost` equally
  if (!obj.port) {
    if (/^(http|ws)$/.test(obj.protocol)) {
      obj.port = '80';
    } else if (/^(http|ws)s$/.test(obj.protocol)) {
      obj.port = '443';
    }
  }

  obj.path = obj.path || '/';

  var ipv6 = obj.host.indexOf(':') !== -1;
  var host = ipv6 ? '[' + obj.host + ']' : obj.host;

  // define unique id
  obj.id = obj.protocol + '://' + host + ':' + obj.port;
  // define href
  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));

  return obj;
}

}).apply(this, arguments);

},{"debug":412,"parseuri":234}],412:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/socket.io-client/node_modules/debug/src/browser.js", module);
(function(){
(function (process){
/**
 * This is the web browser implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = require('./debug');
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome
               && 'undefined' != typeof chrome.storage
                  ? chrome.storage.local
                  : localstorage();

/**
 * Colors.
 */

exports.colors = [
  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',
  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',
  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',
  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',
  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',
  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',
  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',
  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',
  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',
  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',
  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
    return true;
  }

  // Internet Explorer and Edge do not support colors.
  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  }

  // is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
    // double check webkit in userAgent just in case we are in a worker
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

exports.formatters.j = function(v) {
  try {
    return JSON.stringify(v);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};


/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '')
    + this.namespace
    + (useColors ? ' %c' : ' ')
    + args[0]
    + (useColors ? '%c ' : ' ')
    + '+' + exports.humanize(this.diff);

  if (!useColors) return;

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit')

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function(match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch(e) {}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  var r;
  try {
    r = exports.storage.debug;
  } catch(e) {}

  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = process.env.DEBUG;
  }

  return r;
}

/**
 * Enable namespaces listed in `localStorage.debug` initially.
 */

exports.enable(load());

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
  try {
    return window.localStorage;
  } catch (e) {}
}

}).call(this,require('_process'))
}).apply(this, arguments);

},{"./debug":413,"_process":235}],413:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/socket.io-client/node_modules/debug/src/debug.js", module);
(function(){

/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = require('ms');

/**
 * Active `debug` instances.
 */
exports.instances = [];

/**
 * The currently active debug mode names, and names to skip.
 */

exports.names = [];
exports.skips = [];

/**
 * Map of special "%n" handling functions, for the debug "format" argument.
 *
 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
 */

exports.formatters = {};

/**
 * Select a color.
 * @param {String} namespace
 * @return {Number}
 * @api private
 */

function selectColor(namespace) {
  var hash = 0, i;

  for (i in namespace) {
    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
    hash |= 0; // Convert to 32bit integer
  }

  return exports.colors[Math.abs(hash) % exports.colors.length];
}

/**
 * Create a debugger with the given `namespace`.
 *
 * @param {String} namespace
 * @return {Function}
 * @api public
 */

function createDebug(namespace) {

  var prevTime;

  function debug() {
    // disabled?
    if (!debug.enabled) return;

    var self = debug;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // turn the `arguments` into a proper Array
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %O
      args.unshift('%O');
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    // apply env-specific formatting (colors, etc.)
    exports.formatArgs.call(self, args);

    var logFn = debug.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }

  debug.namespace = namespace;
  debug.enabled = exports.enabled(namespace);
  debug.useColors = exports.useColors();
  debug.color = selectColor(namespace);
  debug.destroy = destroy;

  // env-specific initialization logic for debug instances
  if ('function' === typeof exports.init) {
    exports.init(debug);
  }

  exports.instances.push(debug);

  return debug;
}

function destroy () {
  var index = exports.instances.indexOf(this);
  if (index !== -1) {
    exports.instances.splice(index, 1);
    return true;
  } else {
    return false;
  }
}

/**
 * Enables a debug mode by namespaces. This can include modes
 * separated by a colon and wildcards.
 *
 * @param {String} namespaces
 * @api public
 */

function enable(namespaces) {
  exports.save(namespaces);

  exports.names = [];
  exports.skips = [];

  var i;
  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
  var len = split.length;

  for (i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }

  for (i = 0; i < exports.instances.length; i++) {
    var instance = exports.instances[i];
    instance.enabled = exports.enabled(instance.namespace);
  }
}

/**
 * Disable debug output.
 *
 * @api public
 */

function disable() {
  exports.enable('');
}

/**
 * Returns true if the given mode name is enabled, false otherwise.
 *
 * @param {String} name
 * @return {Boolean}
 * @api public
 */

function enabled(name) {
  if (name[name.length - 1] === '*') {
    return true;
  }
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
 * Coerce `val`.
 *
 * @param {Mixed} val
 * @return {Mixed}
 * @api private
 */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}

}).apply(this, arguments);

},{"ms":231}],414:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/socket.io-parser/binary.js", module);
(function(){
/*global Blob,File*/

/**
 * Module requirements
 */

var isArray = require('isarray');
var isBuf = require('./is-buffer');
var toString = Object.prototype.toString;
var withNativeBlob = typeof Blob === 'function' || (typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]');
var withNativeFile = typeof File === 'function' || (typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]');

/**
 * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.
 * Anything with blobs or files should be fed through removeBlobs before coming
 * here.
 *
 * @param {Object} packet - socket.io event packet
 * @return {Object} with deconstructed packet and list of buffers
 * @api public
 */

exports.deconstructPacket = function(packet) {
  var buffers = [];
  var packetData = packet.data;
  var pack = packet;
  pack.data = _deconstructPacket(packetData, buffers);
  pack.attachments = buffers.length; // number of binary 'attachments'
  return {packet: pack, buffers: buffers};
};

function _deconstructPacket(data, buffers) {
  if (!data) return data;

  if (isBuf(data)) {
    var placeholder = { _placeholder: true, num: buffers.length };
    buffers.push(data);
    return placeholder;
  } else if (isArray(data)) {
    var newData = new Array(data.length);
    for (var i = 0; i < data.length; i++) {
      newData[i] = _deconstructPacket(data[i], buffers);
    }
    return newData;
  } else if (typeof data === 'object' && !(data instanceof Date)) {
    var newData = {};
    for (var key in data) {
      newData[key] = _deconstructPacket(data[key], buffers);
    }
    return newData;
  }
  return data;
}

/**
 * Reconstructs a binary packet from its placeholder packet and buffers
 *
 * @param {Object} packet - event packet with placeholders
 * @param {Array} buffers - binary buffers to put in placeholder positions
 * @return {Object} reconstructed packet
 * @api public
 */

exports.reconstructPacket = function(packet, buffers) {
  packet.data = _reconstructPacket(packet.data, buffers);
  packet.attachments = undefined; // no longer useful
  return packet;
};

function _reconstructPacket(data, buffers) {
  if (!data) return data;

  if (data && data._placeholder) {
    return buffers[data.num]; // appropriate buffer (should be natural order anyway)
  } else if (isArray(data)) {
    for (var i = 0; i < data.length; i++) {
      data[i] = _reconstructPacket(data[i], buffers);
    }
  } else if (typeof data === 'object') {
    for (var key in data) {
      data[key] = _reconstructPacket(data[key], buffers);
    }
  }

  return data;
}

/**
 * Asynchronously removes Blobs or Files from data via
 * FileReader's readAsArrayBuffer method. Used before encoding
 * data as msgpack. Calls callback with the blobless data.
 *
 * @param {Object} data
 * @param {Function} callback
 * @api private
 */

exports.removeBlobs = function(data, callback) {
  function _removeBlobs(obj, curKey, containingObject) {
    if (!obj) return obj;

    // convert any blob
    if ((withNativeBlob && obj instanceof Blob) ||
        (withNativeFile && obj instanceof File)) {
      pendingBlobs++;

      // async filereader
      var fileReader = new FileReader();
      fileReader.onload = function() { // this.result == arraybuffer
        if (containingObject) {
          containingObject[curKey] = this.result;
        }
        else {
          bloblessData = this.result;
        }

        // if nothing pending its callback time
        if(! --pendingBlobs) {
          callback(bloblessData);
        }
      };

      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer
    } else if (isArray(obj)) { // handle array
      for (var i = 0; i < obj.length; i++) {
        _removeBlobs(obj[i], i, obj);
      }
    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object
      for (var key in obj) {
        _removeBlobs(obj[key], key, obj);
      }
    }
  }

  var pendingBlobs = 0;
  var bloblessData = data;
  _removeBlobs(bloblessData);
  if (!pendingBlobs) {
    callback(bloblessData);
  }
};

}).apply(this, arguments);

},{"./is-buffer":416,"isarray":419}],415:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/socket.io-parser/index.js", module);
(function(){

/**
 * Module dependencies.
 */

var debug = require('debug')('socket.io-parser');
var Emitter = require('component-emitter');
var binary = require('./binary');
var isArray = require('isarray');
var isBuf = require('./is-buffer');

/**
 * Protocol version.
 *
 * @api public
 */

exports.protocol = 4;

/**
 * Packet types.
 *
 * @api public
 */

exports.types = [
  'CONNECT',
  'DISCONNECT',
  'EVENT',
  'ACK',
  'ERROR',
  'BINARY_EVENT',
  'BINARY_ACK'
];

/**
 * Packet type `connect`.
 *
 * @api public
 */

exports.CONNECT = 0;

/**
 * Packet type `disconnect`.
 *
 * @api public
 */

exports.DISCONNECT = 1;

/**
 * Packet type `event`.
 *
 * @api public
 */

exports.EVENT = 2;

/**
 * Packet type `ack`.
 *
 * @api public
 */

exports.ACK = 3;

/**
 * Packet type `error`.
 *
 * @api public
 */

exports.ERROR = 4;

/**
 * Packet type 'binary event'
 *
 * @api public
 */

exports.BINARY_EVENT = 5;

/**
 * Packet type `binary ack`. For acks with binary arguments.
 *
 * @api public
 */

exports.BINARY_ACK = 6;

/**
 * Encoder constructor.
 *
 * @api public
 */

exports.Encoder = Encoder;

/**
 * Decoder constructor.
 *
 * @api public
 */

exports.Decoder = Decoder;

/**
 * A socket.io Encoder instance
 *
 * @api public
 */

function Encoder() {}

var ERROR_PACKET = exports.ERROR + '"encode error"';

/**
 * Encode a packet as a single string if non-binary, or as a
 * buffer sequence, depending on packet type.
 *
 * @param {Object} obj - packet object
 * @param {Function} callback - function to handle encodings (likely engine.write)
 * @return Calls callback with Array of encodings
 * @api public
 */

Encoder.prototype.encode = function(obj, callback){
  debug('encoding packet %j', obj);

  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {
    encodeAsBinary(obj, callback);
  } else {
    var encoding = encodeAsString(obj);
    callback([encoding]);
  }
};

/**
 * Encode packet as string.
 *
 * @param {Object} packet
 * @return {String} encoded
 * @api private
 */

function encodeAsString(obj) {

  // first is type
  var str = '' + obj.type;

  // attachments if we have them
  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {
    str += obj.attachments + '-';
  }

  // if we have a namespace other than `/`
  // we append it followed by a comma `,`
  if (obj.nsp && '/' !== obj.nsp) {
    str += obj.nsp + ',';
  }

  // immediately followed by the id
  if (null != obj.id) {
    str += obj.id;
  }

  // json data
  if (null != obj.data) {
    var payload = tryStringify(obj.data);
    if (payload !== false) {
      str += payload;
    } else {
      return ERROR_PACKET;
    }
  }

  debug('encoded %j as %s', obj, str);
  return str;
}

function tryStringify(str) {
  try {
    return JSON.stringify(str);
  } catch(e){
    return false;
  }
}

/**
 * Encode packet as 'buffer sequence' by removing blobs, and
 * deconstructing packet into object with placeholders and
 * a list of buffers.
 *
 * @param {Object} packet
 * @return {Buffer} encoded
 * @api private
 */

function encodeAsBinary(obj, callback) {

  function writeEncoding(bloblessData) {
    var deconstruction = binary.deconstructPacket(bloblessData);
    var pack = encodeAsString(deconstruction.packet);
    var buffers = deconstruction.buffers;

    buffers.unshift(pack); // add packet info to beginning of data list
    callback(buffers); // write all the buffers
  }

  binary.removeBlobs(obj, writeEncoding);
}

/**
 * A socket.io Decoder instance
 *
 * @return {Object} decoder
 * @api public
 */

function Decoder() {
  this.reconstructor = null;
}

/**
 * Mix in `Emitter` with Decoder.
 */

Emitter(Decoder.prototype);

/**
 * Decodes an encoded packet string into packet JSON.
 *
 * @param {String} obj - encoded packet
 * @return {Object} packet
 * @api public
 */

Decoder.prototype.add = function(obj) {
  var packet;
  if (typeof obj === 'string') {
    packet = decodeString(obj);
    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json
      this.reconstructor = new BinaryReconstructor(packet);

      // no attachments, labeled binary but no binary data to follow
      if (this.reconstructor.reconPack.attachments === 0) {
        this.emit('decoded', packet);
      }
    } else { // non-binary full packet
      this.emit('decoded', packet);
    }
  } else if (isBuf(obj) || obj.base64) { // raw binary data
    if (!this.reconstructor) {
      throw new Error('got binary data when not reconstructing a packet');
    } else {
      packet = this.reconstructor.takeBinaryData(obj);
      if (packet) { // received final buffer
        this.reconstructor = null;
        this.emit('decoded', packet);
      }
    }
  } else {
    throw new Error('Unknown type: ' + obj);
  }
};

/**
 * Decode a packet String (JSON data)
 *
 * @param {String} str
 * @return {Object} packet
 * @api private
 */

function decodeString(str) {
  var i = 0;
  // look up type
  var p = {
    type: Number(str.charAt(0))
  };

  if (null == exports.types[p.type]) {
    return error('unknown packet type ' + p.type);
  }

  // look up attachments if type binary
  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {
    var buf = '';
    while (str.charAt(++i) !== '-') {
      buf += str.charAt(i);
      if (i == str.length) break;
    }
    if (buf != Number(buf) || str.charAt(i) !== '-') {
      throw new Error('Illegal attachments');
    }
    p.attachments = Number(buf);
  }

  // look up namespace (if any)
  if ('/' === str.charAt(i + 1)) {
    p.nsp = '';
    while (++i) {
      var c = str.charAt(i);
      if (',' === c) break;
      p.nsp += c;
      if (i === str.length) break;
    }
  } else {
    p.nsp = '/';
  }

  // look up id
  var next = str.charAt(i + 1);
  if ('' !== next && Number(next) == next) {
    p.id = '';
    while (++i) {
      var c = str.charAt(i);
      if (null == c || Number(c) != c) {
        --i;
        break;
      }
      p.id += str.charAt(i);
      if (i === str.length) break;
    }
    p.id = Number(p.id);
  }

  // look up json data
  if (str.charAt(++i)) {
    var payload = tryParse(str.substr(i));
    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));
    if (isPayloadValid) {
      p.data = payload;
    } else {
      return error('invalid payload');
    }
  }

  debug('decoded %s as %j', str, p);
  return p;
}

function tryParse(str) {
  try {
    return JSON.parse(str);
  } catch(e){
    return false;
  }
}

/**
 * Deallocates a parser's resources
 *
 * @api public
 */

Decoder.prototype.destroy = function() {
  if (this.reconstructor) {
    this.reconstructor.finishedReconstruction();
  }
};

/**
 * A manager of a binary event's 'buffer sequence'. Should
 * be constructed whenever a packet of type BINARY_EVENT is
 * decoded.
 *
 * @param {Object} packet
 * @return {BinaryReconstructor} initialized reconstructor
 * @api private
 */

function BinaryReconstructor(packet) {
  this.reconPack = packet;
  this.buffers = [];
}

/**
 * Method to be called when binary data received from connection
 * after a BINARY_EVENT packet.
 *
 * @param {Buffer | ArrayBuffer} binData - the raw binary data received
 * @return {null | Object} returns null if more binary data is expected or
 *   a reconstructed packet object if all buffers have been received.
 * @api private
 */

BinaryReconstructor.prototype.takeBinaryData = function(binData) {
  this.buffers.push(binData);
  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list
    var packet = binary.reconstructPacket(this.reconPack, this.buffers);
    this.finishedReconstruction();
    return packet;
  }
  return null;
};

/**
 * Cleans up binary packet reconstruction variables.
 *
 * @api private
 */

BinaryReconstructor.prototype.finishedReconstruction = function() {
  this.reconPack = null;
  this.buffers = [];
};

function error(msg) {
  return {
    type: exports.ERROR,
    data: 'parser error: ' + msg
  };
}

}).apply(this, arguments);

},{"./binary":414,"./is-buffer":416,"component-emitter":18,"debug":417,"isarray":419}],416:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/socket.io-parser/is-buffer.js", module);
(function(){
(function (Buffer){

module.exports = isBuf;

var withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';
var withNativeArrayBuffer = typeof ArrayBuffer === 'function';

var isView = function (obj) {
  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);
};

/**
 * Returns true if obj is a buffer or an arraybuffer.
 *
 * @api private
 */

function isBuf(obj) {
  return (withNativeBuffer && Buffer.isBuffer(obj)) ||
          (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)));
}

}).call(this,require("buffer").Buffer)
}).apply(this, arguments);

},{"buffer":423}],417:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/socket.io-parser/node_modules/debug/src/browser.js", module);
(function(){
(function (process){
/**
 * This is the web browser implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = require('./debug');
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome
               && 'undefined' != typeof chrome.storage
                  ? chrome.storage.local
                  : localstorage();

/**
 * Colors.
 */

exports.colors = [
  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',
  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',
  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',
  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',
  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',
  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',
  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',
  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',
  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',
  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',
  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
    return true;
  }

  // Internet Explorer and Edge do not support colors.
  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  }

  // is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
    // double check webkit in userAgent just in case we are in a worker
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

exports.formatters.j = function(v) {
  try {
    return JSON.stringify(v);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};


/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '')
    + this.namespace
    + (useColors ? ' %c' : ' ')
    + args[0]
    + (useColors ? '%c ' : ' ')
    + '+' + exports.humanize(this.diff);

  if (!useColors) return;

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit')

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function(match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch(e) {}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  var r;
  try {
    r = exports.storage.debug;
  } catch(e) {}

  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = process.env.DEBUG;
  }

  return r;
}

/**
 * Enable namespaces listed in `localStorage.debug` initially.
 */

exports.enable(load());

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
  try {
    return window.localStorage;
  } catch (e) {}
}

}).call(this,require('_process'))
}).apply(this, arguments);

},{"./debug":418,"_process":235}],418:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/socket.io-parser/node_modules/debug/src/debug.js", module);
(function(){

/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = require('ms');

/**
 * Active `debug` instances.
 */
exports.instances = [];

/**
 * The currently active debug mode names, and names to skip.
 */

exports.names = [];
exports.skips = [];

/**
 * Map of special "%n" handling functions, for the debug "format" argument.
 *
 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
 */

exports.formatters = {};

/**
 * Select a color.
 * @param {String} namespace
 * @return {Number}
 * @api private
 */

function selectColor(namespace) {
  var hash = 0, i;

  for (i in namespace) {
    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
    hash |= 0; // Convert to 32bit integer
  }

  return exports.colors[Math.abs(hash) % exports.colors.length];
}

/**
 * Create a debugger with the given `namespace`.
 *
 * @param {String} namespace
 * @return {Function}
 * @api public
 */

function createDebug(namespace) {

  var prevTime;

  function debug() {
    // disabled?
    if (!debug.enabled) return;

    var self = debug;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // turn the `arguments` into a proper Array
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %O
      args.unshift('%O');
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    // apply env-specific formatting (colors, etc.)
    exports.formatArgs.call(self, args);

    var logFn = debug.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }

  debug.namespace = namespace;
  debug.enabled = exports.enabled(namespace);
  debug.useColors = exports.useColors();
  debug.color = selectColor(namespace);
  debug.destroy = destroy;

  // env-specific initialization logic for debug instances
  if ('function' === typeof exports.init) {
    exports.init(debug);
  }

  exports.instances.push(debug);

  return debug;
}

function destroy () {
  var index = exports.instances.indexOf(this);
  if (index !== -1) {
    exports.instances.splice(index, 1);
    return true;
  } else {
    return false;
  }
}

/**
 * Enables a debug mode by namespaces. This can include modes
 * separated by a colon and wildcards.
 *
 * @param {String} namespaces
 * @api public
 */

function enable(namespaces) {
  exports.save(namespaces);

  exports.names = [];
  exports.skips = [];

  var i;
  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
  var len = split.length;

  for (i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }

  for (i = 0; i < exports.instances.length; i++) {
    var instance = exports.instances[i];
    instance.enabled = exports.enabled(instance.namespace);
  }
}

/**
 * Disable debug output.
 *
 * @api public
 */

function disable() {
  exports.enable('');
}

/**
 * Returns true if the given mode name is enabled, false otherwise.
 *
 * @param {String} name
 * @return {Boolean}
 * @api public
 */

function enabled(name) {
  if (name[name.length - 1] === '*') {
    return true;
  }
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
 * Coerce `val`.
 *
 * @param {Mixed} val
 * @return {Mixed}
 * @api private
 */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}

}).apply(this, arguments);

},{"ms":231}],419:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/socket.io-parser/node_modules/isarray/index.js", module);
(function(){
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

}).apply(this, arguments);

},{}],420:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/sourcemapped-stacktrace/dist/sourcemapped-stacktrace.js", module);
(function(){
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["sourceMappedStackTrace"] = factory();
	else
		root["sourceMappedStackTrace"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
	 * sourcemapped-stacktrace.js
	 * created by James Salter <iteration@gmail.com> (2014)
	 *
	 * https://github.com/novocaine/sourcemapped-stacktrace
	 *
	 * Licensed under the New BSD license. See LICENSE or:
	 * http://opensource.org/licenses/BSD-3-Clause
	 */

	/*global define */

	// note we only include source-map-consumer, not the whole source-map library,
	// which includes gear for generating source maps that we don't need
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(source_map_consumer) {

	  var global_mapForUri = {};

	  /**
	   * Re-map entries in a stacktrace using sourcemaps if available.
	   *
	   * @param {Array} stack - Array of strings from the browser's stack
	   *                        representation. Currently only Chrome
	   *                        format is supported.
	   * @param {function} done - Callback invoked with the transformed stacktrace
	   *                          (an Array of Strings) passed as the first
	   *                          argument
	   * @param {Object} [opts] - Optional options object.
	   * @param {Function} [opts.filter] - Filter function applied to each stackTrace line.
	   *                                   Lines which do not pass the filter won't be processesd.
	   * @param {boolean} [opts.cacheGlobally] - Whether to cache sourcemaps globally across multiple calls.
	   * @param {boolean} [opts.sync] - Whether to use synchronous ajax to load the sourcemaps.
	   */
	  var mapStackTrace = function(stack, done, opts) {
	    var lines;
	    var line;
	    var mapForUri = {};
	    var rows = {};
	    var fields;
	    var uri;
	    var expected_fields;
	    var regex;
	    var skip_lines;

	    var fetcher = new Fetcher(opts);

	    if (isChromeOrEdge() || isIE11Plus()) {
	      regex = /^ +at.+\((.*):([0-9]+):([0-9]+)/;
	      expected_fields = 4;
	      // (skip first line containing exception message)
	      skip_lines = 1;
	    } else if (isFirefox() || isSafari()) {
	      regex = /@(.*):([0-9]+):([0-9]+)/;
	      expected_fields = 4;
	      skip_lines = 0;
	    } else {
	      throw new Error("unknown browser :(");
	    }

	    lines = stack.split("\n").slice(skip_lines);

	    for (var i=0; i < lines.length; i++) {
	      line = lines[i];
	      if ( opts && opts.filter && !opts.filter(line) ) continue;
	      
	      fields = line.match(regex);
	      if (fields && fields.length === expected_fields) {
	        rows[i] = fields;
	        uri = fields[1];
	        if (!uri.match(/<anonymous>/)) {
	          fetcher.fetchScript(uri);
	        }
	      }
	    }

	    fetcher.sem.whenReady(function() {
	      var result = processSourceMaps(lines, rows, fetcher.mapForUri);
	      done(result);
	    });
	  };

	  var isChromeOrEdge = function() {
	    return navigator.userAgent.toLowerCase().indexOf('chrome') > -1;
	  };

	  var isFirefox = function() {
	    return navigator.userAgent.toLowerCase().indexOf('firefox') > -1;
	  };  

	  var isSafari = function() {
	    return navigator.userAgent.toLowerCase().indexOf('safari') > -1;
	  };
			
	  var isIE11Plus = function() {
	   	return document.documentMode && document.documentMode >= 11;
	  };


	  var Semaphore = function() {
	    this.count = 0;
	    this.pending = [];
	  };

	  Semaphore.prototype.incr = function() {
	    this.count++;
	  };

	  Semaphore.prototype.decr = function() {
	    this.count--;
	    this.flush();
	  };

	  Semaphore.prototype.whenReady = function(fn) {
	    this.pending.push(fn);
	    this.flush();
	  };

	  Semaphore.prototype.flush = function() {
	    if (this.count === 0) {
	        this.pending.forEach(function(fn) { fn(); });
	        this.pending = [];
	    }
	  };


	  var Fetcher = function(opts) {
	    this.sem = new Semaphore();
	    this.sync = opts && opts.sync;
	    this.mapForUri = opts && opts.cacheGlobally ? global_mapForUri : {};
	  };

	  Fetcher.prototype.ajax = function(uri, callback) {
	    var xhr = createXMLHTTPObject();
	    var that = this;
	    xhr.onreadystatechange = function() {
	      if (xhr.readyState == 4) {
	        callback.call(that, xhr, uri);
	      }
	    };
	    xhr.open("GET", uri, !this.sync);
	    xhr.send();
	  }

	  Fetcher.prototype.fetchScript = function(uri) {
	    if (!(uri in this.mapForUri)) {
	      this.sem.incr();
	      this.mapForUri[uri] = null;
	    } else {
	      return;
	    }

	    this.ajax(uri, this.onScriptLoad);
	  };

	  var absUrlRegex = new RegExp('^(?:[a-z]+:)?//', 'i');

	  Fetcher.prototype.onScriptLoad = function(xhr, uri) {
	    if (xhr.status === 200 || (uri.slice(0, 7) === "file://" && xhr.status === 0)) {
	      // find .map in file.
	      //
	      // attempt to find it at the very end of the file, but tolerate trailing
	      // whitespace inserted by some packers.
	      var match = xhr.responseText.match("//# [s]ourceMappingURL=(.*)[\\s]*$", "m");
	      if (match && match.length === 2) {
	        // get the map
	        var mapUri = match[1];

	        var embeddedSourceMap = mapUri.match("data:application/json;(charset=[^;]+;)?base64,(.*)");

	        if (embeddedSourceMap && embeddedSourceMap[2]) {
	          this.mapForUri[uri] = new source_map_consumer.SourceMapConsumer(atob(embeddedSourceMap[2]));
	          this.sem.decr();
	        } else {
	          if (!absUrlRegex.test(mapUri)) {
	            // relative url; according to sourcemaps spec is 'source origin'
	            var origin;
	            var lastSlash = uri.lastIndexOf('/');
	            if (lastSlash !== -1) {
	              origin = uri.slice(0, lastSlash + 1);
	              mapUri = origin + mapUri;
	              // note if lastSlash === -1, actual script uri has no slash
	              // somehow, so no way to use it as a prefix... we give up and try
	              // as absolute
	            }
	          }

	          this.ajax(mapUri, function(xhr) {
	            if (xhr.status === 200 || (mapUri.slice(0, 7) === "file://" && xhr.status === 0)) {
	              this.mapForUri[uri] = new source_map_consumer.SourceMapConsumer(xhr.responseText);
	            }
	            this.sem.decr();
	          });
	        }
	      } else {
	        // no map
	        this.sem.decr();
	      }
	    } else {
	      // HTTP error fetching uri of the script
	      this.sem.decr();
	    }
	  };

	  var processSourceMaps = function(lines, rows, mapForUri) {
	    var result = [];
	    var map;
	    for (var i=0; i < lines.length; i++) {
	      var row = rows[i];
	      if (row) {
	        var uri = row[1];
	        var line = parseInt(row[2], 10);
	        var column = parseInt(row[3], 10);
	        map = mapForUri[uri];

	        if (map) {
	          // we think we have a map for that uri. call source-map library
	          var origPos = map.originalPositionFor(
	            { line: line, column: column });
	          result.push(formatOriginalPosition(origPos.source,
	            origPos.line, origPos.column, origPos.name || origName(lines[i])));
	        } else {
	          // we can't find a map for that url, but we parsed the row.
	          // reformat unchanged line for consistency with the sourcemapped
	          // lines.
	          result.push(formatOriginalPosition(uri, line, column, origName(lines[i])));
	        }
	      } else {
	        // we weren't able to parse the row, push back what we were given
	        result.push(lines[i]);
	      }
	    }

	    return result;
	  };

	  function origName(origLine) {
	    var match = String(origLine).match((isChromeOrEdge() || isIE11Plus()) ?
	      / +at +([^ ]*).*/ :
	      /([^@]*)@.*/);
	    return match && match[1];
	  }

	  var formatOriginalPosition = function(source, line, column, name) {
	    // mimic chrome's format
	    return "    at " + (name ? name : "(unknown)") +
	      " (" + source + ":" + line + ":" + column + ")";
	  };

	  // xmlhttprequest boilerplate
	  var XMLHttpFactories = [
		function () {return new XMLHttpRequest();},
		function () {return new ActiveXObject("Msxml2.XMLHTTP");},
		function () {return new ActiveXObject("Msxml3.XMLHTTP");},
		function () {return new ActiveXObject("Microsoft.XMLHTTP");}
	  ];

	  function createXMLHTTPObject() {
	      var xmlhttp = false;
	      for (var i=0;i<XMLHttpFactories.length;i++) {
	          try {
	              xmlhttp = XMLHttpFactories[i]();
	          }
	          catch (e) {
	              continue;
	          }
	          break;
	      }
	      return xmlhttp;
	  }

	  return {
	    mapStackTrace: mapStackTrace
	  }
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	/* -*- Mode: js; js-indent-level: 2; -*- */
	/*
	 * Copyright 2011 Mozilla Foundation and contributors
	 * Licensed under the New BSD license. See LICENSE or:
	 * http://opensource.org/licenses/BSD-3-Clause
	 */

	var util = __webpack_require__(2);
	var binarySearch = __webpack_require__(3);
	var ArraySet = __webpack_require__(4).ArraySet;
	var base64VLQ = __webpack_require__(5);
	var quickSort = __webpack_require__(7).quickSort;

	function SourceMapConsumer(aSourceMap) {
	  var sourceMap = aSourceMap;
	  if (typeof aSourceMap === 'string') {
	    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ''));
	  }

	  return sourceMap.sections != null
	    ? new IndexedSourceMapConsumer(sourceMap)
	    : new BasicSourceMapConsumer(sourceMap);
	}

	SourceMapConsumer.fromSourceMap = function(aSourceMap) {
	  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);
	}

	/**
	 * The version of the source mapping spec that we are consuming.
	 */
	SourceMapConsumer.prototype._version = 3;

	// `__generatedMappings` and `__originalMappings` are arrays that hold the
	// parsed mapping coordinates from the source map's "mappings" attribute. They
	// are lazily instantiated, accessed via the `_generatedMappings` and
	// `_originalMappings` getters respectively, and we only parse the mappings
	// and create these arrays once queried for a source location. We jump through
	// these hoops because there can be many thousands of mappings, and parsing
	// them is expensive, so we only want to do it if we must.
	//
	// Each object in the arrays is of the form:
	//
	//     {
	//       generatedLine: The line number in the generated code,
	//       generatedColumn: The column number in the generated code,
	//       source: The path to the original source file that generated this
	//               chunk of code,
	//       originalLine: The line number in the original source that
	//                     corresponds to this chunk of generated code,
	//       originalColumn: The column number in the original source that
	//                       corresponds to this chunk of generated code,
	//       name: The name of the original symbol which generated this chunk of
	//             code.
	//     }
	//
	// All properties except for `generatedLine` and `generatedColumn` can be
	// `null`.
	//
	// `_generatedMappings` is ordered by the generated positions.
	//
	// `_originalMappings` is ordered by the original positions.

	SourceMapConsumer.prototype.__generatedMappings = null;
	Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {
	  get: function () {
	    if (!this.__generatedMappings) {
	      this._parseMappings(this._mappings, this.sourceRoot);
	    }

	    return this.__generatedMappings;
	  }
	});

	SourceMapConsumer.prototype.__originalMappings = null;
	Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {
	  get: function () {
	    if (!this.__originalMappings) {
	      this._parseMappings(this._mappings, this.sourceRoot);
	    }

	    return this.__originalMappings;
	  }
	});

	SourceMapConsumer.prototype._charIsMappingSeparator =
	  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {
	    var c = aStr.charAt(index);
	    return c === ";" || c === ",";
	  };

	/**
	 * Parse the mappings in a string in to a data structure which we can easily
	 * query (the ordered arrays in the `this.__generatedMappings` and
	 * `this.__originalMappings` properties).
	 */
	SourceMapConsumer.prototype._parseMappings =
	  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
	    throw new Error("Subclasses must implement _parseMappings");
	  };

	SourceMapConsumer.GENERATED_ORDER = 1;
	SourceMapConsumer.ORIGINAL_ORDER = 2;

	SourceMapConsumer.GREATEST_LOWER_BOUND = 1;
	SourceMapConsumer.LEAST_UPPER_BOUND = 2;

	/**
	 * Iterate over each mapping between an original source/line/column and a
	 * generated line/column in this source map.
	 *
	 * @param Function aCallback
	 *        The function that is called with each mapping.
	 * @param Object aContext
	 *        Optional. If specified, this object will be the value of `this` every
	 *        time that `aCallback` is called.
	 * @param aOrder
	 *        Either `SourceMapConsumer.GENERATED_ORDER` or
	 *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to
	 *        iterate over the mappings sorted by the generated file's line/column
	 *        order or the original's source/line/column order, respectively. Defaults to
	 *        `SourceMapConsumer.GENERATED_ORDER`.
	 */
	SourceMapConsumer.prototype.eachMapping =
	  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {
	    var context = aContext || null;
	    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;

	    var mappings;
	    switch (order) {
	    case SourceMapConsumer.GENERATED_ORDER:
	      mappings = this._generatedMappings;
	      break;
	    case SourceMapConsumer.ORIGINAL_ORDER:
	      mappings = this._originalMappings;
	      break;
	    default:
	      throw new Error("Unknown order of iteration.");
	    }

	    var sourceRoot = this.sourceRoot;
	    mappings.map(function (mapping) {
	      var source = mapping.source === null ? null : this._sources.at(mapping.source);
	      if (source != null && sourceRoot != null) {
	        source = util.join(sourceRoot, source);
	      }
	      return {
	        source: source,
	        generatedLine: mapping.generatedLine,
	        generatedColumn: mapping.generatedColumn,
	        originalLine: mapping.originalLine,
	        originalColumn: mapping.originalColumn,
	        name: mapping.name === null ? null : this._names.at(mapping.name)
	      };
	    }, this).forEach(aCallback, context);
	  };

	/**
	 * Returns all generated line and column information for the original source,
	 * line, and column provided. If no column is provided, returns all mappings
	 * corresponding to a either the line we are searching for or the next
	 * closest line that has any mappings. Otherwise, returns all mappings
	 * corresponding to the given line and either the column we are searching for
	 * or the next closest column that has any offsets.
	 *
	 * The only argument is an object with the following properties:
	 *
	 *   - source: The filename of the original source.
	 *   - line: The line number in the original source.
	 *   - column: Optional. the column number in the original source.
	 *
	 * and an array of objects is returned, each with the following properties:
	 *
	 *   - line: The line number in the generated source, or null.
	 *   - column: The column number in the generated source, or null.
	 */
	SourceMapConsumer.prototype.allGeneratedPositionsFor =
	  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {
	    var line = util.getArg(aArgs, 'line');

	    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping
	    // returns the index of the closest mapping less than the needle. By
	    // setting needle.originalColumn to 0, we thus find the last mapping for
	    // the given line, provided such a mapping exists.
	    var needle = {
	      source: util.getArg(aArgs, 'source'),
	      originalLine: line,
	      originalColumn: util.getArg(aArgs, 'column', 0)
	    };

	    if (this.sourceRoot != null) {
	      needle.source = util.relative(this.sourceRoot, needle.source);
	    }
	    if (!this._sources.has(needle.source)) {
	      return [];
	    }
	    needle.source = this._sources.indexOf(needle.source);

	    var mappings = [];

	    var index = this._findMapping(needle,
	                                  this._originalMappings,
	                                  "originalLine",
	                                  "originalColumn",
	                                  util.compareByOriginalPositions,
	                                  binarySearch.LEAST_UPPER_BOUND);
	    if (index >= 0) {
	      var mapping = this._originalMappings[index];

	      if (aArgs.column === undefined) {
	        var originalLine = mapping.originalLine;

	        // Iterate until either we run out of mappings, or we run into
	        // a mapping for a different line than the one we found. Since
	        // mappings are sorted, this is guaranteed to find all mappings for
	        // the line we found.
	        while (mapping && mapping.originalLine === originalLine) {
	          mappings.push({
	            line: util.getArg(mapping, 'generatedLine', null),
	            column: util.getArg(mapping, 'generatedColumn', null),
	            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
	          });

	          mapping = this._originalMappings[++index];
	        }
	      } else {
	        var originalColumn = mapping.originalColumn;

	        // Iterate until either we run out of mappings, or we run into
	        // a mapping for a different line than the one we were searching for.
	        // Since mappings are sorted, this is guaranteed to find all mappings for
	        // the line we are searching for.
	        while (mapping &&
	               mapping.originalLine === line &&
	               mapping.originalColumn == originalColumn) {
	          mappings.push({
	            line: util.getArg(mapping, 'generatedLine', null),
	            column: util.getArg(mapping, 'generatedColumn', null),
	            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
	          });

	          mapping = this._originalMappings[++index];
	        }
	      }
	    }

	    return mappings;
	  };

	exports.SourceMapConsumer = SourceMapConsumer;

	/**
	 * A BasicSourceMapConsumer instance represents a parsed source map which we can
	 * query for information about the original file positions by giving it a file
	 * position in the generated source.
	 *
	 * The only parameter is the raw source map (either as a JSON string, or
	 * already parsed to an object). According to the spec, source maps have the
	 * following attributes:
	 *
	 *   - version: Which version of the source map spec this map is following.
	 *   - sources: An array of URLs to the original source files.
	 *   - names: An array of identifiers which can be referrenced by individual mappings.
	 *   - sourceRoot: Optional. The URL root from which all sources are relative.
	 *   - sourcesContent: Optional. An array of contents of the original source files.
	 *   - mappings: A string of base64 VLQs which contain the actual mappings.
	 *   - file: Optional. The generated file this source map is associated with.
	 *
	 * Here is an example source map, taken from the source map spec[0]:
	 *
	 *     {
	 *       version : 3,
	 *       file: "out.js",
	 *       sourceRoot : "",
	 *       sources: ["foo.js", "bar.js"],
	 *       names: ["src", "maps", "are", "fun"],
	 *       mappings: "AA,AB;;ABCDE;"
	 *     }
	 *
	 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#
	 */
	function BasicSourceMapConsumer(aSourceMap) {
	  var sourceMap = aSourceMap;
	  if (typeof aSourceMap === 'string') {
	    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ''));
	  }

	  var version = util.getArg(sourceMap, 'version');
	  var sources = util.getArg(sourceMap, 'sources');
	  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which
	  // requires the array) to play nice here.
	  var names = util.getArg(sourceMap, 'names', []);
	  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);
	  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);
	  var mappings = util.getArg(sourceMap, 'mappings');
	  var file = util.getArg(sourceMap, 'file', null);

	  // Once again, Sass deviates from the spec and supplies the version as a
	  // string rather than a number, so we use loose equality checking here.
	  if (version != this._version) {
	    throw new Error('Unsupported version: ' + version);
	  }

	  sources = sources
	    .map(String)
	    // Some source maps produce relative source paths like "./foo.js" instead of
	    // "foo.js".  Normalize these first so that future comparisons will succeed.
	    // See bugzil.la/1090768.
	    .map(util.normalize)
	    // Always ensure that absolute sources are internally stored relative to
	    // the source root, if the source root is absolute. Not doing this would
	    // be particularly problematic when the source root is a prefix of the
	    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.
	    .map(function (source) {
	      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)
	        ? util.relative(sourceRoot, source)
	        : source;
	    });

	  // Pass `true` below to allow duplicate names and sources. While source maps
	  // are intended to be compressed and deduplicated, the TypeScript compiler
	  // sometimes generates source maps with duplicates in them. See Github issue
	  // #72 and bugzil.la/889492.
	  this._names = ArraySet.fromArray(names.map(String), true);
	  this._sources = ArraySet.fromArray(sources, true);

	  this.sourceRoot = sourceRoot;
	  this.sourcesContent = sourcesContent;
	  this._mappings = mappings;
	  this.file = file;
	}

	BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
	BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;

	/**
	 * Create a BasicSourceMapConsumer from a SourceMapGenerator.
	 *
	 * @param SourceMapGenerator aSourceMap
	 *        The source map that will be consumed.
	 * @returns BasicSourceMapConsumer
	 */
	BasicSourceMapConsumer.fromSourceMap =
	  function SourceMapConsumer_fromSourceMap(aSourceMap) {
	    var smc = Object.create(BasicSourceMapConsumer.prototype);

	    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);
	    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);
	    smc.sourceRoot = aSourceMap._sourceRoot;
	    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),
	                                                            smc.sourceRoot);
	    smc.file = aSourceMap._file;

	    // Because we are modifying the entries (by converting string sources and
	    // names to indices into the sources and names ArraySets), we have to make
	    // a copy of the entry or else bad things happen. Shared mutable state
	    // strikes again! See github issue #191.

	    var generatedMappings = aSourceMap._mappings.toArray().slice();
	    var destGeneratedMappings = smc.__generatedMappings = [];
	    var destOriginalMappings = smc.__originalMappings = [];

	    for (var i = 0, length = generatedMappings.length; i < length; i++) {
	      var srcMapping = generatedMappings[i];
	      var destMapping = new Mapping;
	      destMapping.generatedLine = srcMapping.generatedLine;
	      destMapping.generatedColumn = srcMapping.generatedColumn;

	      if (srcMapping.source) {
	        destMapping.source = sources.indexOf(srcMapping.source);
	        destMapping.originalLine = srcMapping.originalLine;
	        destMapping.originalColumn = srcMapping.originalColumn;

	        if (srcMapping.name) {
	          destMapping.name = names.indexOf(srcMapping.name);
	        }

	        destOriginalMappings.push(destMapping);
	      }

	      destGeneratedMappings.push(destMapping);
	    }

	    quickSort(smc.__originalMappings, util.compareByOriginalPositions);

	    return smc;
	  };

	/**
	 * The version of the source mapping spec that we are consuming.
	 */
	BasicSourceMapConsumer.prototype._version = 3;

	/**
	 * The list of original sources.
	 */
	Object.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {
	  get: function () {
	    return this._sources.toArray().map(function (s) {
	      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;
	    }, this);
	  }
	});

	/**
	 * Provide the JIT with a nice shape / hidden class.
	 */
	function Mapping() {
	  this.generatedLine = 0;
	  this.generatedColumn = 0;
	  this.source = null;
	  this.originalLine = null;
	  this.originalColumn = null;
	  this.name = null;
	}

	/**
	 * Parse the mappings in a string in to a data structure which we can easily
	 * query (the ordered arrays in the `this.__generatedMappings` and
	 * `this.__originalMappings` properties).
	 */
	BasicSourceMapConsumer.prototype._parseMappings =
	  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
	    var generatedLine = 1;
	    var previousGeneratedColumn = 0;
	    var previousOriginalLine = 0;
	    var previousOriginalColumn = 0;
	    var previousSource = 0;
	    var previousName = 0;
	    var length = aStr.length;
	    var index = 0;
	    var cachedSegments = {};
	    var temp = {};
	    var originalMappings = [];
	    var generatedMappings = [];
	    var mapping, str, segment, end, value;

	    while (index < length) {
	      if (aStr.charAt(index) === ';') {
	        generatedLine++;
	        index++;
	        previousGeneratedColumn = 0;
	      }
	      else if (aStr.charAt(index) === ',') {
	        index++;
	      }
	      else {
	        mapping = new Mapping();
	        mapping.generatedLine = generatedLine;

	        // Because each offset is encoded relative to the previous one,
	        // many segments often have the same encoding. We can exploit this
	        // fact by caching the parsed variable length fields of each segment,
	        // allowing us to avoid a second parse if we encounter the same
	        // segment again.
	        for (end = index; end < length; end++) {
	          if (this._charIsMappingSeparator(aStr, end)) {
	            break;
	          }
	        }
	        str = aStr.slice(index, end);

	        segment = cachedSegments[str];
	        if (segment) {
	          index += str.length;
	        } else {
	          segment = [];
	          while (index < end) {
	            base64VLQ.decode(aStr, index, temp);
	            value = temp.value;
	            index = temp.rest;
	            segment.push(value);
	          }

	          if (segment.length === 2) {
	            throw new Error('Found a source, but no line and column');
	          }

	          if (segment.length === 3) {
	            throw new Error('Found a source and line, but no column');
	          }

	          cachedSegments[str] = segment;
	        }

	        // Generated column.
	        mapping.generatedColumn = previousGeneratedColumn + segment[0];
	        previousGeneratedColumn = mapping.generatedColumn;

	        if (segment.length > 1) {
	          // Original source.
	          mapping.source = previousSource + segment[1];
	          previousSource += segment[1];

	          // Original line.
	          mapping.originalLine = previousOriginalLine + segment[2];
	          previousOriginalLine = mapping.originalLine;
	          // Lines are stored 0-based
	          mapping.originalLine += 1;

	          // Original column.
	          mapping.originalColumn = previousOriginalColumn + segment[3];
	          previousOriginalColumn = mapping.originalColumn;

	          if (segment.length > 4) {
	            // Original name.
	            mapping.name = previousName + segment[4];
	            previousName += segment[4];
	          }
	        }

	        generatedMappings.push(mapping);
	        if (typeof mapping.originalLine === 'number') {
	          originalMappings.push(mapping);
	        }
	      }
	    }

	    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);
	    this.__generatedMappings = generatedMappings;

	    quickSort(originalMappings, util.compareByOriginalPositions);
	    this.__originalMappings = originalMappings;
	  };

	/**
	 * Find the mapping that best matches the hypothetical "needle" mapping that
	 * we are searching for in the given "haystack" of mappings.
	 */
	BasicSourceMapConsumer.prototype._findMapping =
	  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,
	                                         aColumnName, aComparator, aBias) {
	    // To return the position we are searching for, we must first find the
	    // mapping for the given position and then return the opposite position it
	    // points to. Because the mappings are sorted, we can use binary search to
	    // find the best mapping.

	    if (aNeedle[aLineName] <= 0) {
	      throw new TypeError('Line must be greater than or equal to 1, got '
	                          + aNeedle[aLineName]);
	    }
	    if (aNeedle[aColumnName] < 0) {
	      throw new TypeError('Column must be greater than or equal to 0, got '
	                          + aNeedle[aColumnName]);
	    }

	    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);
	  };

	/**
	 * Compute the last column for each generated mapping. The last column is
	 * inclusive.
	 */
	BasicSourceMapConsumer.prototype.computeColumnSpans =
	  function SourceMapConsumer_computeColumnSpans() {
	    for (var index = 0; index < this._generatedMappings.length; ++index) {
	      var mapping = this._generatedMappings[index];

	      // Mappings do not contain a field for the last generated columnt. We
	      // can come up with an optimistic estimate, however, by assuming that
	      // mappings are contiguous (i.e. given two consecutive mappings, the
	      // first mapping ends where the second one starts).
	      if (index + 1 < this._generatedMappings.length) {
	        var nextMapping = this._generatedMappings[index + 1];

	        if (mapping.generatedLine === nextMapping.generatedLine) {
	          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;
	          continue;
	        }
	      }

	      // The last mapping for each line spans the entire line.
	      mapping.lastGeneratedColumn = Infinity;
	    }
	  };

	/**
	 * Returns the original source, line, and column information for the generated
	 * source's line and column positions provided. The only argument is an object
	 * with the following properties:
	 *
	 *   - line: The line number in the generated source.
	 *   - column: The column number in the generated source.
	 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
	 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
	 *     closest element that is smaller than or greater than the one we are
	 *     searching for, respectively, if the exact element cannot be found.
	 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
	 *
	 * and an object is returned with the following properties:
	 *
	 *   - source: The original source file, or null.
	 *   - line: The line number in the original source, or null.
	 *   - column: The column number in the original source, or null.
	 *   - name: The original identifier, or null.
	 */
	BasicSourceMapConsumer.prototype.originalPositionFor =
	  function SourceMapConsumer_originalPositionFor(aArgs) {
	    var needle = {
	      generatedLine: util.getArg(aArgs, 'line'),
	      generatedColumn: util.getArg(aArgs, 'column')
	    };

	    var index = this._findMapping(
	      needle,
	      this._generatedMappings,
	      "generatedLine",
	      "generatedColumn",
	      util.compareByGeneratedPositionsDeflated,
	      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
	    );

	    if (index >= 0) {
	      var mapping = this._generatedMappings[index];

	      if (mapping.generatedLine === needle.generatedLine) {
	        var source = util.getArg(mapping, 'source', null);
	        if (source !== null) {
	          source = this._sources.at(source);
	          if (this.sourceRoot != null) {
	            source = util.join(this.sourceRoot, source);
	          }
	        }
	        var name = util.getArg(mapping, 'name', null);
	        if (name !== null) {
	          name = this._names.at(name);
	        }
	        return {
	          source: source,
	          line: util.getArg(mapping, 'originalLine', null),
	          column: util.getArg(mapping, 'originalColumn', null),
	          name: name
	        };
	      }
	    }

	    return {
	      source: null,
	      line: null,
	      column: null,
	      name: null
	    };
	  };

	/**
	 * Return true if we have the source content for every source in the source
	 * map, false otherwise.
	 */
	BasicSourceMapConsumer.prototype.hasContentsOfAllSources =
	  function BasicSourceMapConsumer_hasContentsOfAllSources() {
	    if (!this.sourcesContent) {
	      return false;
	    }
	    return this.sourcesContent.length >= this._sources.size() &&
	      !this.sourcesContent.some(function (sc) { return sc == null; });
	  };

	/**
	 * Returns the original source content. The only argument is the url of the
	 * original source file. Returns null if no original source content is
	 * available.
	 */
	BasicSourceMapConsumer.prototype.sourceContentFor =
	  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
	    if (!this.sourcesContent) {
	      return null;
	    }

	    if (this.sourceRoot != null) {
	      aSource = util.relative(this.sourceRoot, aSource);
	    }

	    if (this._sources.has(aSource)) {
	      return this.sourcesContent[this._sources.indexOf(aSource)];
	    }

	    var url;
	    if (this.sourceRoot != null
	        && (url = util.urlParse(this.sourceRoot))) {
	      // XXX: file:// URIs and absolute paths lead to unexpected behavior for
	      // many users. We can help them out when they expect file:// URIs to
	      // behave like it would if they were running a local HTTP server. See
	      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.
	      var fileUriAbsPath = aSource.replace(/^file:\/\//, "");
	      if (url.scheme == "file"
	          && this._sources.has(fileUriAbsPath)) {
	        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]
	      }

	      if ((!url.path || url.path == "/")
	          && this._sources.has("/" + aSource)) {
	        return this.sourcesContent[this._sources.indexOf("/" + aSource)];
	      }
	    }

	    // This function is used recursively from
	    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we
	    // don't want to throw if we can't find the source - we just want to
	    // return null, so we provide a flag to exit gracefully.
	    if (nullOnMissing) {
	      return null;
	    }
	    else {
	      throw new Error('"' + aSource + '" is not in the SourceMap.');
	    }
	  };

	/**
	 * Returns the generated line and column information for the original source,
	 * line, and column positions provided. The only argument is an object with
	 * the following properties:
	 *
	 *   - source: The filename of the original source.
	 *   - line: The line number in the original source.
	 *   - column: The column number in the original source.
	 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
	 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
	 *     closest element that is smaller than or greater than the one we are
	 *     searching for, respectively, if the exact element cannot be found.
	 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
	 *
	 * and an object is returned with the following properties:
	 *
	 *   - line: The line number in the generated source, or null.
	 *   - column: The column number in the generated source, or null.
	 */
	BasicSourceMapConsumer.prototype.generatedPositionFor =
	  function SourceMapConsumer_generatedPositionFor(aArgs) {
	    var source = util.getArg(aArgs, 'source');
	    if (this.sourceRoot != null) {
	      source = util.relative(this.sourceRoot, source);
	    }
	    if (!this._sources.has(source)) {
	      return {
	        line: null,
	        column: null,
	        lastColumn: null
	      };
	    }
	    source = this._sources.indexOf(source);

	    var needle = {
	      source: source,
	      originalLine: util.getArg(aArgs, 'line'),
	      originalColumn: util.getArg(aArgs, 'column')
	    };

	    var index = this._findMapping(
	      needle,
	      this._originalMappings,
	      "originalLine",
	      "originalColumn",
	      util.compareByOriginalPositions,
	      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
	    );

	    if (index >= 0) {
	      var mapping = this._originalMappings[index];

	      if (mapping.source === needle.source) {
	        return {
	          line: util.getArg(mapping, 'generatedLine', null),
	          column: util.getArg(mapping, 'generatedColumn', null),
	          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
	        };
	      }
	    }

	    return {
	      line: null,
	      column: null,
	      lastColumn: null
	    };
	  };

	exports.BasicSourceMapConsumer = BasicSourceMapConsumer;

	/**
	 * An IndexedSourceMapConsumer instance represents a parsed source map which
	 * we can query for information. It differs from BasicSourceMapConsumer in
	 * that it takes "indexed" source maps (i.e. ones with a "sections" field) as
	 * input.
	 *
	 * The only parameter is a raw source map (either as a JSON string, or already
	 * parsed to an object). According to the spec for indexed source maps, they
	 * have the following attributes:
	 *
	 *   - version: Which version of the source map spec this map is following.
	 *   - file: Optional. The generated file this source map is associated with.
	 *   - sections: A list of section definitions.
	 *
	 * Each value under the "sections" field has two fields:
	 *   - offset: The offset into the original specified at which this section
	 *       begins to apply, defined as an object with a "line" and "column"
	 *       field.
	 *   - map: A source map definition. This source map could also be indexed,
	 *       but doesn't have to be.
	 *
	 * Instead of the "map" field, it's also possible to have a "url" field
	 * specifying a URL to retrieve a source map from, but that's currently
	 * unsupported.
	 *
	 * Here's an example source map, taken from the source map spec[0], but
	 * modified to omit a section which uses the "url" field.
	 *
	 *  {
	 *    version : 3,
	 *    file: "app.js",
	 *    sections: [{
	 *      offset: {line:100, column:10},
	 *      map: {
	 *        version : 3,
	 *        file: "section.js",
	 *        sources: ["foo.js", "bar.js"],
	 *        names: ["src", "maps", "are", "fun"],
	 *        mappings: "AAAA,E;;ABCDE;"
	 *      }
	 *    }],
	 *  }
	 *
	 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt
	 */
	function IndexedSourceMapConsumer(aSourceMap) {
	  var sourceMap = aSourceMap;
	  if (typeof aSourceMap === 'string') {
	    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ''));
	  }

	  var version = util.getArg(sourceMap, 'version');
	  var sections = util.getArg(sourceMap, 'sections');

	  if (version != this._version) {
	    throw new Error('Unsupported version: ' + version);
	  }

	  this._sources = new ArraySet();
	  this._names = new ArraySet();

	  var lastOffset = {
	    line: -1,
	    column: 0
	  };
	  this._sections = sections.map(function (s) {
	    if (s.url) {
	      // The url field will require support for asynchronicity.
	      // See https://github.com/mozilla/source-map/issues/16
	      throw new Error('Support for url field in sections not implemented.');
	    }
	    var offset = util.getArg(s, 'offset');
	    var offsetLine = util.getArg(offset, 'line');
	    var offsetColumn = util.getArg(offset, 'column');

	    if (offsetLine < lastOffset.line ||
	        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {
	      throw new Error('Section offsets must be ordered and non-overlapping.');
	    }
	    lastOffset = offset;

	    return {
	      generatedOffset: {
	        // The offset fields are 0-based, but we use 1-based indices when
	        // encoding/decoding from VLQ.
	        generatedLine: offsetLine + 1,
	        generatedColumn: offsetColumn + 1
	      },
	      consumer: new SourceMapConsumer(util.getArg(s, 'map'))
	    }
	  });
	}

	IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
	IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;

	/**
	 * The version of the source mapping spec that we are consuming.
	 */
	IndexedSourceMapConsumer.prototype._version = 3;

	/**
	 * The list of original sources.
	 */
	Object.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {
	  get: function () {
	    var sources = [];
	    for (var i = 0; i < this._sections.length; i++) {
	      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {
	        sources.push(this._sections[i].consumer.sources[j]);
	      }
	    }
	    return sources;
	  }
	});

	/**
	 * Returns the original source, line, and column information for the generated
	 * source's line and column positions provided. The only argument is an object
	 * with the following properties:
	 *
	 *   - line: The line number in the generated source.
	 *   - column: The column number in the generated source.
	 *
	 * and an object is returned with the following properties:
	 *
	 *   - source: The original source file, or null.
	 *   - line: The line number in the original source, or null.
	 *   - column: The column number in the original source, or null.
	 *   - name: The original identifier, or null.
	 */
	IndexedSourceMapConsumer.prototype.originalPositionFor =
	  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {
	    var needle = {
	      generatedLine: util.getArg(aArgs, 'line'),
	      generatedColumn: util.getArg(aArgs, 'column')
	    };

	    // Find the section containing the generated position we're trying to map
	    // to an original position.
	    var sectionIndex = binarySearch.search(needle, this._sections,
	      function(needle, section) {
	        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;
	        if (cmp) {
	          return cmp;
	        }

	        return (needle.generatedColumn -
	                section.generatedOffset.generatedColumn);
	      });
	    var section = this._sections[sectionIndex];

	    if (!section) {
	      return {
	        source: null,
	        line: null,
	        column: null,
	        name: null
	      };
	    }

	    return section.consumer.originalPositionFor({
	      line: needle.generatedLine -
	        (section.generatedOffset.generatedLine - 1),
	      column: needle.generatedColumn -
	        (section.generatedOffset.generatedLine === needle.generatedLine
	         ? section.generatedOffset.generatedColumn - 1
	         : 0),
	      bias: aArgs.bias
	    });
	  };

	/**
	 * Return true if we have the source content for every source in the source
	 * map, false otherwise.
	 */
	IndexedSourceMapConsumer.prototype.hasContentsOfAllSources =
	  function IndexedSourceMapConsumer_hasContentsOfAllSources() {
	    return this._sections.every(function (s) {
	      return s.consumer.hasContentsOfAllSources();
	    });
	  };

	/**
	 * Returns the original source content. The only argument is the url of the
	 * original source file. Returns null if no original source content is
	 * available.
	 */
	IndexedSourceMapConsumer.prototype.sourceContentFor =
	  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
	    for (var i = 0; i < this._sections.length; i++) {
	      var section = this._sections[i];

	      var content = section.consumer.sourceContentFor(aSource, true);
	      if (content) {
	        return content;
	      }
	    }
	    if (nullOnMissing) {
	      return null;
	    }
	    else {
	      throw new Error('"' + aSource + '" is not in the SourceMap.');
	    }
	  };

	/**
	 * Returns the generated line and column information for the original source,
	 * line, and column positions provided. The only argument is an object with
	 * the following properties:
	 *
	 *   - source: The filename of the original source.
	 *   - line: The line number in the original source.
	 *   - column: The column number in the original source.
	 *
	 * and an object is returned with the following properties:
	 *
	 *   - line: The line number in the generated source, or null.
	 *   - column: The column number in the generated source, or null.
	 */
	IndexedSourceMapConsumer.prototype.generatedPositionFor =
	  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {
	    for (var i = 0; i < this._sections.length; i++) {
	      var section = this._sections[i];

	      // Only consider this section if the requested source is in the list of
	      // sources of the consumer.
	      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {
	        continue;
	      }
	      var generatedPosition = section.consumer.generatedPositionFor(aArgs);
	      if (generatedPosition) {
	        var ret = {
	          line: generatedPosition.line +
	            (section.generatedOffset.generatedLine - 1),
	          column: generatedPosition.column +
	            (section.generatedOffset.generatedLine === generatedPosition.line
	             ? section.generatedOffset.generatedColumn - 1
	             : 0)
	        };
	        return ret;
	      }
	    }

	    return {
	      line: null,
	      column: null
	    };
	  };

	/**
	 * Parse the mappings in a string in to a data structure which we can easily
	 * query (the ordered arrays in the `this.__generatedMappings` and
	 * `this.__originalMappings` properties).
	 */
	IndexedSourceMapConsumer.prototype._parseMappings =
	  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {
	    this.__generatedMappings = [];
	    this.__originalMappings = [];
	    for (var i = 0; i < this._sections.length; i++) {
	      var section = this._sections[i];
	      var sectionMappings = section.consumer._generatedMappings;
	      for (var j = 0; j < sectionMappings.length; j++) {
	        var mapping = sectionMappings[j];

	        var source = section.consumer._sources.at(mapping.source);
	        if (section.consumer.sourceRoot !== null) {
	          source = util.join(section.consumer.sourceRoot, source);
	        }
	        this._sources.add(source);
	        source = this._sources.indexOf(source);

	        var name = section.consumer._names.at(mapping.name);
	        this._names.add(name);
	        name = this._names.indexOf(name);

	        // The mappings coming from the consumer for the section have
	        // generated positions relative to the start of the section, so we
	        // need to offset them to be relative to the start of the concatenated
	        // generated file.
	        var adjustedMapping = {
	          source: source,
	          generatedLine: mapping.generatedLine +
	            (section.generatedOffset.generatedLine - 1),
	          generatedColumn: mapping.generatedColumn +
	            (section.generatedOffset.generatedLine === mapping.generatedLine
	            ? section.generatedOffset.generatedColumn - 1
	            : 0),
	          originalLine: mapping.originalLine,
	          originalColumn: mapping.originalColumn,
	          name: name
	        };

	        this.__generatedMappings.push(adjustedMapping);
	        if (typeof adjustedMapping.originalLine === 'number') {
	          this.__originalMappings.push(adjustedMapping);
	        }
	      }
	    }

	    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);
	    quickSort(this.__originalMappings, util.compareByOriginalPositions);
	  };

	exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;


/***/ },
/* 2 */
/***/ function(module, exports) {

	/* -*- Mode: js; js-indent-level: 2; -*- */
	/*
	 * Copyright 2011 Mozilla Foundation and contributors
	 * Licensed under the New BSD license. See LICENSE or:
	 * http://opensource.org/licenses/BSD-3-Clause
	 */

	/**
	 * This is a helper function for getting values from parameter/options
	 * objects.
	 *
	 * @param args The object we are extracting values from
	 * @param name The name of the property we are getting.
	 * @param defaultValue An optional value to return if the property is missing
	 * from the object. If this is not specified and the property is missing, an
	 * error will be thrown.
	 */
	function getArg(aArgs, aName, aDefaultValue) {
	  if (aName in aArgs) {
	    return aArgs[aName];
	  } else if (arguments.length === 3) {
	    return aDefaultValue;
	  } else {
	    throw new Error('"' + aName + '" is a required argument.');
	  }
	}
	exports.getArg = getArg;

	var urlRegexp = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/;
	var dataUrlRegexp = /^data:.+\,.+$/;

	function urlParse(aUrl) {
	  var match = aUrl.match(urlRegexp);
	  if (!match) {
	    return null;
	  }
	  return {
	    scheme: match[1],
	    auth: match[2],
	    host: match[3],
	    port: match[4],
	    path: match[5]
	  };
	}
	exports.urlParse = urlParse;

	function urlGenerate(aParsedUrl) {
	  var url = '';
	  if (aParsedUrl.scheme) {
	    url += aParsedUrl.scheme + ':';
	  }
	  url += '//';
	  if (aParsedUrl.auth) {
	    url += aParsedUrl.auth + '@';
	  }
	  if (aParsedUrl.host) {
	    url += aParsedUrl.host;
	  }
	  if (aParsedUrl.port) {
	    url += ":" + aParsedUrl.port
	  }
	  if (aParsedUrl.path) {
	    url += aParsedUrl.path;
	  }
	  return url;
	}
	exports.urlGenerate = urlGenerate;

	/**
	 * Normalizes a path, or the path portion of a URL:
	 *
	 * - Replaces consecutive slashes with one slash.
	 * - Removes unnecessary '.' parts.
	 * - Removes unnecessary '<dir>/..' parts.
	 *
	 * Based on code in the Node.js 'path' core module.
	 *
	 * @param aPath The path or url to normalize.
	 */
	function normalize(aPath) {
	  var path = aPath;
	  var url = urlParse(aPath);
	  if (url) {
	    if (!url.path) {
	      return aPath;
	    }
	    path = url.path;
	  }
	  var isAbsolute = exports.isAbsolute(path);

	  var parts = path.split(/\/+/);
	  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {
	    part = parts[i];
	    if (part === '.') {
	      parts.splice(i, 1);
	    } else if (part === '..') {
	      up++;
	    } else if (up > 0) {
	      if (part === '') {
	        // The first part is blank if the path is absolute. Trying to go
	        // above the root is a no-op. Therefore we can remove all '..' parts
	        // directly after the root.
	        parts.splice(i + 1, up);
	        up = 0;
	      } else {
	        parts.splice(i, 2);
	        up--;
	      }
	    }
	  }
	  path = parts.join('/');

	  if (path === '') {
	    path = isAbsolute ? '/' : '.';
	  }

	  if (url) {
	    url.path = path;
	    return urlGenerate(url);
	  }
	  return path;
	}
	exports.normalize = normalize;

	/**
	 * Joins two paths/URLs.
	 *
	 * @param aRoot The root path or URL.
	 * @param aPath The path or URL to be joined with the root.
	 *
	 * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a
	 *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended
	 *   first.
	 * - Otherwise aPath is a path. If aRoot is a URL, then its path portion
	 *   is updated with the result and aRoot is returned. Otherwise the result
	 *   is returned.
	 *   - If aPath is absolute, the result is aPath.
	 *   - Otherwise the two paths are joined with a slash.
	 * - Joining for example 'http://' and 'www.example.com' is also supported.
	 */
	function join(aRoot, aPath) {
	  if (aRoot === "") {
	    aRoot = ".";
	  }
	  if (aPath === "") {
	    aPath = ".";
	  }
	  var aPathUrl = urlParse(aPath);
	  var aRootUrl = urlParse(aRoot);
	  if (aRootUrl) {
	    aRoot = aRootUrl.path || '/';
	  }

	  // `join(foo, '//www.example.org')`
	  if (aPathUrl && !aPathUrl.scheme) {
	    if (aRootUrl) {
	      aPathUrl.scheme = aRootUrl.scheme;
	    }
	    return urlGenerate(aPathUrl);
	  }

	  if (aPathUrl || aPath.match(dataUrlRegexp)) {
	    return aPath;
	  }

	  // `join('http://', 'www.example.com')`
	  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {
	    aRootUrl.host = aPath;
	    return urlGenerate(aRootUrl);
	  }

	  var joined = aPath.charAt(0) === '/'
	    ? aPath
	    : normalize(aRoot.replace(/\/+$/, '') + '/' + aPath);

	  if (aRootUrl) {
	    aRootUrl.path = joined;
	    return urlGenerate(aRootUrl);
	  }
	  return joined;
	}
	exports.join = join;

	exports.isAbsolute = function (aPath) {
	  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);
	};

	/**
	 * Make a path relative to a URL or another path.
	 *
	 * @param aRoot The root path or URL.
	 * @param aPath The path or URL to be made relative to aRoot.
	 */
	function relative(aRoot, aPath) {
	  if (aRoot === "") {
	    aRoot = ".";
	  }

	  aRoot = aRoot.replace(/\/$/, '');

	  // It is possible for the path to be above the root. In this case, simply
	  // checking whether the root is a prefix of the path won't work. Instead, we
	  // need to remove components from the root one by one, until either we find
	  // a prefix that fits, or we run out of components to remove.
	  var level = 0;
	  while (aPath.indexOf(aRoot + '/') !== 0) {
	    var index = aRoot.lastIndexOf("/");
	    if (index < 0) {
	      return aPath;
	    }

	    // If the only part of the root that is left is the scheme (i.e. http://,
	    // file:///, etc.), one or more slashes (/), or simply nothing at all, we
	    // have exhausted all components, so the path is not relative to the root.
	    aRoot = aRoot.slice(0, index);
	    if (aRoot.match(/^([^\/]+:\/)?\/*$/)) {
	      return aPath;
	    }

	    ++level;
	  }

	  // Make sure we add a "../" for each component we removed from the root.
	  return Array(level + 1).join("../") + aPath.substr(aRoot.length + 1);
	}
	exports.relative = relative;

	var supportsNullProto = (function () {
	  var obj = Object.create(null);
	  return !('__proto__' in obj);
	}());

	function identity (s) {
	  return s;
	}

	/**
	 * Because behavior goes wacky when you set `__proto__` on objects, we
	 * have to prefix all the strings in our set with an arbitrary character.
	 *
	 * See https://github.com/mozilla/source-map/pull/31 and
	 * https://github.com/mozilla/source-map/issues/30
	 *
	 * @param String aStr
	 */
	function toSetString(aStr) {
	  if (isProtoString(aStr)) {
	    return '$' + aStr;
	  }

	  return aStr;
	}
	exports.toSetString = supportsNullProto ? identity : toSetString;

	function fromSetString(aStr) {
	  if (isProtoString(aStr)) {
	    return aStr.slice(1);
	  }

	  return aStr;
	}
	exports.fromSetString = supportsNullProto ? identity : fromSetString;

	function isProtoString(s) {
	  if (!s) {
	    return false;
	  }

	  var length = s.length;

	  if (length < 9 /* "__proto__".length */) {
	    return false;
	  }

	  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||
	      s.charCodeAt(length - 2) !== 95  /* '_' */ ||
	      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||
	      s.charCodeAt(length - 4) !== 116 /* 't' */ ||
	      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||
	      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||
	      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||
	      s.charCodeAt(length - 8) !== 95  /* '_' */ ||
	      s.charCodeAt(length - 9) !== 95  /* '_' */) {
	    return false;
	  }

	  for (var i = length - 10; i >= 0; i--) {
	    if (s.charCodeAt(i) !== 36 /* '$' */) {
	      return false;
	    }
	  }

	  return true;
	}

	/**
	 * Comparator between two mappings where the original positions are compared.
	 *
	 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
	 * mappings with the same original source/line/column, but different generated
	 * line and column the same. Useful when searching for a mapping with a
	 * stubbed out mapping.
	 */
	function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {
	  var cmp = mappingA.source - mappingB.source;
	  if (cmp !== 0) {
	    return cmp;
	  }

	  cmp = mappingA.originalLine - mappingB.originalLine;
	  if (cmp !== 0) {
	    return cmp;
	  }

	  cmp = mappingA.originalColumn - mappingB.originalColumn;
	  if (cmp !== 0 || onlyCompareOriginal) {
	    return cmp;
	  }

	  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
	  if (cmp !== 0) {
	    return cmp;
	  }

	  cmp = mappingA.generatedLine - mappingB.generatedLine;
	  if (cmp !== 0) {
	    return cmp;
	  }

	  return mappingA.name - mappingB.name;
	}
	exports.compareByOriginalPositions = compareByOriginalPositions;

	/**
	 * Comparator between two mappings with deflated source and name indices where
	 * the generated positions are compared.
	 *
	 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
	 * mappings with the same generated line and column, but different
	 * source/name/original line and column the same. Useful when searching for a
	 * mapping with a stubbed out mapping.
	 */
	function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {
	  var cmp = mappingA.generatedLine - mappingB.generatedLine;
	  if (cmp !== 0) {
	    return cmp;
	  }

	  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
	  if (cmp !== 0 || onlyCompareGenerated) {
	    return cmp;
	  }

	  cmp = mappingA.source - mappingB.source;
	  if (cmp !== 0) {
	    return cmp;
	  }

	  cmp = mappingA.originalLine - mappingB.originalLine;
	  if (cmp !== 0) {
	    return cmp;
	  }

	  cmp = mappingA.originalColumn - mappingB.originalColumn;
	  if (cmp !== 0) {
	    return cmp;
	  }

	  return mappingA.name - mappingB.name;
	}
	exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;

	function strcmp(aStr1, aStr2) {
	  if (aStr1 === aStr2) {
	    return 0;
	  }

	  if (aStr1 > aStr2) {
	    return 1;
	  }

	  return -1;
	}

	/**
	 * Comparator between two mappings with inflated source and name strings where
	 * the generated positions are compared.
	 */
	function compareByGeneratedPositionsInflated(mappingA, mappingB) {
	  var cmp = mappingA.generatedLine - mappingB.generatedLine;
	  if (cmp !== 0) {
	    return cmp;
	  }

	  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
	  if (cmp !== 0) {
	    return cmp;
	  }

	  cmp = strcmp(mappingA.source, mappingB.source);
	  if (cmp !== 0) {
	    return cmp;
	  }

	  cmp = mappingA.originalLine - mappingB.originalLine;
	  if (cmp !== 0) {
	    return cmp;
	  }

	  cmp = mappingA.originalColumn - mappingB.originalColumn;
	  if (cmp !== 0) {
	    return cmp;
	  }

	  return strcmp(mappingA.name, mappingB.name);
	}
	exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;


/***/ },
/* 3 */
/***/ function(module, exports) {

	/* -*- Mode: js; js-indent-level: 2; -*- */
	/*
	 * Copyright 2011 Mozilla Foundation and contributors
	 * Licensed under the New BSD license. See LICENSE or:
	 * http://opensource.org/licenses/BSD-3-Clause
	 */

	exports.GREATEST_LOWER_BOUND = 1;
	exports.LEAST_UPPER_BOUND = 2;

	/**
	 * Recursive implementation of binary search.
	 *
	 * @param aLow Indices here and lower do not contain the needle.
	 * @param aHigh Indices here and higher do not contain the needle.
	 * @param aNeedle The element being searched for.
	 * @param aHaystack The non-empty array being searched.
	 * @param aCompare Function which takes two elements and returns -1, 0, or 1.
	 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
	 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
	 *     closest element that is smaller than or greater than the one we are
	 *     searching for, respectively, if the exact element cannot be found.
	 */
	function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {
	  // This function terminates when one of the following is true:
	  //
	  //   1. We find the exact element we are looking for.
	  //
	  //   2. We did not find the exact element, but we can return the index of
	  //      the next-closest element.
	  //
	  //   3. We did not find the exact element, and there is no next-closest
	  //      element than the one we are searching for, so we return -1.
	  var mid = Math.floor((aHigh - aLow) / 2) + aLow;
	  var cmp = aCompare(aNeedle, aHaystack[mid], true);
	  if (cmp === 0) {
	    // Found the element we are looking for.
	    return mid;
	  }
	  else if (cmp > 0) {
	    // Our needle is greater than aHaystack[mid].
	    if (aHigh - mid > 1) {
	      // The element is in the upper half.
	      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);
	    }

	    // The exact needle element was not found in this haystack. Determine if
	    // we are in termination case (3) or (2) and return the appropriate thing.
	    if (aBias == exports.LEAST_UPPER_BOUND) {
	      return aHigh < aHaystack.length ? aHigh : -1;
	    } else {
	      return mid;
	    }
	  }
	  else {
	    // Our needle is less than aHaystack[mid].
	    if (mid - aLow > 1) {
	      // The element is in the lower half.
	      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);
	    }

	    // we are in termination case (3) or (2) and return the appropriate thing.
	    if (aBias == exports.LEAST_UPPER_BOUND) {
	      return mid;
	    } else {
	      return aLow < 0 ? -1 : aLow;
	    }
	  }
	}

	/**
	 * This is an implementation of binary search which will always try and return
	 * the index of the closest element if there is no exact hit. This is because
	 * mappings between original and generated line/col pairs are single points,
	 * and there is an implicit region between each of them, so a miss just means
	 * that you aren't on the very start of a region.
	 *
	 * @param aNeedle The element you are looking for.
	 * @param aHaystack The array that is being searched.
	 * @param aCompare A function which takes the needle and an element in the
	 *     array and returns -1, 0, or 1 depending on whether the needle is less
	 *     than, equal to, or greater than the element, respectively.
	 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
	 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
	 *     closest element that is smaller than or greater than the one we are
	 *     searching for, respectively, if the exact element cannot be found.
	 *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.
	 */
	exports.search = function search(aNeedle, aHaystack, aCompare, aBias) {
	  if (aHaystack.length === 0) {
	    return -1;
	  }

	  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,
	                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);
	  if (index < 0) {
	    return -1;
	  }

	  // We have found either the exact element, or the next-closest element than
	  // the one we are searching for. However, there may be more than one such
	  // element. Make sure we always return the smallest of these.
	  while (index - 1 >= 0) {
	    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {
	      break;
	    }
	    --index;
	  }

	  return index;
	};


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/* -*- Mode: js; js-indent-level: 2; -*- */
	/*
	 * Copyright 2011 Mozilla Foundation and contributors
	 * Licensed under the New BSD license. See LICENSE or:
	 * http://opensource.org/licenses/BSD-3-Clause
	 */

	var util = __webpack_require__(2);
	var has = Object.prototype.hasOwnProperty;

	/**
	 * A data structure which is a combination of an array and a set. Adding a new
	 * member is O(1), testing for membership is O(1), and finding the index of an
	 * element is O(1). Removing elements from the set is not supported. Only
	 * strings are supported for membership.
	 */
	function ArraySet() {
	  this._array = [];
	  this._set = Object.create(null);
	}

	/**
	 * Static method for creating ArraySet instances from an existing array.
	 */
	ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {
	  var set = new ArraySet();
	  for (var i = 0, len = aArray.length; i < len; i++) {
	    set.add(aArray[i], aAllowDuplicates);
	  }
	  return set;
	};

	/**
	 * Return how many unique items are in this ArraySet. If duplicates have been
	 * added, than those do not count towards the size.
	 *
	 * @returns Number
	 */
	ArraySet.prototype.size = function ArraySet_size() {
	  return Object.getOwnPropertyNames(this._set).length;
	};

	/**
	 * Add the given string to this set.
	 *
	 * @param String aStr
	 */
	ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {
	  var sStr = util.toSetString(aStr);
	  var isDuplicate = has.call(this._set, sStr);
	  var idx = this._array.length;
	  if (!isDuplicate || aAllowDuplicates) {
	    this._array.push(aStr);
	  }
	  if (!isDuplicate) {
	    this._set[sStr] = idx;
	  }
	};

	/**
	 * Is the given string a member of this set?
	 *
	 * @param String aStr
	 */
	ArraySet.prototype.has = function ArraySet_has(aStr) {
	  var sStr = util.toSetString(aStr);
	  return has.call(this._set, sStr);
	};

	/**
	 * What is the index of the given string in the array?
	 *
	 * @param String aStr
	 */
	ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {
	  var sStr = util.toSetString(aStr);
	  if (has.call(this._set, sStr)) {
	    return this._set[sStr];
	  }
	  throw new Error('"' + aStr + '" is not in the set.');
	};

	/**
	 * What is the element at the given index?
	 *
	 * @param Number aIdx
	 */
	ArraySet.prototype.at = function ArraySet_at(aIdx) {
	  if (aIdx >= 0 && aIdx < this._array.length) {
	    return this._array[aIdx];
	  }
	  throw new Error('No element indexed by ' + aIdx);
	};

	/**
	 * Returns the array representation of this set (which has the proper indices
	 * indicated by indexOf). Note that this is a copy of the internal array used
	 * for storing the members so that no one can mess with internal state.
	 */
	ArraySet.prototype.toArray = function ArraySet_toArray() {
	  return this._array.slice();
	};

	exports.ArraySet = ArraySet;


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/* -*- Mode: js; js-indent-level: 2; -*- */
	/*
	 * Copyright 2011 Mozilla Foundation and contributors
	 * Licensed under the New BSD license. See LICENSE or:
	 * http://opensource.org/licenses/BSD-3-Clause
	 *
	 * Based on the Base 64 VLQ implementation in Closure Compiler:
	 * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java
	 *
	 * Copyright 2011 The Closure Compiler Authors. All rights reserved.
	 * Redistribution and use in source and binary forms, with or without
	 * modification, are permitted provided that the following conditions are
	 * met:
	 *
	 *  * Redistributions of source code must retain the above copyright
	 *    notice, this list of conditions and the following disclaimer.
	 *  * Redistributions in binary form must reproduce the above
	 *    copyright notice, this list of conditions and the following
	 *    disclaimer in the documentation and/or other materials provided
	 *    with the distribution.
	 *  * Neither the name of Google Inc. nor the names of its
	 *    contributors may be used to endorse or promote products derived
	 *    from this software without specific prior written permission.
	 *
	 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
	 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
	 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
	 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
	 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
	 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
	 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
	 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
	 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
	 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
	 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */

	var base64 = __webpack_require__(6);

	// A single base 64 digit can contain 6 bits of data. For the base 64 variable
	// length quantities we use in the source map spec, the first bit is the sign,
	// the next four bits are the actual value, and the 6th bit is the
	// continuation bit. The continuation bit tells us whether there are more
	// digits in this value following this digit.
	//
	//   Continuation
	//   |    Sign
	//   |    |
	//   V    V
	//   101011

	var VLQ_BASE_SHIFT = 5;

	// binary: 100000
	var VLQ_BASE = 1 << VLQ_BASE_SHIFT;

	// binary: 011111
	var VLQ_BASE_MASK = VLQ_BASE - 1;

	// binary: 100000
	var VLQ_CONTINUATION_BIT = VLQ_BASE;

	/**
	 * Converts from a two-complement value to a value where the sign bit is
	 * placed in the least significant bit.  For example, as decimals:
	 *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)
	 *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)
	 */
	function toVLQSigned(aValue) {
	  return aValue < 0
	    ? ((-aValue) << 1) + 1
	    : (aValue << 1) + 0;
	}

	/**
	 * Converts to a two-complement value from a value where the sign bit is
	 * placed in the least significant bit.  For example, as decimals:
	 *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1
	 *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2
	 */
	function fromVLQSigned(aValue) {
	  var isNegative = (aValue & 1) === 1;
	  var shifted = aValue >> 1;
	  return isNegative
	    ? -shifted
	    : shifted;
	}

	/**
	 * Returns the base 64 VLQ encoded value.
	 */
	exports.encode = function base64VLQ_encode(aValue) {
	  var encoded = "";
	  var digit;

	  var vlq = toVLQSigned(aValue);

	  do {
	    digit = vlq & VLQ_BASE_MASK;
	    vlq >>>= VLQ_BASE_SHIFT;
	    if (vlq > 0) {
	      // There are still more digits in this value, so we must make sure the
	      // continuation bit is marked.
	      digit |= VLQ_CONTINUATION_BIT;
	    }
	    encoded += base64.encode(digit);
	  } while (vlq > 0);

	  return encoded;
	};

	/**
	 * Decodes the next base 64 VLQ value from the given string and returns the
	 * value and the rest of the string via the out parameter.
	 */
	exports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {
	  var strLen = aStr.length;
	  var result = 0;
	  var shift = 0;
	  var continuation, digit;

	  do {
	    if (aIndex >= strLen) {
	      throw new Error("Expected more digits in base 64 VLQ value.");
	    }

	    digit = base64.decode(aStr.charCodeAt(aIndex++));
	    if (digit === -1) {
	      throw new Error("Invalid base64 digit: " + aStr.charAt(aIndex - 1));
	    }

	    continuation = !!(digit & VLQ_CONTINUATION_BIT);
	    digit &= VLQ_BASE_MASK;
	    result = result + (digit << shift);
	    shift += VLQ_BASE_SHIFT;
	  } while (continuation);

	  aOutParam.value = fromVLQSigned(result);
	  aOutParam.rest = aIndex;
	};


/***/ },
/* 6 */
/***/ function(module, exports) {

	/* -*- Mode: js; js-indent-level: 2; -*- */
	/*
	 * Copyright 2011 Mozilla Foundation and contributors
	 * Licensed under the New BSD license. See LICENSE or:
	 * http://opensource.org/licenses/BSD-3-Clause
	 */

	var intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');

	/**
	 * Encode an integer in the range of 0 to 63 to a single base 64 digit.
	 */
	exports.encode = function (number) {
	  if (0 <= number && number < intToCharMap.length) {
	    return intToCharMap[number];
	  }
	  throw new TypeError("Must be between 0 and 63: " + number);
	};

	/**
	 * Decode a single base 64 character code digit to an integer. Returns -1 on
	 * failure.
	 */
	exports.decode = function (charCode) {
	  var bigA = 65;     // 'A'
	  var bigZ = 90;     // 'Z'

	  var littleA = 97;  // 'a'
	  var littleZ = 122; // 'z'

	  var zero = 48;     // '0'
	  var nine = 57;     // '9'

	  var plus = 43;     // '+'
	  var slash = 47;    // '/'

	  var littleOffset = 26;
	  var numberOffset = 52;

	  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ
	  if (bigA <= charCode && charCode <= bigZ) {
	    return (charCode - bigA);
	  }

	  // 26 - 51: abcdefghijklmnopqrstuvwxyz
	  if (littleA <= charCode && charCode <= littleZ) {
	    return (charCode - littleA + littleOffset);
	  }

	  // 52 - 61: 0123456789
	  if (zero <= charCode && charCode <= nine) {
	    return (charCode - zero + numberOffset);
	  }

	  // 62: +
	  if (charCode == plus) {
	    return 62;
	  }

	  // 63: /
	  if (charCode == slash) {
	    return 63;
	  }

	  // Invalid base64 digit.
	  return -1;
	};


/***/ },
/* 7 */
/***/ function(module, exports) {

	/* -*- Mode: js; js-indent-level: 2; -*- */
	/*
	 * Copyright 2011 Mozilla Foundation and contributors
	 * Licensed under the New BSD license. See LICENSE or:
	 * http://opensource.org/licenses/BSD-3-Clause
	 */

	// It turns out that some (most?) JavaScript engines don't self-host
	// `Array.prototype.sort`. This makes sense because C++ will likely remain
	// faster than JS when doing raw CPU-intensive sorting. However, when using a
	// custom comparator function, calling back and forth between the VM's C++ and
	// JIT'd JS is rather slow *and* loses JIT type information, resulting in
	// worse generated code for the comparator function than would be optimal. In
	// fact, when sorting with a comparator, these costs outweigh the benefits of
	// sorting in C++. By using our own JS-implemented Quick Sort (below), we get
	// a ~3500ms mean speed-up in `bench/bench.html`.

	/**
	 * Swap the elements indexed by `x` and `y` in the array `ary`.
	 *
	 * @param {Array} ary
	 *        The array.
	 * @param {Number} x
	 *        The index of the first item.
	 * @param {Number} y
	 *        The index of the second item.
	 */
	function swap(ary, x, y) {
	  var temp = ary[x];
	  ary[x] = ary[y];
	  ary[y] = temp;
	}

	/**
	 * Returns a random integer within the range `low .. high` inclusive.
	 *
	 * @param {Number} low
	 *        The lower bound on the range.
	 * @param {Number} high
	 *        The upper bound on the range.
	 */
	function randomIntInRange(low, high) {
	  return Math.round(low + (Math.random() * (high - low)));
	}

	/**
	 * The Quick Sort algorithm.
	 *
	 * @param {Array} ary
	 *        An array to sort.
	 * @param {function} comparator
	 *        Function to use to compare two items.
	 * @param {Number} p
	 *        Start index of the array
	 * @param {Number} r
	 *        End index of the array
	 */
	function doQuickSort(ary, comparator, p, r) {
	  // If our lower bound is less than our upper bound, we (1) partition the
	  // array into two pieces and (2) recurse on each half. If it is not, this is
	  // the empty array and our base case.

	  if (p < r) {
	    // (1) Partitioning.
	    //
	    // The partitioning chooses a pivot between `p` and `r` and moves all
	    // elements that are less than or equal to the pivot to the before it, and
	    // all the elements that are greater than it after it. The effect is that
	    // once partition is done, the pivot is in the exact place it will be when
	    // the array is put in sorted order, and it will not need to be moved
	    // again. This runs in O(n) time.

	    // Always choose a random pivot so that an input array which is reverse
	    // sorted does not cause O(n^2) running time.
	    var pivotIndex = randomIntInRange(p, r);
	    var i = p - 1;

	    swap(ary, pivotIndex, r);
	    var pivot = ary[r];

	    // Immediately after `j` is incremented in this loop, the following hold
	    // true:
	    //
	    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.
	    //
	    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.
	    for (var j = p; j < r; j++) {
	      if (comparator(ary[j], pivot) <= 0) {
	        i += 1;
	        swap(ary, i, j);
	      }
	    }

	    swap(ary, i + 1, j);
	    var q = i + 1;

	    // (2) Recurse on each half.

	    doQuickSort(ary, comparator, p, q - 1);
	    doQuickSort(ary, comparator, q + 1, r);
	  }
	}

	/**
	 * Sort the given array in-place with the given comparator function.
	 *
	 * @param {Array} ary
	 *        An array to sort.
	 * @param {function} comparator
	 *        Function to use to compare two items.
	 */
	exports.quickSort = function (ary, comparator) {
	  doQuickSort(ary, comparator, 0, ary.length - 1);
	};


/***/ }
/******/ ])
});
;
}).apply(this, arguments);

},{}],421:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/stackframe/stackframe.js", module);
(function(){
(function (root, factory) {
    'use strict';
    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.

    /* istanbul ignore next */
    if (typeof define === 'function' && define.amd) {
        define('stackframe', [], factory);
    } else if (typeof exports === 'object') {
        module.exports = factory();
    } else {
        root.StackFrame = factory();
    }
}(this, function () {
    'use strict';
    function _isNumber(n) {
        return !isNaN(parseFloat(n)) && isFinite(n);
    }

    function StackFrame(functionName, args, fileName, lineNumber, columnNumber, source) {
        if (functionName !== undefined) {
            this.setFunctionName(functionName);
        }
        if (args !== undefined) {
            this.setArgs(args);
        }
        if (fileName !== undefined) {
            this.setFileName(fileName);
        }
        if (lineNumber !== undefined) {
            this.setLineNumber(lineNumber);
        }
        if (columnNumber !== undefined) {
            this.setColumnNumber(columnNumber);
        }
        if (source !== undefined) {
            this.setSource(source);
        }
    }

    StackFrame.prototype = {
        getFunctionName: function () {
            return this.functionName;
        },
        setFunctionName: function (v) {
            this.functionName = String(v);
        },

        getArgs: function () {
            return this.args;
        },
        setArgs: function (v) {
            if (Object.prototype.toString.call(v) !== '[object Array]') {
                throw new TypeError('Args must be an Array');
            }
            this.args = v;
        },

        // NOTE: Property name may be misleading as it includes the path,
        // but it somewhat mirrors V8's JavaScriptStackTraceApi
        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's
        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14
        getFileName: function () {
            return this.fileName;
        },
        setFileName: function (v) {
            this.fileName = String(v);
        },

        getLineNumber: function () {
            return this.lineNumber;
        },
        setLineNumber: function (v) {
            if (!_isNumber(v)) {
                throw new TypeError('Line Number must be a Number');
            }
            this.lineNumber = Number(v);
        },

        getColumnNumber: function () {
            return this.columnNumber;
        },
        setColumnNumber: function (v) {
            if (!_isNumber(v)) {
                throw new TypeError('Column Number must be a Number');
            }
            this.columnNumber = Number(v);
        },

        getSource: function () {
            return this.source;
        },
        setSource: function (v) {
            this.source = String(v);
        },

        toString: function() {
            var functionName = this.getFunctionName() || '{anonymous}';
            var args = '(' + (this.getArgs() || []).join(',') + ')';
            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';
            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';
            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';
            return functionName + args + fileName + lineNumber + columnNumber;
        }
    };

    return StackFrame;
}));

}).apply(this, arguments);

},{}],422:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/to-array/index.js", module);
(function(){
module.exports = toArray

function toArray(list, index) {
    var array = []

    index = index || 0

    for (var i = index || 0; i < list.length; i++) {
        array[i - index] = list[i]
    }

    return array
}

}).apply(this, arguments);

},{}],423:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/watchify/node_modules/buffer/index.js", module);
(function(){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species != null &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayLike(value)
  }

  if (value == null) {
    throw TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
        : (firstByte > 0xBF) ? 2
          : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

}).apply(this, arguments);

},{"base64-js":11,"ieee754":66}],424:[function(require,module,exports){
_hmr["websocket:http://localhost:1337"].initModule("node_modules/yeast/index.js", module);
(function(){
'use strict';

var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')
  , length = 64
  , map = {}
  , seed = 0
  , i = 0
  , prev;

/**
 * Return a string representing the specified number.
 *
 * @param {Number} num The number to convert.
 * @returns {String} The string representation of the number.
 * @api public
 */
function encode(num) {
  var encoded = '';

  do {
    encoded = alphabet[num % length] + encoded;
    num = Math.floor(num / length);
  } while (num > 0);

  return encoded;
}

/**
 * Return the integer value specified by the given string.
 *
 * @param {String} str The string to convert.
 * @returns {Number} The integer value represented by the string.
 * @api public
 */
function decode(str) {
  var decoded = 0;

  for (i = 0; i < str.length; i++) {
    decoded = decoded * length + map[str.charAt(i)];
  }

  return decoded;
}

/**
 * Yeast: A tiny growing id generator.
 *
 * @returns {String} A unique id.
 * @api public
 */
function yeast() {
  var now = encode(+new Date());

  if (now !== prev) return seed = 0, prev = now;
  return now +'.'+ encode(seed++);
}

//
// Map each character to its index.
//
for (; i < length; i++) map[alphabet[i]] = i;

//
// Expose the `yeast`, `encode` and `decode` functions.
//
yeast.encode = encode;
yeast.decode = decode;
module.exports = yeast;

}).apply(this, arguments);

},{}],2:[function(require,module,exports){
(function(global, _main, moduleDefs, cachedModules, _entries) {
  'use strict';

  var moduleMeta = {"node_modules/parseuri/index.js":{"index":234,"hash":"EzACpgP8IC8rgl7aVyRs","parents":["node_modules/socket.io-client/lib/url.js","node_modules/engine.io-client/lib/socket.js"]},"node_modules/socket.io-client/lib/on.js":{"index":409,"hash":"tjRZyGGz5Q0MA2qS81HN","parents":["node_modules/socket.io-client/lib/socket.js","node_modules/socket.io-client/lib/manager.js"]},"node_modules/component-emitter/index.js":{"index":18,"hash":"oN00wp8CctwYNQv6ryzF","parents":["node_modules/socket.io-client/lib/socket.js","node_modules/socket.io-parser/index.js","node_modules/engine.io-client/lib/transport.js","node_modules/engine.io-client/lib/transports/polling-xhr.js","node_modules/engine.io-client/lib/socket.js","node_modules/socket.io-client/lib/manager.js"]},"node_modules/component-bind/index.js":{"index":17,"hash":"4yIcVw+afwUsnTQyI0a3","parents":["node_modules/socket.io-client/lib/socket.js","node_modules/socket.io-client/lib/manager.js"]},"node_modules/to-array/index.js":{"index":422,"hash":"2EoggafxX+GLXkXiaGjm","parents":["node_modules/socket.io-client/lib/socket.js"]},"node_modules/parseqs/index.js":{"index":233,"hash":"bFhhlHvfi+om+FJQz11d","parents":["node_modules/socket.io-client/lib/socket.js","node_modules/engine.io-client/lib/transports/polling.js","node_modules/engine.io-client/lib/transports/websocket.js","node_modules/engine.io-client/lib/socket.js"]},"node_modules/socket.io-parser/node_modules/isarray/index.js":{"index":419,"hash":"m4xpE3KALaeIycX04cov","parents":["node_modules/socket.io-parser/binary.js","node_modules/socket.io-parser/index.js"]},"node_modules/socket.io-parser/is-buffer.js":{"index":416,"hash":"byg7T0C08IYHhO3wAxWs","parents":["node_modules/socket.io-parser/binary.js","node_modules/socket.io-parser/index.js"]},"node_modules/watchify/node_modules/buffer/index.js":{"index":423,"hash":"EGlthxUQMmGiYZrMK7++","parents":["node_modules/socket.io-parser/is-buffer.js","node_modules/has-binary2/index.js","node_modules/engine.io-client/lib/transports/websocket.js"]},"node_modules/indexof/index.js":{"index":67,"hash":"8zMGV0j0ID5bUIeT7r+M","parents":["node_modules/engine.io-client/lib/socket.js","node_modules/socket.io-client/lib/manager.js"]},"node_modules/backo2/index.js":{"index":9,"hash":"L5ry3mfVEw1wgmx9Sa+q","parents":["node_modules/socket.io-client/lib/manager.js"]},"node_modules/base64-js/index.js":{"index":11,"hash":"O87p7aBIlP8y9f0c22Za","parents":["node_modules/watchify/node_modules/buffer/index.js"]},"node_modules/ieee754/index.js":{"index":66,"hash":"lpinvuoc6+kFDWfLEBYD","parents":["node_modules/watchify/node_modules/buffer/index.js"]},"node_modules/has-binary2/node_modules/isarray/index.js":{"index":64,"hash":"m4xpE3KALaeIycX04cov","parents":["node_modules/has-binary2/index.js"]},"node_modules/has-binary2/index.js":{"index":63,"hash":"eg8bVUF2OuLlATlstveZ","parents":["node_modules/socket.io-client/lib/socket.js","node_modules/engine.io-parser/lib/browser.js"]},"node_modules/socket.io-parser/binary.js":{"index":414,"hash":"IRwIakVon3VSPoCR1Xtc","parents":["node_modules/socket.io-parser/index.js"]},"node_modules/lodash/isArray.js":{"index":208,"hash":"aaUaNDXWFSVZ5STriBpj","parents":["node_modules/lodash/some.js","node_modules/lodash/map.js","node_modules/lodash/forEach.js","node_modules/lodash/_isKey.js","node_modules/lodash/_hasPath.js","node_modules/lodash/_arrayLikeKeys.js","node_modules/lodash/_baseToString.js","node_modules/lodash/_baseGetAllKeys.js","node_modules/lodash/_baseIsEqualDeep.js","node_modules/lodash/_castPath.js","node_modules/lodash/_baseIteratee.js","node_modules/lodash/filter.js","node_modules/lodash/_isFlattenable.js"]},"node_modules/lodash/_arrayFilter.js":{"index":82,"hash":"Ev1suXdgsby5ZCXCkRms","parents":["node_modules/lodash/_getSymbols.js","node_modules/lodash/filter.js"]},"node_modules/lodash/_baseZipObject.js":{"index":124,"hash":"YXMcZ83l88xZmDNehDaW","parents":["node_modules/lodash/zipObject.js"]},"node_modules/lodash/_arraySome.js":{"index":88,"hash":"6MxplN9nt/AmANH1hnTa","parents":["node_modules/lodash/some.js","node_modules/lodash/_equalArrays.js"]},"node_modules/lodash/_arrayEach.js":{"index":81,"hash":"b9UG7X0uCjshbsKWnzke","parents":["node_modules/lodash/forEach.js"]},"node_modules/lodash/_isPrototype.js":{"index":159,"hash":"z7lefPE53MX7955LE/f6","parents":["node_modules/lodash/_baseKeys.js","node_modules/lodash/assign.js"]},"node_modules/lodash/_arrayMap.js":{"index":86,"hash":"WRdHK1dyumbtZQGeNdoR","parents":["node_modules/lodash/map.js","node_modules/lodash/_baseToString.js","node_modules/lodash/_baseDifference.js"]},"node_modules/lodash/identity.js":{"index":206,"hash":"s1ZnXuz2CFxX2MXJyb7F","parents":["node_modules/lodash/_castFunction.js","node_modules/lodash/_baseSetToString.js","node_modules/lodash/_baseRest.js","node_modules/lodash/_baseIteratee.js"]},"node_modules/lodash/_castFunction.js":{"index":126,"hash":"17Fkqb/JTOTfTCbTGPvs","parents":["node_modules/lodash/forOwn.js","node_modules/lodash/forEach.js"]},"node_modules/lodash/_baseFilter.js":{"index":94,"hash":"zIF8T84UwJp2X27nHnkJ","parents":["node_modules/lodash/filter.js"]},"node_modules/lodash/_baseEach.js":{"index":93,"hash":"1eAUgjpN0REUkkfZ9ZIc","parents":["node_modules/lodash/_baseFilter.js","node_modules/lodash/_baseSome.js","node_modules/lodash/_baseMap.js","node_modules/lodash/forEach.js"]},"node_modules/lodash/eq.js":{"index":198,"hash":"Be3fJIGKRC2SLwj96dmp","parents":["node_modules/lodash/_assignValue.js","node_modules/lodash/_isIterateeCall.js","node_modules/lodash/_equalByTag.js","node_modules/lodash/_assocIndexOf.js"]},"node_modules/lodash/_assignValue.js":{"index":89,"hash":"hmWN1NJKVbGe2ThBbBed","parents":["node_modules/lodash/zipObject.js","node_modules/lodash/_copyObject.js","node_modules/lodash/assign.js"]},"node_modules/lodash/_baseAssignValue.js":{"index":91,"hash":"UUmMep65Dt8mJru5Df0R","parents":["node_modules/lodash/_assignValue.js","node_modules/lodash/_copyObject.js","node_modules/lodash/mapValues.js"]},"node_modules/lodash/zipObject.js":{"index":230,"hash":"iztwVZmqQ7Y1i6QmGzx9","parents":["node_modules/browserify-hmr/inc/index.js"]},"node_modules/lodash/_baseSome.js":{"index":120,"hash":"/fx+wXc48GKu9ngo/G7R","parents":["node_modules/lodash/some.js"]},"node_modules/lodash/_isIndex.js":{"index":154,"hash":"K696JB36F0WOcnTVaGJc","parents":["node_modules/lodash/_isIterateeCall.js","node_modules/lodash/_hasPath.js","node_modules/lodash/_arrayLikeKeys.js"]},"node_modules/lodash/isObject.js":{"index":214,"hash":"H0M3JlacAn8wi5b/SH6J","parents":["node_modules/lodash/_isIterateeCall.js","node_modules/lodash/_isStrictComparable.js","node_modules/lodash/isFunction.js","node_modules/lodash/_baseIsNative.js","node_modules/lodash/toNumber.js"]},"node_modules/lodash/_isIterateeCall.js":{"index":155,"hash":"Q6Y/4ZLjPN2hD0x360UE","parents":["node_modules/lodash/some.js","node_modules/lodash/_createAssigner.js"]},"node_modules/lodash/isArrayLike.js":{"index":209,"hash":"/OCFIiBOK84sMLW6Tiiz","parents":["node_modules/lodash/_isIterateeCall.js","node_modules/lodash/_baseMap.js","node_modules/lodash/_createBaseEach.js","node_modules/lodash/keys.js","node_modules/lodash/assign.js","node_modules/lodash/_createFind.js","node_modules/lodash/isArrayLikeObject.js"]},"node_modules/lodash/some.js":{"index":223,"hash":"o5R2DTe3L0fWtByoF6NK","parents":["node_modules/browserify-hmr/inc/index.js"]},"node_modules/lodash/_baseIteratee.js":{"index":111,"hash":"lFdaZihzm4HNQp2V6Bpv","parents":["node_modules/lodash/some.js","node_modules/lodash/map.js","node_modules/lodash/mapValues.js","node_modules/lodash/filter.js","node_modules/lodash/_createFind.js","node_modules/lodash/findIndex.js"]},"node_modules/lodash/_copyObject.js":{"index":128,"hash":"VAzIjaU/1tssj67rWjf/","parents":["node_modules/lodash/assign.js"]},"node_modules/lodash/isLength.js":{"index":213,"hash":"bwSRxcpcTX/CbMowl+qa","parents":["node_modules/lodash/_hasPath.js","node_modules/lodash/isArrayLike.js","node_modules/lodash/_baseIsTypedArray.js"]},"node_modules/lodash/_baseMap.js":{"index":113,"hash":"d4dyLnzZcVXFzz5tCc58","parents":["node_modules/lodash/map.js"]},"node_modules/lodash/map.js":{"index":219,"hash":"Gq/1p28f40AzWuWuaNZr","parents":["node_modules/browserify-hmr/inc/index.js"]},"node_modules/lodash/_createBaseFor.js":{"index":132,"hash":"OeCELp37VytZuCN6Xtr+","parents":["node_modules/lodash/_baseFor.js"]},"node_modules/lodash/_baseFor.js":{"index":97,"hash":"aDRpv9Ysd3A0P68kJrwN","parents":["node_modules/lodash/_baseForOwn.js"]},"node_modules/lodash/_baseForOwn.js":{"index":98,"hash":"wsDmgTH4vz3dPZ0ucogL","parents":["node_modules/lodash/forOwn.js","node_modules/lodash/_baseEach.js","node_modules/lodash/mapValues.js"]},"node_modules/lodash/keys.js":{"index":218,"hash":"AzwEiE+T6QrvlRtU3Z5w","parents":["node_modules/lodash/_baseForOwn.js","node_modules/lodash/_getMatchData.js","node_modules/lodash/assign.js","node_modules/lodash/_getAllKeys.js","node_modules/lodash/_createFind.js"]},"node_modules/lodash/forOwn.js":{"index":203,"hash":"Phxs3xQLZ6eXpzVwNsD+","parents":["node_modules/browserify-hmr/inc/index.js"]},"node_modules/lodash/_baseProperty.js":{"index":116,"hash":"kWjeI0xVLXmi/QD9uMSa","parents":["node_modules/lodash/property.js"]},"node_modules/lodash/_matchesStrictComparable.js":{"index":172,"hash":"+OqsD2+K9liTMiGDT3Y4","parents":["node_modules/lodash/_baseMatchesProperty.js","node_modules/lodash/_baseMatches.js"]},"node_modules/lodash/_createBaseEach.js":{"index":131,"hash":"j95laCMPOgHsNDIKPdsp","parents":["node_modules/lodash/_baseEach.js"]},"node_modules/lodash/forEach.js":{"index":202,"hash":"jIBP8hzrl/TALmTGIzfp","parents":["node_modules/browserify-hmr/inc/index.js"]},"node_modules/lodash/_baseTimes.js":{"index":121,"hash":"vQVHAQOeEJCBfl2Pb7SH","parents":["node_modules/lodash/_arrayLikeKeys.js"]},"node_modules/lodash/_toKey.js":{"index":193,"hash":"Fva7n1CrZYGNyjdfKbt3","parents":["node_modules/lodash/_hasPath.js","node_modules/lodash/_baseMatchesProperty.js","node_modules/lodash/_baseGet.js","node_modules/lodash/property.js"]},"node_modules/lodash/isSymbol.js":{"index":216,"hash":"uIIRbxfQUXadoioCe5+N","parents":["node_modules/lodash/_toKey.js","node_modules/lodash/_isKey.js","node_modules/lodash/_baseToString.js","node_modules/lodash/toNumber.js"]},"node_modules/lodash/_isStrictComparable.js":{"index":160,"hash":"rbCwfHyEpUrj4Z98kqqR","parents":["node_modules/lodash/_getMatchData.js","node_modules/lodash/_baseMatchesProperty.js"]},"node_modules/lodash/_baseHasIn.js":{"index":102,"hash":"+7Ad7hoG+3kwDHiM0tNn","parents":["node_modules/lodash/hasIn.js"]},"node_modules/lodash/isObjectLike.js":{"index":215,"hash":"qRO1rf+QsMbu/mjKbljZ","parents":["node_modules/lodash/isSymbol.js","node_modules/lodash/_baseIsArguments.js","node_modules/lodash/isArguments.js","node_modules/lodash/_baseIsTypedArray.js","node_modules/lodash/_baseIsEqual.js","node_modules/lodash/isArrayLikeObject.js"]},"node_modules/lodash/get.js":{"index":204,"hash":"l8Xm0+dbrUDVfD0OVsKH","parents":["node_modules/lodash/_baseMatchesProperty.js"]},"node_modules/lodash/_baseGet.js":{"index":99,"hash":"EQWKE8NGYTKR53FHpqW6","parents":["node_modules/lodash/get.js","node_modules/lodash/_basePropertyDeep.js"]},"node_modules/lodash/_getMatchData.js":{"index":141,"hash":"QzO7KFepX9S2dqnbKqgt","parents":["node_modules/lodash/_baseMatches.js"]},"node_modules/lodash/_objectToString.js":{"index":177,"hash":"gcC0LTB2iC1gNln4H3WI","parents":["node_modules/lodash/_baseGetTag.js"]},"node_modules/lodash/_apply.js":{"index":80,"hash":"XKkzZTghrlK6WTNW2Mdh","parents":["node_modules/lodash/_overRest.js"]},"node_modules/lodash/_overRest.js":{"index":179,"hash":"iDNTQ1nLZv3jwCD1fhKA","parents":["node_modules/lodash/_baseRest.js"]},"node_modules/lodash/_shortOut.js":{"index":185,"hash":"IoUeHrEOcxqBK99ieVfK","parents":["node_modules/lodash/_setToString.js"]},"node_modules/lodash/_overArg.js":{"index":178,"hash":"DrVoGwBMK8ywtUgJJMWJ","parents":["node_modules/lodash/_nativeKeys.js"]},"node_modules/lodash/_nativeKeys.js":{"index":175,"hash":"Ksoa4f854F0/NggsS0Yh","parents":["node_modules/lodash/_baseKeys.js"]},"node_modules/lodash/_baseKeys.js":{"index":112,"hash":"kmg69OeKnhCzjV1WMGzu","parents":["node_modules/lodash/keys.js"]},"node_modules/lodash/_baseUnary.js":{"index":123,"hash":"cMYMf5ZcCBeLWbK9TQmI","parents":["node_modules/lodash/isTypedArray.js","node_modules/lodash/_baseDifference.js"]},"node_modules/lodash/stubFalse.js":{"index":225,"hash":"bsNH9caMXr7Pdt8ruFJt","parents":["node_modules/lodash/isBuffer.js"]},"node_modules/lodash/_getValue.js":{"index":146,"hash":"ECu3UgrdoHGLOVPWr5mD","parents":["node_modules/lodash/_getNative.js"]},"node_modules/lodash/_baseGetTag.js":{"index":101,"hash":"ydPbt27q/TAHvOyjdq/H","parents":["node_modules/lodash/isSymbol.js","node_modules/lodash/isFunction.js","node_modules/lodash/_baseIsArguments.js","node_modules/lodash/_baseIsTypedArray.js","node_modules/lodash/_getTag.js"]},"node_modules/lodash/_isKey.js":{"index":156,"hash":"D13Ok63JqktDADwmaeBu","parents":["node_modules/lodash/_baseMatchesProperty.js","node_modules/lodash/_castPath.js","node_modules/lodash/property.js"]},"node_modules/lodash/_hasPath.js":{"index":147,"hash":"H9ddOWkLPRuFYq8fwTEv","parents":["node_modules/lodash/hasIn.js"]},"node_modules/lodash/_castPath.js":{"index":127,"hash":"GgKBkmr1sBRSb1yd72qJ","parents":["node_modules/lodash/_hasPath.js","node_modules/lodash/_baseGet.js"]},"node_modules/lodash/isArguments.js":{"index":207,"hash":"iJIbQ7nb4q+C1riPMj/b","parents":["node_modules/lodash/_hasPath.js","node_modules/lodash/_arrayLikeKeys.js","node_modules/lodash/_isFlattenable.js"]},"node_modules/lodash/hasIn.js":{"index":205,"hash":"o6j7gwruD7qKNbgMUe0j","parents":["node_modules/lodash/_baseMatchesProperty.js"]},"node_modules/lodash/_stackDelete.js":{"index":187,"hash":"LXafI5DDGP0wDwfpw8/U","parents":["node_modules/lodash/_Stack.js"]},"node_modules/lodash/_stackGet.js":{"index":188,"hash":"BoHW4uFMtND7Gi+JPdJf","parents":["node_modules/lodash/_Stack.js"]},"node_modules/lodash/_stackHas.js":{"index":189,"hash":"thY5y8jBCnJMfegnSD/V","parents":["node_modules/lodash/_Stack.js"]},"node_modules/lodash/_Symbol.js":{"index":77,"hash":"I77NsH5p3PRVWpJOtN3+","parents":["node_modules/lodash/_getRawTag.js","node_modules/lodash/_baseGetTag.js","node_modules/lodash/_equalByTag.js","node_modules/lodash/_baseToString.js","node_modules/lodash/_isFlattenable.js"]},"node_modules/lodash/_root.js":{"index":180,"hash":"MupxTyUFdnn90wmcJpPL","parents":["node_modules/lodash/_Symbol.js","node_modules/lodash/isBuffer.js","node_modules/lodash/_Uint8Array.js","node_modules/lodash/_Map.js","node_modules/lodash/_DataView.js","node_modules/lodash/_Promise.js","node_modules/lodash/_Set.js","node_modules/lodash/_WeakMap.js","node_modules/lodash/_coreJsData.js"]},"node_modules/lodash/_getRawTag.js":{"index":143,"hash":"MUL9l/iYFvZaG1vReTH3","parents":["node_modules/lodash/_baseGetTag.js"]},"node_modules/lodash/isFunction.js":{"index":212,"hash":"0gysC+rTcZlhPWD04ANh","parents":["node_modules/lodash/isArrayLike.js","node_modules/lodash/_baseIsNative.js"]},"node_modules/lodash/constant.js":{"index":196,"hash":"E/D07UC1hh81w2R6/inn","parents":["node_modules/lodash/_baseSetToString.js"]},"node_modules/lodash/_baseSetToString.js":{"index":119,"hash":"iLxL219sz9iCOrPJz82a","parents":["node_modules/lodash/_setToString.js"]},"node_modules/lodash/_defineProperty.js":{"index":134,"hash":"0CbMU6r+0Uq1gikE9oNA","parents":["node_modules/lodash/_baseSetToString.js","node_modules/lodash/_baseAssignValue.js"]},"node_modules/lodash/_setToString.js":{"index":184,"hash":"hu7pnSotmEJV3Wx9OsJa","parents":["node_modules/lodash/_baseRest.js"]},"node_modules/lodash/_baseRest.js":{"index":118,"hash":"SUX2Uj3EprmvmkcHcoY/","parents":["node_modules/lodash/_createAssigner.js","node_modules/lodash/difference.js"]},"node_modules/lodash/_createAssigner.js":{"index":130,"hash":"JEqSu7xxpSyH40Y4GJ+V","parents":["node_modules/lodash/assign.js"]},"node_modules/lodash/_baseIsArguments.js":{"index":104,"hash":"caWdwJw13ty+5+1x9erg","parents":["node_modules/lodash/isArguments.js"]},"node_modules/lodash/_baseIsTypedArray.js":{"index":110,"hash":"cPl0GH9tkUCpceUV6gAk","parents":["node_modules/lodash/isTypedArray.js"]},"node_modules/lodash/_freeGlobal.js":{"index":138,"hash":"JkBVfFsfGmCLIMhuNXD1","parents":["node_modules/lodash/_nodeUtil.js","node_modules/lodash/_root.js"]},"node_modules/lodash/_nodeUtil.js":{"index":176,"hash":"U3tuQqeqEgCvn7UHnwWx","parents":["node_modules/lodash/isTypedArray.js"]},"node_modules/lodash/isTypedArray.js":{"index":217,"hash":"pNInOnl/2pKh0f1gDzOT","parents":["node_modules/lodash/_arrayLikeKeys.js","node_modules/lodash/_baseIsEqualDeep.js"]},"node_modules/lodash/isBuffer.js":{"index":211,"hash":"Uzhm1jNtW1f55Gsz24+8","parents":["node_modules/lodash/_arrayLikeKeys.js","node_modules/lodash/_baseIsEqualDeep.js"]},"node_modules/lodash/_arrayLikeKeys.js":{"index":85,"hash":"RWu/FT9WAfaDXPoucuiD","parents":["node_modules/lodash/keys.js"]},"node_modules/lodash/assign.js":{"index":195,"hash":"6X7UP3eqxcj6o2ias2ID","parents":["node_modules/browserify-hmr/inc/index.js","node_modules/react-proxy/modules/createPrototypeProxy.js"]},"node_modules/lodash/_toSource.js":{"index":194,"hash":"qhQsP8sNq2kil796yxWO","parents":["node_modules/lodash/_getTag.js","node_modules/lodash/_baseIsNative.js"]},"node_modules/lodash/_mapToArray.js":{"index":171,"hash":"XUQTl0anVZnXaUOrmxD7","parents":["node_modules/lodash/_equalByTag.js"]},"node_modules/lodash/_setToArray.js":{"index":183,"hash":"gUyAUZoZS3v/gnhOBsLW","parents":["node_modules/lodash/_equalByTag.js"]},"node_modules/lodash/_cacheHas.js":{"index":125,"hash":"zwJaX7fkgHAdYeTtYO2G","parents":["node_modules/lodash/_equalArrays.js","node_modules/lodash/_baseDifference.js"]},"node_modules/lodash/_stackClear.js":{"index":186,"hash":"ibWAz8K0fFq6Bb0SS4B7","parents":["node_modules/lodash/_Stack.js"]},"node_modules/lodash/_ListCache.js":{"index":70,"hash":"KxC/aKLlcuOS+PWx1HyP","parents":["node_modules/lodash/_stackClear.js","node_modules/lodash/_mapCacheClear.js","node_modules/lodash/_stackSet.js","node_modules/lodash/_Stack.js"]},"node_modules/lodash/_listCacheClear.js":{"index":161,"hash":"CHLB/DjalyhgxdfpsCnW","parents":["node_modules/lodash/_ListCache.js"]},"node_modules/lodash/_Uint8Array.js":{"index":78,"hash":"Zc6+hCmhnXc0Y6Asmckn","parents":["node_modules/lodash/_equalByTag.js"]},"node_modules/lodash/_equalByTag.js":{"index":136,"hash":"5sdsIGyCGshbuSoIxoXa","parents":["node_modules/lodash/_baseIsEqualDeep.js"]},"node_modules/lodash/_equalArrays.js":{"index":135,"hash":"FLnT7PvdDDobU/p0ty8u","parents":["node_modules/lodash/_equalByTag.js","node_modules/lodash/_baseIsEqualDeep.js"]},"node_modules/lodash/_Map.js":{"index":71,"hash":"aezyd9/dXR4WmT/cJk4B","parents":["node_modules/lodash/_getTag.js","node_modules/lodash/_mapCacheClear.js","node_modules/lodash/_stackSet.js"]},"node_modules/lodash/_getNative.js":{"index":142,"hash":"c5Ljj0yzzW4dPj+JomYZ","parents":["node_modules/lodash/_Map.js","node_modules/lodash/_DataView.js","node_modules/lodash/_Promise.js","node_modules/lodash/_Set.js","node_modules/lodash/_WeakMap.js","node_modules/lodash/_defineProperty.js","node_modules/lodash/_nativeCreate.js"]},"node_modules/lodash/_DataView.js":{"index":68,"hash":"N7jUbJyl5TusFXojFUuz","parents":["node_modules/lodash/_getTag.js"]},"node_modules/lodash/_Promise.js":{"index":73,"hash":"T4OR1RtxAOTYyC9xrI13","parents":["node_modules/lodash/_getTag.js"]},"node_modules/lodash/_Set.js":{"index":74,"hash":"BRcgMZjGEVgVhv4GaR6q","parents":["node_modules/lodash/_getTag.js"]},"node_modules/lodash/_WeakMap.js":{"index":79,"hash":"iuNSA30LsHH/h10pNsQ6","parents":["node_modules/lodash/_getTag.js"]},"node_modules/lodash/_getTag.js":{"index":145,"hash":"rZSqomckxeMx8IEK6dQG","parents":["node_modules/lodash/_baseIsEqualDeep.js"]},"node_modules/lodash/_setCacheHas.js":{"index":182,"hash":"aSivpixRq6mV4rYXkVzt","parents":["node_modules/lodash/_SetCache.js"]},"node_modules/lodash/_setCacheAdd.js":{"index":181,"hash":"yUbHLrOe8uWgSDa2EOmH","parents":["node_modules/lodash/_SetCache.js"]},"node_modules/lodash/_SetCache.js":{"index":75,"hash":"DKcn0VM+nqBtuxUGd3JS","parents":["node_modules/lodash/_equalArrays.js","node_modules/lodash/_baseDifference.js"]},"node_modules/lodash/_MapCache.js":{"index":72,"hash":"XbhLy8omrsa87tk7GrBc","parents":["node_modules/lodash/_SetCache.js","node_modules/lodash/memoize.js","node_modules/lodash/_stackSet.js"]},"node_modules/lodash/_listCacheHas.js":{"index":164,"hash":"2tu2JqPxTVjaJm/WbeGw","parents":["node_modules/lodash/_ListCache.js"]},"node_modules/lodash/_assocIndexOf.js":{"index":90,"hash":"+YtyXqBKKXnwrSmv/2eU","parents":["node_modules/lodash/_listCacheHas.js","node_modules/lodash/_listCacheSet.js","node_modules/lodash/_listCacheDelete.js","node_modules/lodash/_listCacheGet.js"]},"node_modules/lodash/_listCacheSet.js":{"index":165,"hash":"dVcwdgHP8vQHHPnX+pql","parents":["node_modules/lodash/_ListCache.js"]},"node_modules/lodash/_listCacheDelete.js":{"index":162,"hash":"o3YDg6klGWlCS2PgzZy+","parents":["node_modules/lodash/_ListCache.js"]},"node_modules/lodash/_coreJsData.js":{"index":129,"hash":"mWDHPw3O0bwyURVR4xz+","parents":["node_modules/lodash/_isMasked.js"]},"node_modules/lodash/_isMasked.js":{"index":158,"hash":"vCLMgg9t+moWMD2eCyQw","parents":["node_modules/lodash/_baseIsNative.js"]},"node_modules/lodash/_baseIsNative.js":{"index":109,"hash":"HplAaZjQs9R/bNG2XV0a","parents":["node_modules/lodash/_getNative.js"]},"node_modules/lodash/mapValues.js":{"index":220,"hash":"wGzYh7rOmnr5NbNf31Xh","parents":["node_modules/browserify-hmr/inc/index.js"]},"node_modules/lodash/_baseToString.js":{"index":122,"hash":"AnA1FrHVlMlph8hPfQFk","parents":["node_modules/lodash/toString.js"]},"node_modules/lodash/toString.js":{"index":229,"hash":"u6lNu4mjQVTOavtG4Hpr","parents":["node_modules/lodash/_castPath.js"]},"node_modules/lodash/_arrayPush.js":{"index":87,"hash":"/EQp182bKyQYd9DyjHRq","parents":["node_modules/lodash/_baseGetAllKeys.js","node_modules/lodash/_baseFlatten.js"]},"node_modules/lodash/_baseGetAllKeys.js":{"index":100,"hash":"G/yC9530/ahn/dgrrslT","parents":["node_modules/lodash/_getAllKeys.js"]},"node_modules/lodash/stubArray.js":{"index":224,"hash":"hpV3ZtG8dCYBLEBt0XqS","parents":["node_modules/lodash/_getSymbols.js"]},"node_modules/lodash/_getSymbols.js":{"index":144,"hash":"PoUL82x850fu8UHfzZjw","parents":["node_modules/lodash/_getAllKeys.js"]},"node_modules/lodash/_getAllKeys.js":{"index":139,"hash":"3JYThcdBa6xFuMLEJAcf","parents":["node_modules/lodash/_equalObjects.js"]},"node_modules/lodash/_equalObjects.js":{"index":137,"hash":"Rc9NYU8R1s/bWUnUOXOJ","parents":["node_modules/lodash/_baseIsEqualDeep.js"]},"node_modules/lodash/_baseIsEqualDeep.js":{"index":106,"hash":"a5Qj+02BWo5995Nobe+v","parents":["node_modules/lodash/_baseIsEqual.js"]},"node_modules/lodash/_Stack.js":{"index":76,"hash":"/wytiRFlfgg4krF9Qz6a","parents":["node_modules/lodash/_baseIsEqualDeep.js","node_modules/lodash/_baseIsMatch.js"]},"node_modules/lodash/_baseIsEqual.js":{"index":105,"hash":"IfD9jeZw2S45+s0BZ1L3","parents":["node_modules/lodash/_baseMatchesProperty.js","node_modules/lodash/_baseIsMatch.js"]},"node_modules/lodash/_baseMatchesProperty.js":{"index":115,"hash":"JUSg/+I63FvjCRBMWDG8","parents":["node_modules/lodash/_baseIteratee.js"]},"node_modules/lodash/_listCacheGet.js":{"index":163,"hash":"SZAC3U/+BLssJw9WKbhb","parents":["node_modules/lodash/_ListCache.js"]},"node_modules/lodash/_mapCacheHas.js":{"index":169,"hash":"S0HdvBVxOySQIIMRmtf0","parents":["node_modules/lodash/_MapCache.js"]},"node_modules/lodash/_getMapData.js":{"index":140,"hash":"ZdeLudBY90L64kFsAIQL","parents":["node_modules/lodash/_mapCacheHas.js","node_modules/lodash/_mapCacheSet.js","node_modules/lodash/_mapCacheDelete.js","node_modules/lodash/_mapCacheGet.js"]},"node_modules/lodash/_mapCacheSet.js":{"index":170,"hash":"Rk8Cf6ZeJaOWzM2bXiED","parents":["node_modules/lodash/_MapCache.js"]},"node_modules/lodash/_mapCacheDelete.js":{"index":167,"hash":"Y2RLt8NGt0Im9c9uXXcS","parents":["node_modules/lodash/_MapCache.js"]},"node_modules/lodash/memoize.js":{"index":221,"hash":"avTk3nhklvyvSxLNiUwd","parents":["node_modules/lodash/_memoizeCapped.js"]},"node_modules/lodash/_memoizeCapped.js":{"index":173,"hash":"HacnckK3nw4vtSYbX7i/","parents":["node_modules/lodash/_stringToPath.js"]},"node_modules/lodash/_stringToPath.js":{"index":192,"hash":"WduCAHGisFQY91/TpBpr","parents":["node_modules/lodash/_castPath.js"]},"node_modules/lodash/_basePropertyDeep.js":{"index":117,"hash":"Zfrh9AQz1Ry2yPu2pByv","parents":["node_modules/lodash/property.js"]},"node_modules/lodash/property.js":{"index":222,"hash":"2hJfadtQXM/U3NbWpzGR","parents":["node_modules/lodash/_baseIteratee.js"]},"node_modules/lodash/_isKeyable.js":{"index":157,"hash":"NQsK9iVUkTA1EsHPdaK1","parents":["node_modules/lodash/_getMapData.js"]},"node_modules/lodash/_mapCacheGet.js":{"index":168,"hash":"dglUiNgT6mYn3/TLOqMD","parents":["node_modules/lodash/_MapCache.js"]},"node_modules/lodash/_hashDelete.js":{"index":149,"hash":"CmVwjIdw4ONOgfUyiaMT","parents":["node_modules/lodash/_Hash.js"]},"node_modules/lodash/_hashHas.js":{"index":151,"hash":"fr70n7H4vKHBcQoEXEpO","parents":["node_modules/lodash/_Hash.js"]},"node_modules/lodash/_nativeCreate.js":{"index":174,"hash":"QnEWfxsVWqcrQRLl5xaD","parents":["node_modules/lodash/_hashHas.js","node_modules/lodash/_hashSet.js","node_modules/lodash/_hashClear.js","node_modules/lodash/_hashGet.js"]},"node_modules/lodash/_hashSet.js":{"index":152,"hash":"GANy9myYOl9CQUX6Hi+w","parents":["node_modules/lodash/_Hash.js"]},"node_modules/lodash/_hashClear.js":{"index":148,"hash":"2feZ9hRgUzW8Djw0JrqE","parents":["node_modules/lodash/_Hash.js"]},"node_modules/lodash/_hashGet.js":{"index":150,"hash":"dc0CR5GuEuyIhxwkyCwj","parents":["node_modules/lodash/_Hash.js"]},"node_modules/lodash/_Hash.js":{"index":69,"hash":"hTyKHFwLDhT8hzgE2zlD","parents":["node_modules/lodash/_mapCacheClear.js"]},"node_modules/lodash/_mapCacheClear.js":{"index":166,"hash":"6D5+Bp90PNozl9Vr8wu2","parents":["node_modules/lodash/_MapCache.js"]},"node_modules/lodash/_stackSet.js":{"index":190,"hash":"rFq/zAhyEaIffTCH45Gf","parents":["node_modules/lodash/_Stack.js"]},"node_modules/lodash/_baseIsMatch.js":{"index":107,"hash":"yrF79Y2F5RiVXHPZgzhK","parents":["node_modules/lodash/_baseMatches.js"]},"node_modules/lodash/_baseMatches.js":{"index":114,"hash":"eM6GzX+YFfSSvWUut1RW","parents":["node_modules/lodash/_baseIteratee.js"]},"node_modules/lodash/filter.js":{"index":199,"hash":"xHkJOO00v5Ew3tJEbs2H","parents":["node_modules/browserify-hmr/inc/index.js"]},"node_modules/process/browser.js":{"index":235,"hash":"oZn5/djw+Uvkv+VAfElp","parents":["node_modules/socket.io-client/node_modules/debug/src/browser.js","node_modules/socket.io-parser/node_modules/debug/src/browser.js","node_modules/engine.io-client/node_modules/debug/src/browser.js","node_modules/react/lib/lowPriorityWarning.js","node_modules/react/lib/canDefineProperty.js","node_modules/react/lib/ReactDOMFactories.js","node_modules/react/lib/ReactPropTypeLocationNames.js","node_modules/react-dom/lib/ReactReconcileTransaction.js","node_modules/react-dom/lib/ReactErrorUtils.js","node_modules/react-dom/lib/ReactPropTypeLocationNames.js","node_modules/prop-types/checkPropTypes.js","node_modules/prop-types/factoryWithTypeCheckers.js","node_modules/prop-types/index.js","node_modules/fbjs/lib/invariant.js","node_modules/react/lib/onlyChild.js","node_modules/fbjs/lib/emptyObject.js","node_modules/react/lib/ReactNoopUpdateQueue.js","node_modules/react/lib/ReactBaseClasses.js","node_modules/react/lib/PooledClass.js","node_modules/react/lib/traverseAllChildren.js","node_modules/react/lib/ReactComponentTreeHook.js","node_modules/react/lib/checkReactTypeSpec.js","node_modules/create-react-class/factory.js","node_modules/react-dom/lib/findDOMNode.js","node_modules/react-dom/lib/ReactDOMNullInputValuePropHook.js","node_modules/react-dom/lib/ReactDOMComponentTree.js","node_modules/react-dom/lib/DOMProperty.js","node_modules/react-dom/lib/ReactDOMInvalidARIAHook.js","node_modules/react-dom/lib/CallbackQueue.js","node_modules/react-dom/lib/PooledClass.js","node_modules/react-dom/lib/Transaction.js","node_modules/react-dom/lib/ReactUpdates.js","node_modules/react-dom/lib/ReactNodeTypes.js","node_modules/react-dom/lib/EventPluginRegistry.js","node_modules/react-dom/lib/ReactDOMUnknownPropertyHook.js","node_modules/react-dom/lib/ReactUpdateQueue.js","node_modules/react-dom/lib/ReactDOMTreeTraversal.js","node_modules/react-dom/lib/ReactOwner.js","node_modules/react-dom/lib/ReactReconciler.js","node_modules/react-dom/lib/validateDOMNesting.js","node_modules/react-dom/lib/ReactDOMContainerInfo.js","node_modules/react-dom/lib/ReactHostComponent.js","node_modules/react-dom/lib/ReactInvalidSetStateWarningHook.js","node_modules/react-dom/lib/SyntheticEvent.js","node_modules/react-dom/lib/EventPluginHub.js","node_modules/react-dom/lib/EventPluginUtils.js","node_modules/react-dom/lib/ReactComponentEnvironment.js","node_modules/react-dom/lib/DOMPropertyOperations.js","node_modules/react-dom/lib/ReactDOMOption.js","node_modules/react-dom/lib/ReactDOMTextarea.js","node_modules/react-dom/lib/ReactDOMInput.js","node_modules/react-dom/lib/checkReactTypeSpec.js","node_modules/react-dom/lib/ReactCompositeComponent.js","node_modules/react-dom/lib/instantiateReactComponent.js","node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/accumulateInto.js","node_modules/react-dom/lib/EventPropagators.js","node_modules/react-dom/lib/LinkedValueUtils.js","node_modules/react-dom/lib/ReactDOMSelect.js","node_modules/react-dom/lib/ReactServerUpdateQueue.js","node_modules/react-dom/lib/ReactServerRenderingTransaction.js","node_modules/react-dom/lib/dangerousStyleValue.js","node_modules/react-dom/lib/ReactChildReconciler.js","node_modules/react-dom/lib/traverseAllChildren.js","node_modules/react-dom/lib/flattenChildren.js","node_modules/react-dom/lib/ReactMultiChild.js","node_modules/react/lib/ReactElement.js","node_modules/fbjs/lib/warning.js","node_modules/react/lib/ReactElementValidator.js","node_modules/react/lib/React.js","node_modules/fbjs/lib/EventListener.js","node_modules/react-dom/lib/SimpleEventPlugin.js","node_modules/react-dom/lib/CSSPropertyOperations.js","node_modules/react-dom/lib/ReactDOMComponent.js","node_modules/react-dom/lib/ReactDebugTool.js","node_modules/react-dom/lib/ReactInstrumentation.js","node_modules/fbjs/lib/createArrayFromMixed.js","node_modules/fbjs/lib/getMarkupWrap.js","node_modules/fbjs/lib/createNodesFromMarkup.js","node_modules/react-dom/lib/Danger.js","node_modules/react-dom/lib/DOMChildrenOperations.js","node_modules/react-dom/lib/ReactDOMTextComponent.js","node_modules/react-dom/lib/ReactDOM.js"]},"node_modules/socket.io-client/lib/socket.js":{"index":410,"hash":"rdFfPxx+D30PPULBB/zc","parents":["node_modules/socket.io-client/lib/manager.js","node_modules/socket.io-client/lib/index.js"]},"node_modules/socket.io-parser/index.js":{"index":415,"hash":"+PwtEidJKbGPZuiwUQ8i","parents":["node_modules/socket.io-client/lib/socket.js","node_modules/socket.io-client/lib/manager.js","node_modules/socket.io-client/lib/index.js"]},"node_modules/socket.io-client/node_modules/debug/src/browser.js":{"index":412,"hash":"lo9K+ihMYHCP5zqboDee","parents":["node_modules/socket.io-client/lib/socket.js","node_modules/socket.io-client/lib/url.js","node_modules/socket.io-client/lib/manager.js","node_modules/socket.io-client/lib/index.js"]},"node_modules/ms/index.js":{"index":231,"hash":"S9kiCcudrPPjdz5yWst6","parents":["node_modules/socket.io-client/node_modules/debug/src/debug.js","node_modules/socket.io-parser/node_modules/debug/src/debug.js","node_modules/engine.io-client/node_modules/debug/src/debug.js"]},"node_modules/socket.io-client/node_modules/debug/src/debug.js":{"index":413,"hash":"wt9TGc+HaNG7ZPmfdOfc","parents":["node_modules/socket.io-client/node_modules/debug/src/browser.js"]},"node_modules/socket.io-client/lib/url.js":{"index":411,"hash":"n0UOO3VaMzFsfPFiJFxC","parents":["node_modules/socket.io-client/lib/index.js"]},"node_modules/socket.io-parser/node_modules/debug/src/debug.js":{"index":418,"hash":"wt9TGc+HaNG7ZPmfdOfc","parents":["node_modules/socket.io-parser/node_modules/debug/src/browser.js"]},"node_modules/socket.io-parser/node_modules/debug/src/browser.js":{"index":417,"hash":"lo9K+ihMYHCP5zqboDee","parents":["node_modules/socket.io-parser/index.js"]},"node_modules/browserify-hmr/lib/has.js":{"index":15,"hash":"Hky4QYVrU1+kFHIEuxPy","parents":["node_modules/browserify-hmr/lib/str-set.js","node_modules/browserify-hmr/inc/index.js"]},"node_modules/browserify-hmr/lib/str-set.js":{"index":16,"hash":"lcrDmQK4uaqOqN+FV4/9","parents":["node_modules/browserify-hmr/inc/index.js"]},"node_modules/browserify-hmr/inc/index.js":{"index":14,"hash":"gLVq8Lwxt2ok1BksS59j","parents":[]},"node_modules/engine.io-client/lib/transport.js":{"index":26,"hash":"pgM3XG6DP5flYqGQVYOO","parents":["node_modules/engine.io-client/lib/transports/polling.js","node_modules/engine.io-client/lib/transports/websocket.js","node_modules/engine.io-client/lib/socket.js"]},"node_modules/engine.io-parser/lib/browser.js":{"index":35,"hash":"qhAEZPFuezpipOtph94H","parents":["node_modules/engine.io-client/lib/transport.js","node_modules/engine.io-client/lib/transports/polling.js","node_modules/engine.io-client/lib/transports/websocket.js","node_modules/engine.io-client/lib/socket.js","node_modules/engine.io-client/lib/index.js"]},"node_modules/engine.io-parser/lib/keys.js":{"index":36,"hash":"oFyKNTA0twlyQVhVzp9n","parents":["node_modules/engine.io-parser/lib/browser.js"]},"node_modules/engine.io-parser/lib/utf8.js":{"index":37,"hash":"++espnKbJKFbA3w6+Gd+","parents":["node_modules/engine.io-parser/lib/browser.js"]},"node_modules/blob/index.js":{"index":12,"hash":"eV8fDvd1SnVAi1uugDM/","parents":["node_modules/engine.io-parser/lib/browser.js"]},"node_modules/arraybuffer.slice/index.js":{"index":8,"hash":"RSb5Zx9CgX3adjzbvf/k","parents":["node_modules/engine.io-parser/lib/browser.js"]},"node_modules/after/index.js":{"index":7,"hash":"NzPfXWECmM8rW/6fdkcj","parents":["node_modules/engine.io-parser/lib/browser.js"]},"node_modules/engine.io-client/node_modules/debug/src/debug.js":{"index":34,"hash":"wt9TGc+HaNG7ZPmfdOfc","parents":["node_modules/engine.io-client/node_modules/debug/src/browser.js"]},"node_modules/engine.io-client/node_modules/debug/src/browser.js":{"index":33,"hash":"lo9K+ihMYHCP5zqboDee","parents":["node_modules/engine.io-client/lib/transports/polling-xhr.js","node_modules/engine.io-client/lib/transports/polling.js","node_modules/engine.io-client/lib/transports/websocket.js","node_modules/engine.io-client/lib/socket.js"]},"node_modules/has-cors/index.js":{"index":65,"hash":"HwTb4UF/S089ZYA8hrRl","parents":["node_modules/engine.io-client/lib/xmlhttprequest.js"]},"node_modules/engine.io-client/lib/xmlhttprequest.js":{"index":32,"hash":"cTYQRMHLATiENPcOfA4t","parents":["node_modules/engine.io-client/lib/transports/polling-xhr.js","node_modules/engine.io-client/lib/transports/polling.js","node_modules/engine.io-client/lib/transports/index.js"]},"node_modules/component-inherit/index.js":{"index":19,"hash":"T0Fqch4d4akvlr8bh7lc","parents":["node_modules/engine.io-client/lib/transports/polling-xhr.js","node_modules/engine.io-client/lib/transports/polling.js","node_modules/engine.io-client/lib/transports/polling-jsonp.js","node_modules/engine.io-client/lib/transports/websocket.js"]},"node_modules/yeast/index.js":{"index":424,"hash":"ZM3+5w4l/D2f6x7svySF","parents":["node_modules/engine.io-client/lib/transports/polling.js","node_modules/engine.io-client/lib/transports/websocket.js"]},"node_modules/engine.io-client/lib/transports/polling-xhr.js":{"index":29,"hash":"Jw5kGBOLpldDS6y1tmqD","parents":["node_modules/engine.io-client/lib/transports/index.js"]},"node_modules/engine.io-client/lib/transports/polling.js":{"index":30,"hash":"iR9NdLeAEs8vSYk/mMqT","parents":["node_modules/engine.io-client/lib/transports/polling-xhr.js","node_modules/engine.io-client/lib/transports/polling-jsonp.js"]},"node_modules/engine.io-client/lib/transports/polling-jsonp.js":{"index":28,"hash":"y6zhp2BcjjZ+KW4rXG35","parents":["node_modules/engine.io-client/lib/transports/index.js"]},"node_modules/base64-arraybuffer/lib/base64-arraybuffer.js":{"index":10,"hash":"8XSfHUrJJCZLdLVRE4Xb","parents":["node_modules/engine.io-parser/lib/browser.js"]},"node_modules/browser-resolve/empty.js":{"index":13,"hash":"47DEQpj8HBSa+/TImW+5","parents":["node_modules/engine.io-client/lib/transports/websocket.js"]},"node_modules/engine.io-client/lib/transports/websocket.js":{"index":31,"hash":"npI0FxxihB5ZWu5qtXwA","parents":["node_modules/engine.io-client/lib/transports/index.js"]},"node_modules/engine.io-client/lib/transports/index.js":{"index":27,"hash":"r1mMVUmACxBW/zZI87/q","parents":["node_modules/engine.io-client/lib/socket.js"]},"node_modules/engine.io-client/lib/socket.js":{"index":25,"hash":"t3RNgmz9EK0TuoO1tvmR","parents":["node_modules/engine.io-client/lib/index.js"]},"node_modules/engine.io-client/lib/index.js":{"index":24,"hash":"G6QYuSNu0EcS+G5tR9NE","parents":["node_modules/socket.io-client/lib/manager.js"]},"node_modules/socket.io-client/lib/manager.js":{"index":408,"hash":"fuESgYCj6MeJBthiS/c9","parents":["node_modules/socket.io-client/lib/index.js"]},"node_modules/socket.io-client/lib/index.js":{"index":407,"hash":"77zpTM5ck9mQrSo8paNO","parents":[]},"node_modules/react-transform-catch-errors/lib/index.js":{"index":376,"hash":"d4WZ4EUZkL1RcGyv0d7V","parents":["lib/Autocomplete.js","examples/async-data/app.js"]},"node_modules/object-assign/index.js":{"index":232,"hash":"4Cy5cU725WHpcf5ABkQz","parents":["node_modules/react-dom/lib/ReactDOMEmptyComponent.js","node_modules/react-dom/lib/ReactReconcileTransaction.js","node_modules/prop-types/factoryWithTypeCheckers.js","node_modules/react/lib/ReactBaseClasses.js","node_modules/create-react-class/factory.js","node_modules/react-dom/lib/ReactUpdates.js","node_modules/react-dom/lib/ReactDefaultBatchingStrategy.js","node_modules/react-dom/lib/ReactEventListener.js","node_modules/react-dom/lib/validateDOMNesting.js","node_modules/react-dom/lib/ReactBrowserEventEmitter.js","node_modules/react-dom/lib/SyntheticEvent.js","node_modules/react-dom/lib/ReactDOMOption.js","node_modules/react-dom/lib/ReactDOMTextarea.js","node_modules/react-dom/lib/ReactDOMInput.js","node_modules/react-dom/lib/ReactCompositeComponent.js","node_modules/react-dom/lib/instantiateReactComponent.js","node_modules/react-dom/lib/FallbackCompositionState.js","node_modules/react-dom/lib/ReactDOMSelect.js","node_modules/react-dom/lib/ReactServerRenderingTransaction.js","node_modules/react/lib/ReactElement.js","node_modules/react/lib/React.js","node_modules/react-dom/lib/ReactDOMComponent.js","node_modules/react-dom/lib/ReactDOMTextComponent.js","node_modules/redbox-react/lib/index.js"]},"node_modules/stackframe/stackframe.js":{"index":421,"hash":"ja0rp7Pm4GxxMckEePfw","parents":["node_modules/error-stack-parser/error-stack-parser.js"]},"node_modules/error-stack-parser/error-stack-parser.js":{"index":38,"hash":"LmuSSIq9G5qhw4UCl0wG","parents":["node_modules/redbox-react/lib/index.js"]},"node_modules/global/window.js":{"index":62,"hash":"mzUQ8Bh4kHwaVvdEBpkM","parents":["node_modules/react-transform-hmr/lib/index.js"]},"node_modules/sourcemapped-stacktrace/dist/sourcemapped-stacktrace.js":{"index":420,"hash":"H3q+F3QoWymsZafFRB1Q","parents":["node_modules/redbox-react/lib/index.js"]},"node_modules/react/lib/ReactVersion.js":{"index":393,"hash":"9LAEtIZgq7pgiXo8fE4+","parents":["node_modules/react/lib/React.js"]},"node_modules/react/lib/lowPriorityWarning.js":{"index":399,"hash":"GNdZwGfl0iCwfxEcB2xv","parents":["node_modules/react/lib/ReactBaseClasses.js","node_modules/react/lib/ReactElementValidator.js","node_modules/react/lib/React.js"]},"node_modules/react/lib/canDefineProperty.js":{"index":394,"hash":"QghMR4FztbE2EiBEqogm","parents":["node_modules/react/lib/ReactBaseClasses.js","node_modules/react/lib/ReactElement.js","node_modules/react/lib/ReactElementValidator.js","node_modules/react/lib/React.js"]},"node_modules/react/lib/ReactDOMFactories.js":{"index":385,"hash":"7un0EH6XvkJXy67UrzMW","parents":["node_modules/react/lib/React.js"]},"node_modules/react/lib/ReactElement.js":{"index":386,"hash":"TMLVKnr2p2SqWqlKfiX3","parents":["node_modules/react/lib/ReactDOMFactories.js","node_modules/react/lib/ReactPropTypes.js","node_modules/react/lib/onlyChild.js","node_modules/react/lib/ReactChildren.js","node_modules/react/lib/createClass.js","node_modules/react/lib/ReactElementValidator.js","node_modules/react/lib/React.js"]},"node_modules/react/lib/ReactElementValidator.js":{"index":388,"hash":"P97R9OgZ8inKppL8VEkN","parents":["node_modules/react/lib/ReactDOMFactories.js","node_modules/react/lib/React.js"]},"node_modules/react/lib/ReactCurrentOwner.js":{"index":384,"hash":"z3rHu73qg1eLQMrqhU3x","parents":["node_modules/react/lib/traverseAllChildren.js","node_modules/react/lib/ReactComponentTreeHook.js","node_modules/react-dom/lib/findDOMNode.js","node_modules/react-dom/lib/ReactUpdateQueue.js","node_modules/react-dom/lib/ReactCompositeComponent.js","node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/traverseAllChildren.js","node_modules/react-dom/lib/ReactMultiChild.js","node_modules/react/lib/ReactElement.js","node_modules/react/lib/ReactElementValidator.js"]},"node_modules/react/lib/ReactElementSymbol.js":{"index":387,"hash":"9iYlL4uEURVCU+xNFqmD","parents":["node_modules/react/lib/traverseAllChildren.js","node_modules/react/lib/ReactElement.js"]},"node_modules/react/lib/reactProdInvariant.js":{"index":401,"hash":"y7wEA39QYGdwFcYeTaKy","parents":["node_modules/react/lib/onlyChild.js","node_modules/react/lib/ReactBaseClasses.js","node_modules/react/lib/PooledClass.js","node_modules/react/lib/traverseAllChildren.js","node_modules/react/lib/ReactComponentTreeHook.js","node_modules/react/lib/checkReactTypeSpec.js"]},"node_modules/react/lib/getIteratorFn.js":{"index":397,"hash":"C7palRxlWfrs9QHzmMUr","parents":["node_modules/react/lib/traverseAllChildren.js","node_modules/react/lib/ReactElementValidator.js"]},"node_modules/prop-types/factory.js":{"index":237,"hash":"/0UFFtHEBwjjASSQnZSW","parents":["node_modules/react/lib/ReactPropTypes.js","node_modules/react-dom/lib/LinkedValueUtils.js"]},"node_modules/prop-types/factoryWithTypeCheckers.js":{"index":239,"hash":"PU4ohF1rNb4G9nO9yYu7","parents":["node_modules/prop-types/factory.js","node_modules/prop-types/index.js"]},"node_modules/react/lib/ReactPropTypes.js":{"index":391,"hash":"8uWuNRBiTJiLr+7JSOQl","parents":["node_modules/react/lib/React.js"]},"node_modules/react/lib/KeyEscapeUtils.js":{"index":378,"hash":"13bQUXQjqF8LudJcE8pR","parents":["node_modules/react/lib/traverseAllChildren.js"]},"node_modules/react/lib/ReactPropTypesSecret.js":{"index":392,"hash":"LgvUWKNgep5sVj++K9NH","parents":["node_modules/react/lib/checkReactTypeSpec.js"]},"node_modules/react/lib/ReactPropTypeLocationNames.js":{"index":390,"hash":"Ihr+1aeJqeSvcUkvoM0B","parents":["node_modules/react/lib/checkReactTypeSpec.js"]},"node_modules/react-dom/lib/ReactVersion.js":{"index":321,"hash":"9LAEtIZgq7pgiXo8fE4+","parents":["node_modules/react-dom/lib/ReactDOM.js"]},"node_modules/react-dom/lib/renderSubtreeIntoContainer.js":{"index":364,"hash":"XW2FsCvVv/FZgW4DBo2p","parents":["node_modules/react-dom/lib/ReactDOM.js"]},"node_modules/react-dom/lib/ReactMount.js":{"index":308,"hash":"iHSYQIteaF34VoTMYf/Q","parents":["node_modules/react-dom/lib/renderSubtreeIntoContainer.js","node_modules/react-dom/lib/ReactDOM.js"]},"node_modules/react-dom/lib/reactProdInvariant.js":{"index":363,"hash":"y7wEA39QYGdwFcYeTaKy","parents":["node_modules/react-dom/lib/findDOMNode.js","node_modules/react-dom/lib/ReactDOMComponentTree.js","node_modules/react-dom/lib/DOMProperty.js","node_modules/react-dom/lib/CallbackQueue.js","node_modules/react-dom/lib/PooledClass.js","node_modules/react-dom/lib/Transaction.js","node_modules/react-dom/lib/ReactUpdates.js","node_modules/react-dom/lib/ReactNodeTypes.js","node_modules/react-dom/lib/EventPluginRegistry.js","node_modules/react-dom/lib/ReactUpdateQueue.js","node_modules/react-dom/lib/ReactDOMTreeTraversal.js","node_modules/react-dom/lib/ReactOwner.js","node_modules/react-dom/lib/ReactHostComponent.js","node_modules/react-dom/lib/EventPluginHub.js","node_modules/react-dom/lib/EventPluginUtils.js","node_modules/react-dom/lib/ReactComponentEnvironment.js","node_modules/react-dom/lib/ReactDOMTextarea.js","node_modules/react-dom/lib/ReactDOMInput.js","node_modules/react-dom/lib/checkReactTypeSpec.js","node_modules/react-dom/lib/ReactCompositeComponent.js","node_modules/react-dom/lib/instantiateReactComponent.js","node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/accumulateInto.js","node_modules/react-dom/lib/LinkedValueUtils.js","node_modules/react-dom/lib/traverseAllChildren.js","node_modules/react-dom/lib/ReactMultiChild.js","node_modules/react-dom/lib/SimpleEventPlugin.js","node_modules/react-dom/lib/ReactDOMComponent.js","node_modules/react-dom/lib/Danger.js","node_modules/react-dom/lib/ReactDOMTextComponent.js"]},"node_modules/react-dom/lib/ReactInstanceMap.js":{"index":304,"hash":"54QS4AkVhQFY9y1v3MlI","parents":["node_modules/react-dom/lib/findDOMNode.js","node_modules/react-dom/lib/ReactUpdateQueue.js","node_modules/react-dom/lib/ReactCompositeComponent.js","node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/ReactMultiChild.js"]},"node_modules/react-dom/lib/ReactDOMComponentFlags.js":{"index":275,"hash":"zvyYHT9BQG1fq4Bixjv6","parents":["node_modules/react-dom/lib/ReactDOMComponentTree.js","node_modules/react-dom/lib/ReactDOMComponent.js"]},"node_modules/react-dom/lib/ReactFeatureFlags.js":{"index":299,"hash":"1XEDSE4MBEGg0jk20E3g","parents":["node_modules/react-dom/lib/ReactUpdates.js","node_modules/react-dom/lib/ReactMount.js"]},"node_modules/react-dom/lib/ReactDOMFeatureFlags.js":{"index":279,"hash":"cfC0G3Xm3QatwEcIG3cy","parents":["node_modules/react-dom/lib/ReactMount.js"]},"node_modules/react-dom/lib/shouldUpdateReactComponent.js":{"index":367,"hash":"XunJnmpacENqp/qf28xP","parents":["node_modules/react-dom/lib/ReactCompositeComponent.js","node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/ReactChildReconciler.js"]},"node_modules/react-dom/lib/ARIADOMPropertyConfig.js":{"index":244,"hash":"MvTq3y+kkGevbCmueXis","parents":["node_modules/react-dom/lib/ReactDefaultInjection.js"]},"node_modules/react-dom/lib/DefaultEventPluginOrder.js":{"index":257,"hash":"SyteyhCZaqvk/rfYo8RP","parents":["node_modules/react-dom/lib/ReactDefaultInjection.js"]},"node_modules/react-dom/lib/SVGDOMPropertyConfig.js":{"index":322,"hash":"sHdQi1KrCPZRcWOoWRID","parents":["node_modules/react-dom/lib/ReactDefaultInjection.js"]},"node_modules/react-dom/lib/adler32.js":{"index":341,"hash":"4YGfNh89qCHUT6RniTPH","parents":["node_modules/react-dom/lib/ReactMarkupChecksum.js"]},"node_modules/react-dom/lib/ReactMarkupChecksum.js":{"index":307,"hash":"ZbEaVe6z9ZPb2wWX0Acs","parents":["node_modules/react-dom/lib/ReactMount.js"]},"node_modules/react-dom/lib/DOMNamespaces.js":{"index":253,"hash":"JK9XR/CdsdYmrjuyIF5j","parents":["node_modules/react-dom/lib/setInnerHTML.js","node_modules/react-dom/lib/DOMLazyTree.js","node_modules/react-dom/lib/ReactDOMComponent.js"]},"node_modules/react-dom/lib/createMicrosoftUnsafeLocalFunction.js":{"index":343,"hash":"DiWfydF6DWSZ0XOAc2sZ","parents":["node_modules/react-dom/lib/setInnerHTML.js","node_modules/react-dom/lib/DOMLazyTree.js","node_modules/react-dom/lib/DOMChildrenOperations.js"]},"node_modules/react-dom/lib/ViewportMetrics.js":{"index":339,"hash":"jA/5BDWJCXCaFJri7r85","parents":["node_modules/react-dom/lib/SyntheticMouseEvent.js","node_modules/react-dom/lib/ReactBrowserEventEmitter.js"]},"node_modules/react-dom/lib/ReactEmptyComponent.js":{"index":295,"hash":"hPCE1IQ5NjNEcR05XXs1","parents":["node_modules/react-dom/lib/ReactInjection.js","node_modules/react-dom/lib/instantiateReactComponent.js"]},"node_modules/react/lib/getNextDebugID.js":{"index":398,"hash":"1Odk4ujLulUft9dnBiEn","parents":["node_modules/react-dom/lib/instantiateReactComponent.js"]},"node_modules/react-dom/lib/ReactHostOperationHistoryHook.js":{"index":301,"hash":"JIlTg8R2IuZi5lvTg7sH","parents":["node_modules/react-dom/lib/ReactDebugTool.js"]},"node_modules/react-dom/lib/HTMLDOMPropertyConfig.js":{"index":264,"hash":"zv7o67QPC0rY88WdGEmK","parents":["node_modules/react-dom/lib/ReactDefaultInjection.js"]},"node_modules/react-dom/lib/DOMProperty.js":{"index":254,"hash":"6L+Dw11mzIjnw26Eu04d","parents":["node_modules/react-dom/lib/HTMLDOMPropertyConfig.js","node_modules/react-dom/lib/ReactDOMComponentTree.js","node_modules/react-dom/lib/ReactDOMInvalidARIAHook.js","node_modules/react-dom/lib/ReactDOMUnknownPropertyHook.js","node_modules/react-dom/lib/ReactInjection.js","node_modules/react-dom/lib/DOMPropertyOperations.js","node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/ReactDOMComponent.js"]},"node_modules/react-dom/lib/ReactDOMEmptyComponent.js":{"index":278,"hash":"ngjtZx4hG6osFIUtcGaz","parents":["node_modules/react-dom/lib/ReactDefaultInjection.js"]},"node_modules/react-dom/lib/DOMLazyTree.js":{"index":252,"hash":"iLVoB6VZw94kFCk0s8ZP","parents":["node_modules/react-dom/lib/ReactDOMEmptyComponent.js","node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/ReactDOMComponent.js","node_modules/react-dom/lib/Danger.js","node_modules/react-dom/lib/DOMChildrenOperations.js","node_modules/react-dom/lib/ReactDOMTextComponent.js"]},"node_modules/react-dom/lib/ReactDOMComponentTree.js":{"index":276,"hash":"aiMi6RW/R0kVCXT+4PkE","parents":["node_modules/react-dom/lib/ReactDOMEmptyComponent.js","node_modules/react-dom/lib/inputValueTracking.js","node_modules/react-dom/lib/ReactDOMIDOperations.js","node_modules/react-dom/lib/findDOMNode.js","node_modules/react-dom/lib/ReactEventListener.js","node_modules/react-dom/lib/ChangeEventPlugin.js","node_modules/react-dom/lib/DOMPropertyOperations.js","node_modules/react-dom/lib/ReactDOMOption.js","node_modules/react-dom/lib/ReactDOMTextarea.js","node_modules/react-dom/lib/AutoFocusUtils.js","node_modules/react-dom/lib/ReactDOMInput.js","node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/EnterLeaveEventPlugin.js","node_modules/react-dom/lib/ReactDOMSelect.js","node_modules/react-dom/lib/SimpleEventPlugin.js","node_modules/react-dom/lib/ReactDOMComponent.js","node_modules/react-dom/lib/SelectEventPlugin.js","node_modules/react-dom/lib/DOMChildrenOperations.js","node_modules/react-dom/lib/ReactDOMTextComponent.js","node_modules/react-dom/lib/ReactDefaultInjection.js","node_modules/react-dom/lib/ReactDOM.js"]},"node_modules/react-dom/lib/escapeTextContentForBrowser.js":{"index":345,"hash":"tJ7XyQhhSfl3w+Rfre6m","parents":["node_modules/react-dom/lib/quoteAttributeValueForBrowser.js","node_modules/react-dom/lib/setTextContent.js","node_modules/react-dom/lib/ReactDOMComponent.js","node_modules/react-dom/lib/ReactDOMTextComponent.js"]},"node_modules/react-dom/lib/isTextInputElement.js":{"index":361,"hash":"/Ex+dWXXyvq8TTRX0/ED","parents":["node_modules/react-dom/lib/ChangeEventPlugin.js","node_modules/react-dom/lib/SelectEventPlugin.js"]},"node_modules/react-dom/lib/getEventCharCode.js":{"index":349,"hash":"NDFR5RqZI9cWhSfnUs8g","parents":["node_modules/react-dom/lib/getEventKey.js","node_modules/react-dom/lib/SyntheticKeyboardEvent.js","node_modules/react-dom/lib/SimpleEventPlugin.js"]},"node_modules/react-dom/lib/getEventTarget.js":{"index":352,"hash":"XBfkvViABCsi1RQyfGfI","parents":["node_modules/react-dom/lib/SyntheticUIEvent.js","node_modules/react-dom/lib/ReactEventListener.js","node_modules/react-dom/lib/ChangeEventPlugin.js"]},"node_modules/react-dom/lib/ReactReconcileTransaction.js":{"index":314,"hash":"8IOfGXAol7Th3U+6Ms95","parents":["node_modules/react-dom/lib/ReactDefaultInjection.js"]},"node_modules/react-dom/lib/CallbackQueue.js":{"index":249,"hash":"bXxC8fQCXxNT+u3rMpTN","parents":["node_modules/react-dom/lib/ReactReconcileTransaction.js","node_modules/react-dom/lib/ReactUpdates.js"]},"node_modules/react-dom/lib/PooledClass.js":{"index":267,"hash":"QkXWaP66jGD5pgc0sv08","parents":["node_modules/react-dom/lib/ReactReconcileTransaction.js","node_modules/react-dom/lib/CallbackQueue.js","node_modules/react-dom/lib/ReactUpdates.js","node_modules/react-dom/lib/ReactEventListener.js","node_modules/react-dom/lib/SyntheticEvent.js","node_modules/react-dom/lib/FallbackCompositionState.js","node_modules/react-dom/lib/ReactServerRenderingTransaction.js"]},"node_modules/react-dom/lib/ReactBrowserEventEmitter.js":{"index":268,"hash":"zbrbDKbZeaqVKyagkIsu","parents":["node_modules/react-dom/lib/ReactReconcileTransaction.js","node_modules/react-dom/lib/ReactInjection.js","node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/ReactDOMComponent.js"]},"node_modules/react-dom/lib/ReactInstrumentation.js":{"index":305,"hash":"wNasDr/bqR71y+2Cl0G9","parents":["node_modules/react-dom/lib/ReactReconcileTransaction.js","node_modules/react-dom/lib/ReactUpdateQueue.js","node_modules/react-dom/lib/ReactReconciler.js","node_modules/react-dom/lib/DOMPropertyOperations.js","node_modules/react-dom/lib/ReactCompositeComponent.js","node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/ReactServerRenderingTransaction.js","node_modules/react-dom/lib/ReactMultiChild.js","node_modules/react-dom/lib/CSSPropertyOperations.js","node_modules/react-dom/lib/ReactDOMComponent.js","node_modules/react-dom/lib/DOMChildrenOperations.js","node_modules/react-dom/lib/ReactDOM.js"]},"node_modules/react-dom/lib/Transaction.js":{"index":338,"hash":"ebgkvsq+nUigSyKjSnPY","parents":["node_modules/react-dom/lib/ReactReconcileTransaction.js","node_modules/react-dom/lib/ReactUpdates.js","node_modules/react-dom/lib/ReactDefaultBatchingStrategy.js","node_modules/react-dom/lib/ReactServerRenderingTransaction.js"]},"node_modules/react-dom/lib/ReactUpdateQueue.js":{"index":319,"hash":"VB/4hJ6zuI8z6XPZIRX4","parents":["node_modules/react-dom/lib/ReactReconcileTransaction.js","node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/ReactServerUpdateQueue.js"]},"node_modules/react-dom/lib/ReactInputSelection.js":{"index":303,"hash":"Cx1txN+RaN0JAOv/XHcv","parents":["node_modules/react-dom/lib/ReactReconcileTransaction.js","node_modules/react-dom/lib/SelectEventPlugin.js"]},"node_modules/react-dom/lib/ReactEventEmitterMixin.js":{"index":297,"hash":"FmLf6APflIJiqlOFsDXf","parents":["node_modules/react-dom/lib/ReactBrowserEventEmitter.js"]},"node_modules/react-dom/lib/EventPluginHub.js":{"index":259,"hash":"aO2eNymPDnk8QE7b8+UQ","parents":["node_modules/react-dom/lib/ReactEventEmitterMixin.js","node_modules/react-dom/lib/ChangeEventPlugin.js","node_modules/react-dom/lib/ReactInjection.js","node_modules/react-dom/lib/EventPropagators.js","node_modules/react-dom/lib/ReactDOMComponent.js"]},"node_modules/react-dom/lib/ReactErrorUtils.js":{"index":296,"hash":"JAXtnz9klCkpUMay8p2W","parents":["node_modules/react-dom/lib/EventPluginHub.js","node_modules/react-dom/lib/EventPluginUtils.js","node_modules/react-dom/lib/ReactCompositeComponent.js"]},"node_modules/react-dom/lib/forEachAccumulated.js":{"index":348,"hash":"qFesPNgOJvHnMu2T+EGT","parents":["node_modules/react-dom/lib/EventPluginHub.js","node_modules/react-dom/lib/EventPropagators.js"]},"node_modules/react-dom/lib/getEventModifierState.js":{"index":351,"hash":"6oVevrHHMCt+3A18GY44","parents":["node_modules/react-dom/lib/SyntheticMouseEvent.js","node_modules/react-dom/lib/SyntheticTouchEvent.js","node_modules/react-dom/lib/SyntheticKeyboardEvent.js"]},"node_modules/react-dom/lib/SyntheticMouseEvent.js":{"index":333,"hash":"v045qQocrNuMpSFdrM1r","parents":["node_modules/react-dom/lib/SyntheticWheelEvent.js","node_modules/react-dom/lib/SyntheticDragEvent.js","node_modules/react-dom/lib/EnterLeaveEventPlugin.js","node_modules/react-dom/lib/SimpleEventPlugin.js"]},"node_modules/react-dom/lib/SyntheticUIEvent.js":{"index":336,"hash":"K6jiNoPyOGkoVCvYLBQH","parents":["node_modules/react-dom/lib/SyntheticMouseEvent.js","node_modules/react-dom/lib/SyntheticFocusEvent.js","node_modules/react-dom/lib/SyntheticTouchEvent.js","node_modules/react-dom/lib/SyntheticKeyboardEvent.js","node_modules/react-dom/lib/SimpleEventPlugin.js"]},"node_modules/react-dom/lib/SyntheticClipboardEvent.js":{"index":326,"hash":"Mwa0jQSK7M5yzKtN2911","parents":["node_modules/react-dom/lib/SimpleEventPlugin.js"]},"node_modules/react-dom/lib/SyntheticEvent.js":{"index":329,"hash":"BFttA0sqNks3QWyQ99B0","parents":["node_modules/react-dom/lib/SyntheticClipboardEvent.js","node_modules/react-dom/lib/SyntheticAnimationEvent.js","node_modules/react-dom/lib/SyntheticUIEvent.js","node_modules/react-dom/lib/SyntheticTransitionEvent.js","node_modules/react-dom/lib/SyntheticCompositionEvent.js","node_modules/react-dom/lib/SyntheticInputEvent.js","node_modules/react-dom/lib/ChangeEventPlugin.js","node_modules/react-dom/lib/SimpleEventPlugin.js","node_modules/react-dom/lib/SelectEventPlugin.js"]},"node_modules/react-dom/lib/SyntheticAnimationEvent.js":{"index":325,"hash":"+cWQwrRbIBYELCJAAeNg","parents":["node_modules/react-dom/lib/SimpleEventPlugin.js"]},"node_modules/react-dom/lib/SyntheticFocusEvent.js":{"index":330,"hash":"ZQOEcTk9n/OuN8KlmCCM","parents":["node_modules/react-dom/lib/SimpleEventPlugin.js"]},"node_modules/react-dom/lib/SyntheticTouchEvent.js":{"index":334,"hash":"VURFudzArkuXLElG4dVl","parents":["node_modules/react-dom/lib/SimpleEventPlugin.js"]},"node_modules/react-dom/lib/SyntheticWheelEvent.js":{"index":337,"hash":"2ilRiBAFuw/SODZwOPoE","parents":["node_modules/react-dom/lib/SimpleEventPlugin.js"]},"node_modules/react-dom/lib/SyntheticTransitionEvent.js":{"index":335,"hash":"rL3mp9E5xzuG+Zy39B1l","parents":["node_modules/react-dom/lib/SimpleEventPlugin.js"]},"node_modules/react-dom/lib/SyntheticDragEvent.js":{"index":328,"hash":"27kddmOyrO0whuJnOybB","parents":["node_modules/react-dom/lib/SimpleEventPlugin.js"]},"node_modules/react-dom/lib/inputValueTracking.js":{"index":358,"hash":"omMHKMVNM4ubGolrLdj4","parents":["node_modules/react-dom/lib/ChangeEventPlugin.js","node_modules/react-dom/lib/ReactDOMComponent.js"]},"node_modules/react-dom/lib/SyntheticCompositionEvent.js":{"index":327,"hash":"Ih5GmBya3Gl9pyniMRXQ","parents":["node_modules/react-dom/lib/BeforeInputEventPlugin.js"]},"node_modules/react-dom/lib/SyntheticInputEvent.js":{"index":331,"hash":"hCmXYmnbm3ijUyCmvV0z","parents":["node_modules/react-dom/lib/BeforeInputEventPlugin.js"]},"node_modules/react-dom/lib/CSSProperty.js":{"index":247,"hash":"CsnpE2e+xFKbG7aQLUY3","parents":["node_modules/react-dom/lib/dangerousStyleValue.js","node_modules/react-dom/lib/CSSPropertyOperations.js"]},"node_modules/react-dom/lib/ReactDOMIDOperations.js":{"index":280,"hash":"DlWai/stZXoJW1MPTU0t","parents":["node_modules/react-dom/lib/ReactComponentBrowserEnvironment.js"]},"node_modules/react-dom/lib/DOMChildrenOperations.js":{"index":251,"hash":"7O46fsx0kYQ25aVVZKci","parents":["node_modules/react-dom/lib/ReactDOMIDOperations.js","node_modules/react-dom/lib/ReactComponentBrowserEnvironment.js","node_modules/react-dom/lib/ReactDOMTextComponent.js"]},"node_modules/react-dom/lib/ReactComponentBrowserEnvironment.js":{"index":270,"hash":"/SBJThBi7oXnOUQG5qQY","parents":["node_modules/react-dom/lib/ReactDefaultInjection.js"]},"node_modules/react-dom/lib/ReactPropTypesSecret.js":{"index":313,"hash":"LgvUWKNgep5sVj++K9NH","parents":["node_modules/react-dom/lib/checkReactTypeSpec.js","node_modules/react-dom/lib/LinkedValueUtils.js"]},"node_modules/react-dom/lib/ReactPropTypeLocationNames.js":{"index":312,"hash":"Ihr+1aeJqeSvcUkvoM0B","parents":["node_modules/react-dom/lib/checkReactTypeSpec.js"]},"node_modules/react-dom/lib/getNodeForCharacterOffset.js":{"index":355,"hash":"3/1Up0D+E9yEudNksUvn","parents":["node_modules/react-dom/lib/ReactDOMSelection.js"]},"node_modules/react-dom/lib/getEventKey.js":{"index":350,"hash":"LBi8ObKPnS5l8ReBXGhV","parents":["node_modules/react-dom/lib/SyntheticKeyboardEvent.js"]},"node_modules/react-dom/lib/SyntheticKeyboardEvent.js":{"index":332,"hash":"2JubV5iRmOJEkHjawKpl","parents":["node_modules/react-dom/lib/SimpleEventPlugin.js"]},"node_modules/react-dom/lib/quoteAttributeValueForBrowser.js":{"index":362,"hash":"UUTPFGdwC/73R+EBqBSw","parents":["node_modules/react-dom/lib/DOMPropertyOperations.js"]},"node_modules/react-dom/lib/KeyEscapeUtils.js":{"index":265,"hash":"13bQUXQjqF8LudJcE8pR","parents":["node_modules/react-dom/lib/ReactChildReconciler.js","node_modules/react-dom/lib/traverseAllChildren.js","node_modules/react-dom/lib/flattenChildren.js"]},"node_modules/react-dom/lib/ReactElementSymbol.js":{"index":294,"hash":"9iYlL4uEURVCU+xNFqmD","parents":["node_modules/react-dom/lib/traverseAllChildren.js"]},"node_modules/react-dom/lib/getIteratorFn.js":{"index":354,"hash":"C7palRxlWfrs9QHzmMUr","parents":["node_modules/react-dom/lib/traverseAllChildren.js"]},"node_modules/prop-types/lib/ReactPropTypesSecret.js":{"index":241,"hash":"yCa2a0ciDI5Fcb9U1WtJ","parents":["node_modules/prop-types/checkPropTypes.js","node_modules/prop-types/factoryWithTypeCheckers.js","node_modules/prop-types/factoryWithThrowingShims.js"]},"node_modules/prop-types/checkPropTypes.js":{"index":236,"hash":"PKvE7Sy6FezpS4HJ7GOl","parents":["node_modules/prop-types/factoryWithTypeCheckers.js"]},"node_modules/prop-types/factoryWithThrowingShims.js":{"index":238,"hash":"s52bfJZhuicP7/whYdZy","parents":["node_modules/prop-types/index.js"]},"node_modules/prop-types/index.js":{"index":240,"hash":"6W5uyWPbeB6mjzDJl087","parents":["node_modules/redbox-react/lib/index.js","lib/Autocomplete.js"]},"node_modules/dom-scroll-into-view/lib/util.js":{"index":23,"hash":"1iYOg9eu+zT589GFePtU","parents":["node_modules/dom-scroll-into-view/lib/dom-scroll-into-view.js"]},"node_modules/dom-scroll-into-view/lib/dom-scroll-into-view.js":{"index":22,"hash":"SOgbdLZUkB5lUaf8ZLUW","parents":["node_modules/dom-scroll-into-view/index.js"]},"node_modules/dom-scroll-into-view/index.js":{"index":21,"hash":"REI5LRqeEd06D7F6Sn07","parents":["lib/Autocomplete.js"]},"node_modules/react-proxy/modules/supportsProtoAssignment.js":{"index":375,"hash":"jjzK7qnEli0y9YexNOO8","parents":["node_modules/react-proxy/modules/createClassProxy.js","node_modules/react-proxy/modules/index.js"]},"node_modules/react-proxy/modules/deleteUnknownAutoBindMethods.js":{"index":373,"hash":"dlzhuGTtiYvbRYsQWbIR","parents":["node_modules/react-proxy/modules/createClassProxy.js"]},"node_modules/react-proxy/modules/bindAutoBindMethods.js":{"index":370,"hash":"a8jFLxZ8VQKMr8x5Z76P","parents":["node_modules/react-proxy/modules/createClassProxy.js"]},"node_modules/lodash/_createFind.js":{"index":133,"hash":"ahUjYlegwJ27cITFrnlX","parents":["node_modules/lodash/find.js"]},"node_modules/lodash/_baseFindIndex.js":{"index":95,"hash":"B+mUKkfutyPrn6G8D3JA","parents":["node_modules/lodash/findIndex.js","node_modules/lodash/_baseIndexOf.js"]},"node_modules/lodash/isArrayLikeObject.js":{"index":210,"hash":"KfrDkTbme044x7wq3wcC","parents":["node_modules/lodash/difference.js"]},"node_modules/lodash/_arrayIncludesWith.js":{"index":84,"hash":"oTELKzq+GmczeR+AO62F","parents":["node_modules/lodash/_baseDifference.js"]},"node_modules/lodash/_isFlattenable.js":{"index":153,"hash":"7FG5d6Madv54fkbl7I27","parents":["node_modules/lodash/_baseFlatten.js"]},"node_modules/lodash/_baseFlatten.js":{"index":96,"hash":"JBD8Sn+ehm0j5kKtK5Pl","parents":["node_modules/lodash/difference.js"]},"node_modules/lodash/toNumber.js":{"index":228,"hash":"KsfFzHVal3ehQINTEw/b","parents":["node_modules/lodash/toFinite.js"]},"node_modules/lodash/toFinite.js":{"index":226,"hash":"o6nuxAsOgjvj4Ld9xDpO","parents":["node_modules/lodash/toInteger.js"]},"node_modules/lodash/toInteger.js":{"index":227,"hash":"2nmh89O+MA4mpv2kpFpn","parents":["node_modules/lodash/findIndex.js"]},"node_modules/lodash/findIndex.js":{"index":201,"hash":"Vhs4cAQSeDpXm9zfq4Nw","parents":["node_modules/lodash/find.js"]},"node_modules/lodash/find.js":{"index":200,"hash":"SoGxNPnxXX4W+G7UdZkX","parents":["node_modules/react-proxy/modules/createClassProxy.js"]},"node_modules/lodash/_baseIsNaN.js":{"index":108,"hash":"nmH7cPW83qn1zlOUnqLE","parents":["node_modules/lodash/_baseIndexOf.js"]},"node_modules/lodash/_strictIndexOf.js":{"index":191,"hash":"OUWSv8kC7GRRR4zuXkZg","parents":["node_modules/lodash/_baseIndexOf.js"]},"node_modules/lodash/_baseIndexOf.js":{"index":103,"hash":"FgzEDd4L8Ol7FFMN9WvE","parents":["node_modules/lodash/_arrayIncludes.js"]},"node_modules/lodash/_arrayIncludes.js":{"index":83,"hash":"f0vDXHmC4t+bHD/B8dri","parents":["node_modules/lodash/_baseDifference.js"]},"node_modules/lodash/_baseDifference.js":{"index":92,"hash":"Ib9lAr0P1k8rvhHu3ZsX","parents":["node_modules/lodash/difference.js"]},"node_modules/lodash/difference.js":{"index":197,"hash":"Nfjy6Ng+GvGhj6YEPdZD","parents":["node_modules/react-proxy/modules/createPrototypeProxy.js"]},"node_modules/react-proxy/modules/createPrototypeProxy.js":{"index":372,"hash":"EwXVshsxptvENkIXYYh6","parents":["node_modules/react-proxy/modules/createClassProxy.js"]},"node_modules/react-proxy/modules/createClassProxy.js":{"index":371,"hash":"pXyW1KusL4SKd8o3rH7/","parents":["node_modules/react-proxy/modules/index.js"]},"node_modules/fbjs/lib/invariant.js":{"index":54,"hash":"JHzqm3YlJwe4cMqT0uaL","parents":["node_modules/react/lib/onlyChild.js","node_modules/react/lib/ReactBaseClasses.js","node_modules/react/lib/PooledClass.js","node_modules/react/lib/traverseAllChildren.js","node_modules/react/lib/ReactComponentTreeHook.js","node_modules/react/lib/checkReactTypeSpec.js","node_modules/create-react-class/factory.js","node_modules/react-dom/lib/findDOMNode.js","node_modules/react-dom/lib/ReactDOMComponentTree.js","node_modules/react-dom/lib/DOMProperty.js","node_modules/react-dom/lib/CallbackQueue.js","node_modules/react-dom/lib/PooledClass.js","node_modules/react-dom/lib/Transaction.js","node_modules/react-dom/lib/ReactUpdates.js","node_modules/react-dom/lib/ReactNodeTypes.js","node_modules/react-dom/lib/EventPluginRegistry.js","node_modules/react-dom/lib/ReactUpdateQueue.js","node_modules/react-dom/lib/ReactDOMTreeTraversal.js","node_modules/react-dom/lib/ReactOwner.js","node_modules/react-dom/lib/ReactHostComponent.js","node_modules/react-dom/lib/EventPluginHub.js","node_modules/react-dom/lib/EventPluginUtils.js","node_modules/react-dom/lib/ReactComponentEnvironment.js","node_modules/react-dom/lib/ReactDOMTextarea.js","node_modules/react-dom/lib/ReactDOMInput.js","node_modules/react-dom/lib/checkReactTypeSpec.js","node_modules/react-dom/lib/ReactCompositeComponent.js","node_modules/react-dom/lib/instantiateReactComponent.js","node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/accumulateInto.js","node_modules/react-dom/lib/LinkedValueUtils.js","node_modules/react-dom/lib/traverseAllChildren.js","node_modules/react-dom/lib/ReactMultiChild.js","node_modules/react-dom/lib/SimpleEventPlugin.js","node_modules/react-dom/lib/ReactDOMComponent.js","node_modules/fbjs/lib/createArrayFromMixed.js","node_modules/fbjs/lib/getMarkupWrap.js","node_modules/fbjs/lib/createNodesFromMarkup.js","node_modules/react-dom/lib/Danger.js","node_modules/react-dom/lib/ReactDOMTextComponent.js"]},"node_modules/react/lib/onlyChild.js":{"index":400,"hash":"bYuGCow1kyDwB+4DzP8S","parents":["node_modules/react/lib/React.js"]},"node_modules/fbjs/lib/emptyObject.js":{"index":47,"hash":"XFKpKH1USfShDXwbFUKU","parents":["node_modules/react/lib/ReactBaseClasses.js","node_modules/create-react-class/factory.js","node_modules/react-dom/lib/ReactCompositeComponent.js","node_modules/react-dom/lib/ReactMount.js"]},"node_modules/fbjs/lib/emptyFunction.js":{"index":46,"hash":"1b545Cpp1frY54f250Pr","parents":["node_modules/react/lib/ReactChildren.js","node_modules/react-dom/lib/ReactDefaultBatchingStrategy.js","node_modules/react-dom/lib/validateDOMNesting.js","node_modules/react-dom/lib/SyntheticEvent.js","node_modules/react-dom/lib/ReactMultiChild.js","node_modules/fbjs/lib/warning.js","node_modules/fbjs/lib/EventListener.js","node_modules/react-dom/lib/SimpleEventPlugin.js","node_modules/react-dom/lib/ReactDOMComponent.js","node_modules/react-dom/lib/Danger.js"]},"node_modules/react/lib/ReactNoopUpdateQueue.js":{"index":389,"hash":"NwWIlHKQsNuosEgmiTLd","parents":["node_modules/react/lib/ReactBaseClasses.js","node_modules/react/lib/createClass.js"]},"node_modules/fbjs/lib/warning.js":{"index":61,"hash":"FCFag9zE9XOKyZqPtodI","parents":["node_modules/react/lib/ReactNoopUpdateQueue.js","node_modules/react/lib/traverseAllChildren.js","node_modules/react/lib/ReactComponentTreeHook.js","node_modules/react/lib/checkReactTypeSpec.js","node_modules/create-react-class/factory.js","node_modules/react-dom/lib/findDOMNode.js","node_modules/react-dom/lib/ReactDOMNullInputValuePropHook.js","node_modules/react-dom/lib/ReactDOMInvalidARIAHook.js","node_modules/react-dom/lib/ReactDOMUnknownPropertyHook.js","node_modules/react-dom/lib/ReactUpdateQueue.js","node_modules/react-dom/lib/ReactReconciler.js","node_modules/react-dom/lib/validateDOMNesting.js","node_modules/react-dom/lib/ReactInvalidSetStateWarningHook.js","node_modules/react-dom/lib/SyntheticEvent.js","node_modules/react-dom/lib/EventPluginUtils.js","node_modules/react-dom/lib/DOMPropertyOperations.js","node_modules/react-dom/lib/ReactDOMOption.js","node_modules/react-dom/lib/ReactDOMTextarea.js","node_modules/react-dom/lib/ReactDOMInput.js","node_modules/react-dom/lib/checkReactTypeSpec.js","node_modules/react-dom/lib/ReactCompositeComponent.js","node_modules/react-dom/lib/instantiateReactComponent.js","node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/EventPropagators.js","node_modules/react-dom/lib/LinkedValueUtils.js","node_modules/react-dom/lib/ReactDOMSelect.js","node_modules/react-dom/lib/ReactServerUpdateQueue.js","node_modules/react-dom/lib/dangerousStyleValue.js","node_modules/react-dom/lib/ReactChildReconciler.js","node_modules/react-dom/lib/traverseAllChildren.js","node_modules/react-dom/lib/flattenChildren.js","node_modules/react/lib/ReactElement.js","node_modules/react/lib/ReactElementValidator.js","node_modules/react-dom/lib/CSSPropertyOperations.js","node_modules/react-dom/lib/ReactDOMComponent.js","node_modules/react-dom/lib/ReactDebugTool.js","node_modules/react-dom/lib/ReactDOM.js"]},"node_modules/react/lib/ReactBaseClasses.js":{"index":381,"hash":"QhfB+fL8XuBGIuA6Geac","parents":["node_modules/react/lib/createClass.js","node_modules/react/lib/React.js"]},"node_modules/react/lib/PooledClass.js":{"index":379,"hash":"QkXWaP66jGD5pgc0sv08","parents":["node_modules/react/lib/ReactChildren.js"]},"node_modules/react/lib/traverseAllChildren.js":{"index":402,"hash":"EqYpR7tB2bOwLHGy1gFf","parents":["node_modules/react/lib/ReactChildren.js"]},"node_modules/react/lib/ReactChildren.js":{"index":382,"hash":"dnw3jirwkff4EcT3dcvf","parents":["node_modules/react/lib/React.js"]},"node_modules/react/lib/ReactComponentTreeHook.js":{"index":383,"hash":"E4dUloW309doJ8P5P/0X","parents":["node_modules/react/lib/checkReactTypeSpec.js","node_modules/react-dom/lib/ReactDOMNullInputValuePropHook.js","node_modules/react-dom/lib/ReactDOMInvalidARIAHook.js","node_modules/react-dom/lib/ReactDOMUnknownPropertyHook.js","node_modules/react-dom/lib/checkReactTypeSpec.js","node_modules/react-dom/lib/ReactChildReconciler.js","node_modules/react-dom/lib/flattenChildren.js","node_modules/react/lib/ReactElementValidator.js","node_modules/react-dom/lib/ReactDebugTool.js"]},"node_modules/react/lib/checkReactTypeSpec.js":{"index":395,"hash":"jityt5lPhTHxwEzEfMvC","parents":["node_modules/react/lib/ReactElementValidator.js"]},"node_modules/create-react-class/factory.js":{"index":20,"hash":"JjQK6VQveEkjNxTr6SFd","parents":["node_modules/react/lib/createClass.js"]},"node_modules/react/lib/createClass.js":{"index":396,"hash":"Ki/GTsS9y/eThOh+T9Wp","parents":["node_modules/react/lib/React.js"]},"node_modules/fbjs/lib/ExecutionEnvironment.js":{"index":40,"hash":"cB+xpJ+Mc0Q50E1Y7EpY","parents":["node_modules/react-dom/lib/setInnerHTML.js","node_modules/react-dom/lib/ReactEventListener.js","node_modules/react-dom/lib/ChangeEventPlugin.js","node_modules/react-dom/lib/setTextContent.js","node_modules/react-dom/lib/isEventSupported.js","node_modules/react-dom/lib/getVendorPrefixedEventName.js","node_modules/react-dom/lib/ReactDOMSelection.js","node_modules/react-dom/lib/getTextContentAccessor.js","node_modules/react-dom/lib/BeforeInputEventPlugin.js","node_modules/react-dom/lib/CSSPropertyOperations.js","node_modules/fbjs/lib/performance.js","node_modules/react-dom/lib/ReactDebugTool.js","node_modules/react-dom/lib/SelectEventPlugin.js","node_modules/fbjs/lib/getMarkupWrap.js","node_modules/fbjs/lib/createNodesFromMarkup.js","node_modules/react-dom/lib/Danger.js","node_modules/react-dom/lib/ReactDOM.js"]},"node_modules/react-dom/lib/findDOMNode.js":{"index":346,"hash":"UKrPFTmE06kmNQ+bai8R","parents":["node_modules/react-dom/lib/ReactDOM.js"]},"node_modules/react-dom/lib/getHostComponentFromComposite.js":{"index":353,"hash":"SOKXu/N3joD8ec79r3XS","parents":["node_modules/react-dom/lib/findDOMNode.js","node_modules/react-dom/lib/ReactDOM.js"]},"node_modules/react-dom/lib/ReactDOMNullInputValuePropHook.js":{"index":283,"hash":"ZdcC1p1VqFxoSfcXSxPN","parents":["node_modules/react-dom/lib/ReactDOM.js"]},"node_modules/react-dom/lib/ReactDOMInvalidARIAHook.js":{"index":282,"hash":"KybZfls1FaN9Mo8+csMH","parents":["node_modules/react-dom/lib/ReactDOM.js"]},"node_modules/react-dom/lib/ReactUpdates.js":{"index":320,"hash":"D+R5tvV7xrqpicDyXU6n","parents":["node_modules/react-dom/lib/ReactUpdateQueue.js","node_modules/react-dom/lib/ReactDefaultBatchingStrategy.js","node_modules/react-dom/lib/ReactEventListener.js","node_modules/react-dom/lib/ChangeEventPlugin.js","node_modules/react-dom/lib/ReactInjection.js","node_modules/react-dom/lib/ReactDOMTextarea.js","node_modules/react-dom/lib/ReactDOMInput.js","node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/ReactDOMSelect.js","node_modules/react-dom/lib/ReactDOM.js"]},"node_modules/react-dom/lib/ReactReconciler.js":{"index":315,"hash":"/UEG6deGT1g9LIiuKjg1","parents":["node_modules/react-dom/lib/ReactUpdates.js","node_modules/react-dom/lib/ReactCompositeComponent.js","node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/ReactChildReconciler.js","node_modules/react-dom/lib/ReactMultiChild.js","node_modules/react-dom/lib/ReactDOM.js"]},"node_modules/react-dom/lib/ReactNodeTypes.js":{"index":310,"hash":"cpD7HX1QDRQUitYRfylK","parents":["node_modules/react-dom/lib/getHostComponentFromComposite.js","node_modules/react-dom/lib/ReactCompositeComponent.js"]},"node_modules/react/lib/React.js":{"index":380,"hash":"sRI7YsOO4AgCJqheNyKQ","parents":["node_modules/react-dom/lib/ReactNodeTypes.js","node_modules/react-dom/lib/ReactDOMOption.js","node_modules/react-dom/lib/ReactCompositeComponent.js","node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/LinkedValueUtils.js","node_modules/react/react.js"]},"node_modules/react-dom/lib/EventPluginRegistry.js":{"index":260,"hash":"Az/ttLC8GNCMxYIWbFfL","parents":["node_modules/react-dom/lib/ReactDOMUnknownPropertyHook.js","node_modules/react-dom/lib/ReactBrowserEventEmitter.js","node_modules/react-dom/lib/EventPluginHub.js","node_modules/react-dom/lib/ReactDOMComponent.js"]},"node_modules/react-dom/lib/ReactDOMUnknownPropertyHook.js":{"index":290,"hash":"u6elGrpURZeF/5cTzYYY","parents":["node_modules/react-dom/lib/ReactDOM.js"]},"node_modules/react-dom/lib/setInnerHTML.js":{"index":365,"hash":"l9yXHKzwy28b16nguppq","parents":["node_modules/react-dom/lib/setTextContent.js","node_modules/react-dom/lib/DOMLazyTree.js","node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/DOMChildrenOperations.js"]},"node_modules/react-dom/lib/ReactDOMTreeTraversal.js":{"index":289,"hash":"fuAMpvn8ym+Ci4LM5vd9","parents":["node_modules/react-dom/lib/ReactDefaultInjection.js"]},"node_modules/react-dom/lib/ReactDefaultBatchingStrategy.js":{"index":292,"hash":"dOX0Yyk9pOqPXIfGqLX4","parents":["node_modules/react-dom/lib/ReactDefaultInjection.js"]},"node_modules/fbjs/lib/shallowEqual.js":{"index":60,"hash":"jefLFU70lRfqeYX4iPk+","parents":["node_modules/react-dom/lib/ReactCompositeComponent.js","node_modules/react-dom/lib/ReactDOMComponent.js","node_modules/react-dom/lib/SelectEventPlugin.js"]},"node_modules/fbjs/lib/getActiveElement.js":{"index":49,"hash":"ZXi6mEuxSgbXfhwrIbsp","parents":["node_modules/react-dom/lib/ReactInputSelection.js","node_modules/react-dom/lib/SelectEventPlugin.js"]},"node_modules/fbjs/lib/getUnboundedScrollPosition.js":{"index":51,"hash":"8a84qdyC4yXgJLS02Uq5","parents":["node_modules/react-dom/lib/ReactEventListener.js"]},"node_modules/react-dom/lib/ReactEventListener.js":{"index":298,"hash":"81/797kPTGIcJ+sXe8cX","parents":["node_modules/react-dom/lib/ReactDefaultInjection.js"]},"node_modules/fbjs/lib/EventListener.js":{"index":39,"hash":"z5K5k4mkF9L0b0NRSmJK","parents":["node_modules/react-dom/lib/ReactEventListener.js","node_modules/react-dom/lib/SimpleEventPlugin.js"]},"node_modules/react-dom/lib/ChangeEventPlugin.js":{"index":250,"hash":"H8Ebd8ssjQ+no+Jl+Uz3","parents":["node_modules/react-dom/lib/ReactDefaultInjection.js"]},"node_modules/react-dom/lib/EventPropagators.js":{"index":262,"hash":"YOWuI22VCqtDkRT/v0ba","parents":["node_modules/react-dom/lib/ChangeEventPlugin.js","node_modules/react-dom/lib/EnterLeaveEventPlugin.js","node_modules/react-dom/lib/BeforeInputEventPlugin.js","node_modules/react-dom/lib/SimpleEventPlugin.js","node_modules/react-dom/lib/SelectEventPlugin.js"]},"node_modules/react-dom/lib/isEventSupported.js":{"index":360,"hash":"egamHhCeS4KsU4pjE5zf","parents":["node_modules/react-dom/lib/ChangeEventPlugin.js","node_modules/react-dom/lib/ReactBrowserEventEmitter.js","node_modules/react-dom/lib/ReactDOMComponent.js"]},"node_modules/react-dom/lib/ReactOwner.js":{"index":311,"hash":"D1BM41AJG48G1/N4qBfT","parents":["node_modules/react-dom/lib/ReactRef.js"]},"node_modules/react-dom/lib/ReactRef.js":{"index":316,"hash":"EvFDz8e8qEr6UynRDpIN","parents":["node_modules/react-dom/lib/ReactReconciler.js"]},"node_modules/react-dom/lib/validateDOMNesting.js":{"index":369,"hash":"5bisu4GlO5JxMooPk4+e","parents":["node_modules/react-dom/lib/ReactDOMContainerInfo.js","node_modules/react-dom/lib/ReactDOMComponent.js","node_modules/react-dom/lib/ReactDOMTextComponent.js"]},"node_modules/react-dom/lib/ReactDOMContainerInfo.js":{"index":277,"hash":"PBNJvI1FMUFJDrfEc7Eb","parents":["node_modules/react-dom/lib/ReactMount.js"]},"node_modules/react-dom/lib/setTextContent.js":{"index":366,"hash":"ZzQh+uzghk+bwDANOdqc","parents":["node_modules/react-dom/lib/DOMLazyTree.js","node_modules/react-dom/lib/DOMChildrenOperations.js"]},"node_modules/react-dom/lib/getVendorPrefixedEventName.js":{"index":357,"hash":"TyJltwlPNecCOlO919kK","parents":["node_modules/react-dom/lib/ReactBrowserEventEmitter.js"]},"node_modules/react-dom/lib/ReactHostComponent.js":{"index":300,"hash":"po4XomHGWM6tlkm+03RF","parents":["node_modules/react-dom/lib/ReactInjection.js","node_modules/react-dom/lib/instantiateReactComponent.js"]},"node_modules/react-dom/lib/ReactInvalidSetStateWarningHook.js":{"index":306,"hash":"jHwgWr8OcB5iqZB4OB+k","parents":["node_modules/react-dom/lib/ReactDebugTool.js"]},"node_modules/fbjs/lib/focusNode.js":{"index":48,"hash":"64O8NOj3dw9Hiknyc/gX","parents":["node_modules/react-dom/lib/AutoFocusUtils.js","node_modules/react-dom/lib/ReactInputSelection.js"]},"node_modules/react-dom/lib/EventPluginUtils.js":{"index":261,"hash":"cwhoD9ZBuyg6XlRK/HS1","parents":["node_modules/react-dom/lib/EventPluginHub.js","node_modules/react-dom/lib/ReactInjection.js","node_modules/react-dom/lib/EventPropagators.js"]},"node_modules/react-dom/lib/accumulateInto.js":{"index":340,"hash":"CeYuDGWSpuNIFXUhvanx","parents":["node_modules/react-dom/lib/EventPluginHub.js","node_modules/react-dom/lib/EventPropagators.js"]},"node_modules/react-dom/lib/ReactComponentEnvironment.js":{"index":271,"hash":"5W5mSp3Ciz05cmwmw96i","parents":["node_modules/react-dom/lib/ReactInjection.js","node_modules/react-dom/lib/ReactCompositeComponent.js","node_modules/react-dom/lib/ReactMultiChild.js"]},"node_modules/react-dom/lib/ReactInjection.js":{"index":302,"hash":"BWf+O3HQ+NRonU1cnM86","parents":["node_modules/react-dom/lib/ReactDefaultInjection.js"]},"node_modules/react-dom/lib/DOMPropertyOperations.js":{"index":255,"hash":"+kn69qN8qpOHzOoOvxrN","parents":["node_modules/react-dom/lib/ReactDOMInput.js","node_modules/react-dom/lib/ReactDOMComponent.js"]},"node_modules/react-dom/lib/ReactDOMOption.js":{"index":284,"hash":"01fAUniI462OBn7VgiS5","parents":["node_modules/react-dom/lib/ReactDOMComponent.js"]},"node_modules/react-dom/lib/ReactDOMSelect.js":{"index":285,"hash":"LiCqaUdW1e9b8LrdRhqO","parents":["node_modules/react-dom/lib/ReactDOMOption.js","node_modules/react-dom/lib/ReactDOMComponent.js"]},"node_modules/react-dom/lib/ReactDOMTextarea.js":{"index":288,"hash":"lynR+HEkFB/89x9Xlyj5","parents":["node_modules/react-dom/lib/ReactDOMComponent.js"]},"node_modules/react-dom/lib/LinkedValueUtils.js":{"index":266,"hash":"R5tBp6fu9W4PCAl08CPq","parents":["node_modules/react-dom/lib/ReactDOMTextarea.js","node_modules/react-dom/lib/ReactDOMInput.js","node_modules/react-dom/lib/ReactDOMSelect.js"]},"node_modules/react-dom/lib/AutoFocusUtils.js":{"index":245,"hash":"6LpP/oR7KCVxkx6SYExd","parents":["node_modules/react-dom/lib/ReactDOMComponent.js"]},"node_modules/react-dom/lib/ReactDOMInput.js":{"index":281,"hash":"v25VCx4SdLJLU6A0q5vL","parents":["node_modules/react-dom/lib/ReactDOMComponent.js"]},"node_modules/fbjs/lib/memoizeStringOnly.js":{"index":57,"hash":"5x9xsW9i68LGgwNRO7z4","parents":["node_modules/react-dom/lib/CSSPropertyOperations.js"]},"node_modules/react-dom/lib/checkReactTypeSpec.js":{"index":342,"hash":"tdXZWoQurYukWpF9UrIj","parents":["node_modules/react-dom/lib/ReactCompositeComponent.js"]},"node_modules/react-dom/lib/ReactCompositeComponent.js":{"index":272,"hash":"mkm+zVO6T4UYqmwxxo0P","parents":["node_modules/react-dom/lib/instantiateReactComponent.js"]},"node_modules/react-dom/lib/instantiateReactComponent.js":{"index":359,"hash":"hM13/mSBvce4unBaiqAa","parents":["node_modules/react-dom/lib/ReactMount.js","node_modules/react-dom/lib/ReactChildReconciler.js"]},"node_modules/react-dom/lib/EnterLeaveEventPlugin.js":{"index":258,"hash":"PRWmOVLcpRQqzIqwAvl5","parents":["node_modules/react-dom/lib/ReactDefaultInjection.js"]},"node_modules/react-dom/lib/ReactDOMSelection.js":{"index":286,"hash":"hN6TEsnZ45kN7ra48Nrg","parents":["node_modules/react-dom/lib/ReactInputSelection.js"]},"node_modules/react-dom/lib/getTextContentAccessor.js":{"index":356,"hash":"pGyv/ZOFVZg+p95Navur","parents":["node_modules/react-dom/lib/ReactDOMSelection.js","node_modules/react-dom/lib/FallbackCompositionState.js"]},"node_modules/react-dom/lib/FallbackCompositionState.js":{"index":263,"hash":"YiE0GEIsL7m5ea0Esn2M","parents":["node_modules/react-dom/lib/BeforeInputEventPlugin.js"]},"node_modules/react-dom/lib/BeforeInputEventPlugin.js":{"index":246,"hash":"35FuFENhc9Nx3OyxFjKB","parents":["node_modules/react-dom/lib/ReactDefaultInjection.js"]},"node_modules/react-dom/lib/ReactServerUpdateQueue.js":{"index":318,"hash":"6Qx8sS5DY0iUJLN0GJyF","parents":["node_modules/react-dom/lib/ReactServerRenderingTransaction.js"]},"node_modules/react-dom/lib/ReactServerRenderingTransaction.js":{"index":317,"hash":"etonZMGIW1XR5+1PRpTz","parents":["node_modules/react-dom/lib/ReactDOMComponent.js"]},"node_modules/react-dom/lib/dangerousStyleValue.js":{"index":344,"hash":"N6Yl6hVNPLypbQ8w3cGU","parents":["node_modules/react-dom/lib/CSSPropertyOperations.js"]},"node_modules/react-dom/lib/ReactChildReconciler.js":{"index":269,"hash":"8A3YyM9ozKn9y9ymdMKx","parents":["node_modules/react-dom/lib/ReactMultiChild.js"]},"node_modules/react-dom/lib/traverseAllChildren.js":{"index":368,"hash":"CbjuR52kLOtUPd36Wuyz","parents":["node_modules/react-dom/lib/ReactChildReconciler.js","node_modules/react-dom/lib/flattenChildren.js"]},"node_modules/react-dom/lib/flattenChildren.js":{"index":347,"hash":"ndHVvaCYLzTnYkeFrcuk","parents":["node_modules/react-dom/lib/ReactMultiChild.js"]},"node_modules/react-dom/lib/ReactMultiChild.js":{"index":309,"hash":"CbH4GgyS1ydUfeIJlcjm","parents":["node_modules/react-dom/lib/ReactDOMComponent.js"]},"node_modules/react/react.js":{"index":403,"hash":"+j4s6VmkcZuPV/pSouyL","parents":["node_modules/redbox-react/lib/index.js","lib/Autocomplete.js","examples/async-data/app.js"]},"node_modules/react-dom/lib/SimpleEventPlugin.js":{"index":324,"hash":"K1mjYRyUrh9NBD6SNAs0","parents":["node_modules/react-dom/lib/ReactDefaultInjection.js"]},"node_modules/fbjs/lib/camelize.js":{"index":41,"hash":"P1HbnjjJeHXsTGzPd9oY","parents":["node_modules/fbjs/lib/camelizeStyleName.js"]},"node_modules/fbjs/lib/camelizeStyleName.js":{"index":42,"hash":"WnFxsy0CdrduDGcIM2PL","parents":["node_modules/react-dom/lib/CSSPropertyOperations.js"]},"node_modules/fbjs/lib/hyphenate.js":{"index":52,"hash":"lSZzNw1QezHu6HRAhjST","parents":["node_modules/fbjs/lib/hyphenateStyleName.js"]},"node_modules/fbjs/lib/hyphenateStyleName.js":{"index":53,"hash":"6pYp+ClhpG0QTIpxBAjP","parents":["node_modules/react-dom/lib/CSSPropertyOperations.js"]},"node_modules/react-dom/lib/CSSPropertyOperations.js":{"index":248,"hash":"9IcqiUPj6bZiAttnaFMO","parents":["node_modules/react-dom/lib/ReactDOMComponent.js"]},"node_modules/react-dom/lib/ReactDOMComponent.js":{"index":274,"hash":"pVlm5wIjW1aY7ZjcDAt8","parents":["node_modules/react-dom/lib/ReactDefaultInjection.js"]},"node_modules/fbjs/lib/performance.js":{"index":58,"hash":"kwhNDmmyPwBL5JDyfzmD","parents":["node_modules/fbjs/lib/performanceNow.js"]},"node_modules/fbjs/lib/performanceNow.js":{"index":59,"hash":"04Z5zIYhh5rYqwpJ5GfP","parents":["node_modules/react-dom/lib/ReactDebugTool.js"]},"node_modules/react-dom/lib/ReactDebugTool.js":{"index":291,"hash":"34ne4wjlOCgpTraUWp2J","parents":["node_modules/react-dom/lib/ReactInstrumentation.js"]},"node_modules/fbjs/lib/isNode.js":{"index":55,"hash":"OSYt409dsTrA3mIztK8v","parents":["node_modules/fbjs/lib/isTextNode.js"]},"node_modules/fbjs/lib/isTextNode.js":{"index":56,"hash":"AGyKdOMIr+kGLByR9dj0","parents":["node_modules/fbjs/lib/containsNode.js"]},"node_modules/fbjs/lib/containsNode.js":{"index":43,"hash":"aNIVzoc/lqFmffSN1Fvm","parents":["node_modules/react-dom/lib/ReactInputSelection.js"]},"node_modules/react-dom/lib/SelectEventPlugin.js":{"index":323,"hash":"H16g3KWSOOi2T0uBzrVi","parents":["node_modules/react-dom/lib/ReactDefaultInjection.js"]},"node_modules/fbjs/lib/createArrayFromMixed.js":{"index":44,"hash":"r4xDy9H/F50HqPZ69Lbq","parents":["node_modules/fbjs/lib/createNodesFromMarkup.js"]},"node_modules/fbjs/lib/getMarkupWrap.js":{"index":50,"hash":"qzFshoCNI9sJkISZWCYV","parents":["node_modules/fbjs/lib/createNodesFromMarkup.js"]},"node_modules/fbjs/lib/createNodesFromMarkup.js":{"index":45,"hash":"Punm/JMwoDQQ+cn03KV8","parents":["node_modules/react-dom/lib/Danger.js"]},"node_modules/react-dom/lib/Danger.js":{"index":256,"hash":"mFjjMQKlkeps8iVBMgWL","parents":["node_modules/react-dom/lib/DOMChildrenOperations.js"]},"node_modules/react-dom/lib/ReactDOMTextComponent.js":{"index":287,"hash":"SW1WYqPDPMJu4S9HgjgP","parents":["node_modules/react-dom/lib/ReactDefaultInjection.js"]},"node_modules/react-dom/lib/ReactDefaultInjection.js":{"index":293,"hash":"gXX04Pht8FD90/zxsFTz","parents":["node_modules/react-dom/lib/ReactDOM.js"]},"node_modules/react-dom/lib/ReactDOM.js":{"index":273,"hash":"ByQxY7vgZxEDdlm6If5x","parents":["node_modules/react-dom/index.js"]},"node_modules/react-dom/index.js":{"index":243,"hash":"56HqrvmOM0fqw254EOgJ","parents":["node_modules/redbox-react/lib/index.js","lib/Autocomplete.js","examples/async-data/app.js"]},"node_modules/react-deep-force-update/lib/index.js":{"index":242,"hash":"5OCkcoha90CkTGqaGY9M","parents":["node_modules/react-proxy/modules/index.js"]},"node_modules/react-proxy/modules/index.js":{"index":374,"hash":"q1LfscspyVkFV53jVf0r","parents":["node_modules/react-transform-hmr/lib/index.js"]},"node_modules/react-transform-hmr/lib/index.js":{"index":377,"hash":"0hbkO9zTgH/wMst1Q0Fy","parents":["lib/Autocomplete.js","examples/async-data/app.js"]},"node_modules/redbox-react/lib/style.js":{"index":406,"hash":"YXwsgPYFR+wFz1mHi2cC","parents":["node_modules/redbox-react/lib/index.js"]},"node_modules/redbox-react/lib/lib.js":{"index":405,"hash":"w4umM5elHanUtnMgHoS+","parents":["node_modules/redbox-react/lib/index.js"]},"node_modules/redbox-react/lib/index.js":{"index":404,"hash":"BXKzeIXa6S0Esxwd9tD1","parents":["lib/Autocomplete.js","examples/async-data/app.js"]},"lib/Autocomplete.js":{"index":4,"hash":"RwLCXh0e0hE/krE+5rsN","parents":["lib/index.js"]},"lib/index.js":{"index":5,"hash":"hnK3r24fl/SGTaB7ejTc","parents":["examples/async-data/app.js"]},"../Harshil595/csvjson.json":{"index":1,"hash":"bmaAKuXaFDMyjkrCSZh/","parents":["lib/utils.js"]},"lib/utils.js":{"index":6,"hash":"+tJydCTacjwos2OyJDaT","parents":["examples/async-data/app.js"]},"examples/async-data/app.js":{"index":3,"hash":"aV6fxcVgGbCusgkcmGJe","parents":[]}};
  var originalEntries = ["/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/react-autocomplete/examples/async-data/app.js"];
  var updateUrl = "http://localhost:1337";
  var updateMode = "websocket";
  var supportModes = ["none","websocket"];
  var ignoreUnaccepted = true;
  var updateCacheBust = false;
  var bundleKey = "websocket:http://localhost:1337";
  var sioPath = "./node_modules/socket.io-client/lib/index.js";
  var incPath = "./node_modules/browserify-hmr/inc/index.js";

  if (!global._hmr) {
    try {
      Object.defineProperty(global, '_hmr', {value: {}});
    } catch(e) {
      global._hmr = {};
    }
  }

  if (!Object.prototype.hasOwnProperty.call(global._hmr, bundleKey)) {
    // Temporary hack so requiring modules works before the _hmr values are
    // correctly initialized.
    global._hmr[bundleKey] = {initModule: function(){}};
  }

  var main = require(incPath);
  var isFirstRun = main(
    moduleDefs, cachedModules, moduleMeta, updateUrl,
    updateMode, supportModes, ignoreUnaccepted, updateCacheBust, bundleKey,
    sioPath ? require(sioPath) : null,
    typeof __filename !== 'undefined' && __filename,
    typeof __dirname !== 'undefined' && __dirname
  );
  if (isFirstRun) {
    for (var i=0, len=originalEntries.length; i<len; i++) {
      require(originalEntries[i]);
    }
  }
}).call(
  this,
  typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},
  arguments[3], arguments[4], arguments[5], arguments[6]
);

},{"./node_modules/browserify-hmr/inc/index.js":14,"./node_modules/socket.io-client/lib/index.js":407,"/Users/gordon.rubin/Documents/stevens/fe-595-ws/midterm/react-autocomplete/examples/async-data/app.js":3}]},{},[2]);
